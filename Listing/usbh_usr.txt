; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\usbh_usr.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\usbh_usr.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\usbh_usr.crf --no_multibyte_chars ..\USB\USB_APP\usbh_usr.c]
                          THUMB

                          AREA ||i.OTG_FS_IRQHandler||, CODE, READONLY, ALIGN=1

                  OTG_FS_IRQHandler PROC
;;;23     //处理所有USB中断
;;;24     void OTG_FS_IRQHandler(void)
000000  4770              BX       lr
;;;25     {
;;;26       	//USBH_OTG_ISR_Handler(&USB_OTG_Core);
;;;27     } 
;;;28     //USB HOST 用户回调函数.
                          ENDP


                          AREA ||i.USBH_UDISK_Read||, CODE, READONLY, ALIGN=2

                  USBH_UDISK_Read PROC
;;;209    //返回值:错误状态;0,正常;其他,错误代码;		 
;;;210    u8 USBH_UDISK_Read(u8* buf,u32 sector,u32 cnt)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;211    {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4615              MOV      r5,r2
;;;212    	u8 res=1;
00000a  2401              MOVS     r4,#1
;;;213    	if(HCD_IsDeviceConnected(&USB_OTG_Core)&&AppState==USH_USR_FS_TEST)//连接还存在,且是APP测试状态
00000c  480f              LDR      r0,|L2.76|
00000e  f7fffffe          BL       HCD_IsDeviceConnected
000012  b1a8              CBZ      r0,|L2.64|
000014  480e              LDR      r0,|L2.80|
000016  7800              LDRB     r0,[r0,#0]  ; AppState
000018  2801              CMP      r0,#1
00001a  d111              BNE      |L2.64|
;;;214    	{  		    
;;;215    		do
;;;216    		{
;;;217    			res=USBH_MSC_Read10(&USB_OTG_Core,buf,sector,512*cnt);
00001c  026d              LSLS     r5,r5,#9
                  |L2.30|
00001e  462b              MOV      r3,r5
000020  463a              MOV      r2,r7
000022  4631              MOV      r1,r6
000024  4809              LDR      r0,|L2.76|
000026  f7fffffe          BL       USBH_MSC_Read10
00002a  4604              MOV      r4,r0
;;;218    			USBH_MSC_HandleBOTXfer(&USB_OTG_Core ,&USB_Host);		      
00002c  4909              LDR      r1,|L2.84|
00002e  4807              LDR      r0,|L2.76|
000030  f7fffffe          BL       USBH_MSC_HandleBOTXfer
;;;219    			if(!HCD_IsDeviceConnected(&USB_OTG_Core))
000034  4805              LDR      r0,|L2.76|
000036  f7fffffe          BL       HCD_IsDeviceConnected
00003a  b120              CBZ      r0,|L2.70|
;;;220    			{
;;;221    				res=1;//读写错误
;;;222    				break;
;;;223    			};   
;;;224    		}while(res==USBH_MSC_BUSY);
00003c  2c03              CMP      r4,#3
00003e  d0ee              BEQ      |L2.30|
                  |L2.64|
;;;225    	}else res=1;		  
;;;226    	if(res==USBH_MSC_OK)res=0;	
;;;227    	return res;
000040  4620              MOV      r0,r4
;;;228    }
000042  e8bd81f0          POP      {r4-r8,pc}
                  |L2.70|
000046  2401              MOVS     r4,#1                 ;221
000048  e7fa              B        |L2.64|
;;;229    
                          ENDP

00004a  0000              DCW      0x0000
                  |L2.76|
                          DCD      USB_OTG_Core
                  |L2.80|
                          DCD      ||area_number.26||
                  |L2.84|
                          DCD      USB_Host

                          AREA ||i.USBH_UDISK_Status||, CODE, READONLY, ALIGN=2

                  USBH_UDISK_Status PROC
;;;199    //      1,就绪
;;;200    u8 USBH_UDISK_Status(void)
000000  b510              PUSH     {r4,lr}
;;;201    {
;;;202    	return HCD_IsDeviceConnected(&USB_OTG_Core);//返回U盘状态
000002  4802              LDR      r0,|L3.12|
000004  f7fffffe          BL       HCD_IsDeviceConnected
000008  b2c0              UXTB     r0,r0
;;;203    }
00000a  bd10              POP      {r4,pc}
;;;204    
                          ENDP

                  |L3.12|
                          DCD      USB_OTG_Core

                          AREA ||i.USBH_UDISK_Write||, CODE, READONLY, ALIGN=2

                  USBH_UDISK_Write PROC
;;;234    //返回值:错误状态;0,正常;其他,错误代码;		 
;;;235    u8 USBH_UDISK_Write(u8* buf,u32 sector,u32 cnt)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;236    {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4615              MOV      r5,r2
;;;237    	u8 res=1;
00000a  2401              MOVS     r4,#1
;;;238    	if(HCD_IsDeviceConnected(&USB_OTG_Core)&&AppState==USH_USR_FS_TEST)//连接还存在,且是APP测试状态
00000c  480f              LDR      r0,|L4.76|
00000e  f7fffffe          BL       HCD_IsDeviceConnected
000012  b1a8              CBZ      r0,|L4.64|
000014  480e              LDR      r0,|L4.80|
000016  7800              LDRB     r0,[r0,#0]  ; AppState
000018  2801              CMP      r0,#1
00001a  d111              BNE      |L4.64|
;;;239    	{  		    
;;;240    		do
;;;241    		{
;;;242    			res=USBH_MSC_Write10(&USB_OTG_Core,buf,sector,512*cnt); 
00001c  026d              LSLS     r5,r5,#9
                  |L4.30|
00001e  462b              MOV      r3,r5
000020  463a              MOV      r2,r7
000022  4631              MOV      r1,r6
000024  4809              LDR      r0,|L4.76|
000026  f7fffffe          BL       USBH_MSC_Write10
00002a  4604              MOV      r4,r0
;;;243    			USBH_MSC_HandleBOTXfer(&USB_OTG_Core ,&USB_Host);		      
00002c  4909              LDR      r1,|L4.84|
00002e  4807              LDR      r0,|L4.76|
000030  f7fffffe          BL       USBH_MSC_HandleBOTXfer
;;;244    			if(!HCD_IsDeviceConnected(&USB_OTG_Core))
000034  4805              LDR      r0,|L4.76|
000036  f7fffffe          BL       HCD_IsDeviceConnected
00003a  b120              CBZ      r0,|L4.70|
;;;245    			{
;;;246    				res=1;//读写错误
;;;247    				break;
;;;248    			};   
;;;249    		}while(res==USBH_MSC_BUSY);
00003c  2c03              CMP      r4,#3
00003e  d0ee              BEQ      |L4.30|
                  |L4.64|
;;;250    	}else res=1;		  
;;;251    	if(res==USBH_MSC_OK)res=0;	
;;;252    	return res;
000040  4620              MOV      r0,r4
;;;253    }
000042  e8bd81f0          POP      {r4-r8,pc}
                  |L4.70|
000046  2401              MOVS     r4,#1                 ;246
000048  e7fa              B        |L4.64|
;;;254    
                          ENDP

00004a  0000              DCW      0x0000
                  |L4.76|
                          DCD      USB_OTG_Core
                  |L4.80|
                          DCD      ||area_number.26||
                  |L4.84|
                          DCD      USB_Host

                          AREA ||i.USBH_USR_Configuration_DescAvailable||, CODE, READONLY, ALIGN=1

                  USBH_USR_Configuration_DescAvailable PROC
;;;111    //配置描述符获有效
;;;112    void USBH_USR_Configuration_DescAvailable(USBH_CfgDesc_TypeDef * cfgDesc,
000000  7948              LDRB     r0,[r1,#5]
;;;113                                              USBH_InterfaceDesc_TypeDef *itfDesc,
;;;114                                              USBH_EpDesc_TypeDef *epDesc)
;;;115    {
;;;116    	USBH_InterfaceDesc_TypeDef *id; 
;;;117    	id = itfDesc;   
;;;118    	if((*id).bInterfaceClass==0x08)
;;;119    	{
;;;120    		//printf("可移动存储器设备!\r\n"); 
;;;121    	}else if((*id).bInterfaceClass==0x03)
;;;122    	{
;;;123    		//printf("HID 设备!\r\n"); 
;;;124    	}    
;;;125    }
000002  4770              BX       lr
;;;126    //获取到设备Manufacturer String
                          ENDP


                          AREA ||i.USBH_USR_DeInit||, CODE, READONLY, ALIGN=2

                  USBH_USR_DeInit PROC
;;;183    //用户要求重新初始化设备
;;;184    void USBH_USR_DeInit(void)
000000  4901              LDR      r1,|L6.8|
;;;185    {
;;;186      	AppState=USH_USR_FS_INIT;
000002  2000              MOVS     r0,#0
000004  7008              STRB     r0,[r1,#0]
;;;187    }
000006  4770              BX       lr
;;;188    //无法恢复的错误!!  
                          ENDP

                  |L6.8|
                          DCD      ||area_number.26||

                          AREA ||i.USBH_USR_DeviceAddressAssigned||, CODE, READONLY, ALIGN=1

                  USBH_USR_DeviceAddressAssigned PROC
;;;106    //从机地址分配成功
;;;107    void USBH_USR_DeviceAddressAssigned(void)
000000  4770              BX       lr
;;;108    {
;;;109    	//printf("从机地址分配成功!\r\n");   
;;;110    }
;;;111    //配置描述符获有效
                          ENDP


                          AREA ||i.USBH_USR_DeviceAttached||, CODE, READONLY, ALIGN=1

                  USBH_USR_DeviceAttached PROC
;;;61     //检测到U盘插入
;;;62     void USBH_USR_DeviceAttached(void)//U盘插入
000000  4770              BX       lr
;;;63     {
;;;64     	//printf("检测到USB设备插入!\r\n");
;;;65     }
;;;66     //检测到U盘拔出
                          ENDP


                          AREA ||i.USBH_USR_DeviceDisconnected||, CODE, READONLY, ALIGN=1

                  USBH_USR_DeviceDisconnected PROC
;;;66     //检测到U盘拔出
;;;67     void USBH_USR_DeviceDisconnected (void)//U盘移除
000000  4770              BX       lr
;;;68     {
;;;69     	//printf("USB设备拔出!\r\n");
;;;70     }  
;;;71     //复位从机
                          ENDP


                          AREA ||i.USBH_USR_DeviceNotSupported||, CODE, READONLY, ALIGN=2

                  USBH_USR_DeviceNotSupported PROC
;;;146    //无法识别的USB设备
;;;147    void USBH_USR_DeviceNotSupported(void)
000000  a001              ADR      r0,|L10.8|
;;;148    {
;;;149    	printf("无法识别的USB设备!\r\n\r\n");    
000002  f7ffbffe          B.W      __2printf
;;;150    }  
;;;151    //等待用户输入按键,执行下一步操作
                          ENDP

000006  0000              DCW      0x0000
                  |L10.8|
000008  cedeb7a8          DCB      206,222,183,168,202,182,177,240,181,196,"USB",201,232,177
00000c  cab6b1f0
000010  b5c45553
000014  42c9e8b1
000018  b8210d0a          DCB      184,"!\r\n\r\n",0
00001c  0d0a00  
00001f  00                DCB      0

                          AREA ||i.USBH_USR_DeviceSpeedDetected||, CODE, READONLY, ALIGN=1

                  USBH_USR_DeviceSpeedDetected PROC
;;;77     //DeviceSpeed:从机速度(0,1,2 / 其他)
;;;78     void USBH_USR_DeviceSpeedDetected(uint8_t DeviceSpeed)
000000  4770              BX       lr
;;;79     {
;;;80     	if(DeviceSpeed==HPRT0_PRTSPD_HIGH_SPEED)
;;;81     	{
;;;82     		//printf("高速(HS)USB设备!\r\n");
;;;83      	}  
;;;84     	else if(DeviceSpeed==HPRT0_PRTSPD_FULL_SPEED)
;;;85     	{
;;;86     		//printf("全速(FS)USB设备!\r\n"); 
;;;87     	}
;;;88     	else if(DeviceSpeed==HPRT0_PRTSPD_LOW_SPEED)
;;;89     	{
;;;90     		//printf("低速(LS)USB设备!\r\n");  
;;;91     	}
;;;92     	else
;;;93     	{
;;;94     		//printf("设备错误!\r\n");  
;;;95     	}
;;;96     }
;;;97     //检测到从机的描述符
                          ENDP


                          AREA ||i.USBH_USR_Device_DescAvailable||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  USBH_USR_Device_DescAvailable PROC
;;;98     //DeviceDesc:设备描述符指针
;;;99     void USBH_USR_Device_DescAvailable(void *DeviceDesc)
000000  b510              PUSH     {r4,lr}
;;;100    { 
000002  4604              MOV      r4,r0
;;;101    	USBH_DevDesc_TypeDef *hs;
;;;102    	hs=DeviceDesc;   
;;;103    	printf("VID: %04Xh\r\n" , (uint32_t)(*hs).idVendor); 
000004  a004              ADR      r0,|L12.24|
000006  8921              LDRH     r1,[r4,#8]
000008  f7fffffe          BL       __2printf
;;;104    	printf("PID: %04Xh\r\n" , (uint32_t)(*hs).idProduct); 
00000c  8961              LDRH     r1,[r4,#0xa]
00000e  e8bd4010          POP      {r4,lr}
000012  a005              ADR      r0,|L12.40|
000014  f7ffbffe          B.W      __2printf
;;;105    }
;;;106    //从机地址分配成功
                          ENDP

                  |L12.24|
000018  5649443a          DCB      "VID: %04Xh\r\n",0
00001c  20253034
000020  58680d0a
000024  00      
000025  00                DCB      0
000026  00                DCB      0
000027  00                DCB      0
                  |L12.40|
000028  5049443a          DCB      "PID: %04Xh\r\n",0
00002c  20253034
000030  58680d0a
000034  00      
000035  00                DCB      0
000036  00                DCB      0
000037  00                DCB      0

                          AREA ||i.USBH_USR_EnumerationDone||, CODE, READONLY, ALIGN=2

                  USBH_USR_EnumerationDone PROC
;;;141    //设备USB枚举完成
;;;142    void USBH_USR_EnumerationDone(void)
000000  a001              ADR      r0,|L13.8|
;;;143    { 
;;;144    	printf("设备枚举完成!\r\n\r\n");    
000002  f7ffbffe          B.W      __2printf
;;;145    } 
;;;146    //无法识别的USB设备
                          ENDP

000006  0000              DCW      0x0000
                  |L13.8|
000008  c9e8b1b8          DCB      201,232,177,184,195,182,190,217,205,234,179,201,"!\r\n\r"
00000c  c3b6bed9
000010  cdeab3c9
000014  210d0a0d
000018  0a00              DCB      "\n",0
00001a  00                DCB      0
00001b  00                DCB      0

                          AREA ||i.USBH_USR_Init||, CODE, READONLY, ALIGN=2

                  USBH_USR_Init PROC
;;;53     //USB HOST 初始化 
;;;54     void USBH_USR_Init(void)
000000  b510              PUSH     {r4,lr}
;;;55     {
;;;56     	printf("USB OTG HS MSC Host\r\n");
000002  a005              ADR      r0,|L14.24|
000004  f7fffffe          BL       __2printf
;;;57     	printf("> USB Host library started.\r\n");
000008  a009              ADR      r0,|L14.48|
00000a  f7fffffe          BL       __2printf
;;;58     	printf("  USB Host Library v2.1.0\r\n\r\n");
00000e  e8bd4010          POP      {r4,lr}
000012  a00f              ADR      r0,|L14.80|
000014  f7ffbffe          B.W      __2printf
;;;59     	
;;;60     }
;;;61     //检测到U盘插入
                          ENDP

                  |L14.24|
000018  55534220          DCB      "USB OTG HS MSC Host\r\n",0
00001c  4f544720
000020  4853204d
000024  53432048
000028  6f73740d
00002c  0a00    
00002e  00                DCB      0
00002f  00                DCB      0
                  |L14.48|
000030  3e205553          DCB      "> USB Host library started.\r\n",0
000034  4220486f
000038  7374206c
00003c  69627261
000040  72792073
000044  74617274
000048  65642e0d
00004c  0a00    
00004e  00                DCB      0
00004f  00                DCB      0
                  |L14.80|
000050  20205553          DCB      "  USB Host Library v2.1.0\r\n\r\n",0
000054  4220486f
000058  7374204c
00005c  69627261
000060  72792076
000064  322e312e
000068  300d0a0d
00006c  0a00    
00006e  00                DCB      0
00006f  00                DCB      0

                          AREA ||i.USBH_USR_MSC_Application||, CODE, READONLY, ALIGN=2

                  USBH_USR_MSC_Application PROC
;;;164    //USB HOST MSC类用户应用程序
;;;165    int USBH_USR_MSC_Application(void)
000000  b570              PUSH     {r4-r6,lr}
;;;166    {
;;;167    	u8 res=0;
000002  2400              MOVS     r4,#0
;;;168      	switch(AppState)
000004  4d08              LDR      r5,|L15.40|
000006  7829              LDRB     r1,[r5,#0]  ; AppState
000008  2900              CMP      r1,#0
00000a  d002              BEQ      |L15.18|
00000c  2901              CMP      r1,#1
00000e  d109              BNE      |L15.36|
000010  e005              B        |L15.30|
                  |L15.18|
;;;169      	{
;;;170        	case USH_USR_FS_INIT://初始化文件系统 
;;;171    			printf("开始执行用户程序!!!\r\n");
000012  a006              ADR      r0,|L15.44|
000014  f7fffffe          BL       __2printf
;;;172    			AppState=USH_USR_FS_TEST;
000018  2001              MOVS     r0,#1
00001a  7028              STRB     r0,[r5,#0]
;;;173          		break;
00001c  e002              B        |L15.36|
                  |L15.30|
;;;174        	case USH_USR_FS_TEST:	//执行USB OTG 测试主程序
;;;175    			res=USH_User_App(); //用户主程序
00001e  f7fffffe          BL       USH_User_App
;;;176         		res=0;
000022  2400              MOVS     r4,#0
                  |L15.36|
;;;177    			if(res)AppState=USH_USR_FS_INIT;
;;;178          		break;
;;;179        	default:break;
;;;180      	} 
;;;181    	return res;
000024  4620              MOV      r0,r4
;;;182    }
000026  bd70              POP      {r4-r6,pc}
;;;183    //用户要求重新初始化设备
                          ENDP

                  |L15.40|
                          DCD      ||area_number.26||
                  |L15.44|
00002c  bfaacabc          DCB      191,170,202,188,214,180,208,208,211,195,187,167,179,204,208
000030  d6b4d0d0
000034  d3c3bba7
000038  b3ccd0  
00003b  f2212121          DCB      242,"!!!\r\n",0
00003f  0d0a00  
000042  00                DCB      0
000043  00                DCB      0

                          AREA ||i.USBH_USR_Manufacturer_String||, CODE, READONLY, ALIGN=1

                  USBH_USR_Manufacturer_String PROC
;;;126    //获取到设备Manufacturer String
;;;127    void USBH_USR_Manufacturer_String(void *ManufacturerString)
000000  4770              BX       lr
;;;128    {
;;;129    	//printf("Manufacturer: %s\r\n",(char *)ManufacturerString);
;;;130    }
;;;131    //获取到设备Product String 
                          ENDP


                          AREA ||i.USBH_USR_OverCurrentDetected||, CODE, READONLY, ALIGN=2

                  USBH_USR_OverCurrentDetected PROC
;;;157    //USB接口电流过载
;;;158    void USBH_USR_OverCurrentDetected (void)
000000  a001              ADR      r0,|L17.8|
;;;159    {
;;;160    	printf("端口电流过大!!!\r\n");
000002  f7ffbffe          B.W      __2printf
;;;161    } 
;;;162    
                          ENDP

000006  0000              DCW      0x0000
                  |L17.8|
000008  b6cbbfda          DCB      182,203,191,218,181,231,193,247,185,253,180,243,"!!!\r\n"
00000c  b5e7c1f7
000010  b9fdb4f3
000014  2121210d
000018  0a      
000019  00                DCB      0
00001a  00                DCB      0
00001b  00                DCB      0

                          AREA ||i.USBH_USR_Product_String||, CODE, READONLY, ALIGN=1

                  USBH_USR_Product_String PROC
;;;131    //获取到设备Product String 
;;;132    void USBH_USR_Product_String(void *ProductString)
000000  4770              BX       lr
;;;133    {
;;;134    	//printf("Product: %s\r\n",(char *)ProductString);  
;;;135    }
;;;136    //获取到设备SerialNum String 
                          ENDP


                          AREA ||i.USBH_USR_ResetDevice||, CODE, READONLY, ALIGN=1

                  USBH_USR_ResetDevice PROC
;;;71     //复位从机
;;;72     void USBH_USR_ResetDevice(void)
000000  4770              BX       lr
;;;73     {
;;;74     	//printf("复位设备...\r\n");
;;;75     }
;;;76     //检测到从机速度
                          ENDP


                          AREA ||i.USBH_USR_SerialNum_String||, CODE, READONLY, ALIGN=1

                  USBH_USR_SerialNum_String PROC
;;;136    //获取到设备SerialNum String 
;;;137    void USBH_USR_SerialNum_String(void *SerialNumString)
000000  4770              BX       lr
;;;138    {
;;;139    	//printf("Serial Number: %s\r\n",(char *)SerialNumString);    
;;;140    } 
;;;141    //设备USB枚举完成
                          ENDP


                          AREA ||i.USBH_USR_UnrecoveredError||, CODE, READONLY, ALIGN=2

                  USBH_USR_UnrecoveredError PROC
;;;188    //无法恢复的错误!!  
;;;189    void USBH_USR_UnrecoveredError (void)
000000  a001              ADR      r0,|L21.8|
;;;190    {
;;;191    	printf("无法恢复的错误!!!\r\n\r\n");	
000002  f7ffbffe          B.W      __2printf
;;;192    }
;;;193    ////////////////////////////////////////////////////////////////////////////////////////
                          ENDP

000006  0000              DCW      0x0000
                  |L21.8|
000008  cedeb7a8          DCB      206,222,183,168,187,214,184,180,181,196,180,237,206,243,"!"
00000c  bbd6b8b4
000010  b5c4b4ed
000014  cef321  
000017  21210d0a          DCB      "!!\r\n\r\n",0
00001b  0d0a00  
00001e  00                DCB      0
00001f  00                DCB      0

                          AREA ||i.USBH_USR_UserInput||, CODE, READONLY, ALIGN=2

                  USBH_USR_UserInput PROC
;;;151    //等待用户输入按键,执行下一步操作
;;;152    USBH_USR_Status USBH_USR_UserInput(void)
000000  b510              PUSH     {r4,lr}
;;;153    { 
;;;154    	printf("跳过用户确认步骤!\r\n");
000002  a002              ADR      r0,|L22.12|
000004  f7fffffe          BL       __2printf
;;;155    	return USBH_USR_RESP_OK;
000008  2001              MOVS     r0,#1
;;;156    } 
00000a  bd10              POP      {r4,pc}
;;;157    //USB接口电流过载
                          ENDP

                  |L22.12|
00000c  ccf8b9fd          DCB      204,248,185,253,211,195,187,167,200,183,200,207,178,189,214
000010  d3c3bba7
000014  c8b7c8cf
000018  b2bdd6  
00001b  e8210d0a          DCB      232,"!\r\n",0
00001f  00      

                          AREA ||.data||, DATA, ALIGN=2

                  USR_Callbacks
                          DCD      USBH_USR_Init
                          DCD      USBH_USR_DeInit
                          DCD      USBH_USR_DeviceAttached
                          DCD      USBH_USR_ResetDevice
                          DCD      USBH_USR_DeviceDisconnected
                          DCD      USBH_USR_OverCurrentDetected
                          DCD      USBH_USR_DeviceSpeedDetected
                          DCD      USBH_USR_Device_DescAvailable
                          DCD      USBH_USR_DeviceAddressAssigned
                          DCD      USBH_USR_Configuration_DescAvailable
                          DCD      USBH_USR_Manufacturer_String
                          DCD      USBH_USR_Product_String
                          DCD      USBH_USR_SerialNum_String
                          DCD      USBH_USR_EnumerationDone
                          DCD      USBH_USR_UserInput
                          DCD      USBH_USR_MSC_Application
                          DCD      USBH_USR_DeviceNotSupported
                          DCD      USBH_USR_UnrecoveredError

                          AREA ||area_number.26||, DATA, ALIGN=0

                          EXPORTAS ||area_number.26||, ||.data||
                  AppState
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\USB\\USB_APP\\usbh_usr.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_usbh_usr_c_b52c82f6____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_usbh_usr_c_b52c82f6____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_usbh_usr_c_b52c82f6____REVSH|
#line 144
|__asm___10_usbh_usr_c_b52c82f6____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
