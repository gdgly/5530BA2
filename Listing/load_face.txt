; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\load_face.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\load_face.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\load_face.crf --no_multibyte_chars ..\APP\load_Face.c]
                          THUMB

                          AREA ||i.CreateWindow2||, CODE, READONLY, ALIGN=2

                  CreateWindow2 PROC
;;;599    
;;;600    WM_HWIN CreateWindow2(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;601      if(page_sw == face_graph)
000002  4c23              LDR      r4,|L1.144|
000004  7820              LDRB     r0,[r4,#0]  ; page_sw
000006  2800              CMP      r0,#0
000008  d001              BEQ      |L1.14|
;;;602      {      
;;;603      }else{
;;;604          IO_OFF();
00000a  f7fffffe          BL       IO_OFF
                  |L1.14|
;;;605      }
;;;606      page_sw = face_load;
00000e  2004              MOVS     r0,#4
000010  7020              STRB     r0,[r4,#0]
;;;607      track = face_load;
000012  4920              LDR      r1,|L1.148|
000014  7008              STRB     r0,[r1,#0]
;;;608      set_sw = set_24;
000016  4920              LDR      r1,|L1.152|
000018  2017              MOVS     r0,#0x17
00001a  7008              STRB     r0,[r1,#0]
;;;609      load_cutoffv = (float)set_load_cutoffv/1000;
00001c  481f              LDR      r0,|L1.156|
00001e  eddf0a20          VLDR     s1,|L1.160|
000022  4e20              LDR      r6,|L1.164|
000024  ed900a04          VLDR     s0,[r0,#0x10]
000028  eeb80ac0          VCVT.F32.S32 s0,s0
00002c  ee801a20          VDIV.F32 s2,s0,s1
000030  ed861a02          VSTR     s2,[r6,#8]
;;;610      SET_Current_Laod = load_c;
000034  4c1c              LDR      r4,|L1.168|
000036  f8d40094          LDR      r0,[r4,#0x94]  ; Run_Control
00003a  6120              STR      r0,[r4,#0x10]  ; Run_Control
;;;611      if(SET_Current_Laod > 2500)
00003c  6920              LDR      r0,[r4,#0x10]  ; Run_Control
00003e  f64011c4          MOV      r1,#0x9c4
000042  4288              CMP      r0,r1
000044  d903              BLS      |L1.78|
;;;612      {
;;;613    	  C_SW(1);
000046  2001              MOVS     r0,#1
000048  f7fffffe          BL       C_SW
00004c  e002              B        |L1.84|
                  |L1.78|
;;;614      }else{
;;;615    	  C_SW(0);
00004e  2000              MOVS     r0,#0
000050  f7fffffe          BL       C_SW
                  |L1.84|
;;;616      }
;;;617      pass = 0;  
000054  4815              LDR      r0,|L1.172|
000056  2500              MOVS     r5,#0
000058  7005              STRB     r5,[r0,#0]
;;;618      mode_sw = mode_load;
00005a  4915              LDR      r1,|L1.176|
00005c  2002              MOVS     r0,#2
00005e  7008              STRB     r0,[r1,#0]
;;;619      SET_Voltage_Laod = load_v; 
000060  f8d400a4          LDR      r0,[r4,#0xa4]  ; Run_Control
000064  60e0              STR      r0,[r4,#0xc]  ; Run_Control
;;;620    //   GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;621    //   GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
;;;622    //   GPIO_SetBits(GPIOC,GPIO_Pin_13);//关闭电源输出继电器
;;;623      TM1650_SET_LED(0x68,0x70);
000066  2170              MOVS     r1,#0x70
000068  2068              MOVS     r0,#0x68
00006a  f7fffffe          BL       TM1650_SET_LED
;;;624      GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
00006e  f44f5180          MOV      r1,#0x1000
000072  4810              LDR      r0,|L1.180|
000074  f7fffffe          BL       GPIO_ResetBits
;;;625      load_wind = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_HBKWIN, 0, 0);
000078  f7fffffe          BL       WM_GetDesktopWindow
00007c  4603              MOV      r3,r0
00007e  9500              STR      r5,[sp,#0]
000080  4a0d              LDR      r2,|L1.184|
000082  2118              MOVS     r1,#0x18
000084  480d              LDR      r0,|L1.188|
000086  9501              STR      r5,[sp,#4]
000088  f7fffffe          BL       GUI_CreateDialogBox
00008c  6070              STR      r0,[r6,#4]  ; load_wind
;;;626      return load_wind;
;;;627    }
00008e  bd7c              POP      {r2-r6,pc}
;;;628    
                          ENDP

                  |L1.144|
                          DCD      page_sw
                  |L1.148|
                          DCD      track
                  |L1.152|
                          DCD      set_sw
                  |L1.156|
                          DCD      InFlashSave
                  |L1.160|
0000a0  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.164|
                          DCD      ||.data||
                  |L1.168|
                          DCD      Run_Control
                  |L1.172|
                          DCD      pass
                  |L1.176|
                          DCD      mode_sw
                  |L1.180|
                          DCD      0x40020c00
                  |L1.184|
                          DCD      _cbDialog2
                  |L1.188|
                          DCD      ||.constdata||

                          AREA ||i.DEL_LOAD||, CODE, READONLY, ALIGN=2

                  DEL_LOAD PROC
;;;929    }
;;;930    void DEL_LOAD(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;931    {
;;;932    	switch(set_sw){
000004  4827              LDR      r0,|L2.164|
000006  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;933    		case set_25:
;;;934            {
;;;935    			WM_HWIN hItem;
;;;936    //            WM_InvalidateWindow(hWinWind);
;;;937                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
000008  4827              LDR      r0,|L2.168|
;;;938    			if(bit > 0)
;;;939    			{
;;;940    				bit --;
;;;941    				set_limit[bit] = '\0';
00000a  4f28              LDR      r7,|L2.172|
00000c  2400              MOVS     r4,#0                 ;937
00000e  6840              LDR      r0,[r0,#4]            ;937
000010  4d27              LDR      r5,|L2.176|
;;;942    			}
;;;943    			if(bit == dot_flag)
000012  4e28              LDR      r6,|L2.180|
000014  2918              CMP      r1,#0x18              ;932
000016  d018              BEQ      |L2.74|
000018  2943              CMP      r1,#0x43              ;932
00001a  d02b              BEQ      |L2.116|
00001c  2956              CMP      r1,#0x56              ;932
00001e  d13e              BNE      |L2.158|
;;;944    			{
;;;945    				dot_flag = 0;
;;;946    			}
;;;947    			TEXT_SetText(hItem,set_limit);
;;;948    		}break;
;;;949    		case set_68:
;;;950            {
;;;951    			WM_HWIN hItem;
;;;952    //            WM_InvalidateWindow(hWinWind);
;;;953                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;954    			if(bit > 0)
;;;955    			{
;;;956    				bit --;
;;;957    				set_limit[bit] = '\0';
;;;958    			}
;;;959    			if(bit == dot_flag)
;;;960    			{
;;;961    				dot_flag = 0;
;;;962    			}
;;;963    			TEXT_SetText(hItem,set_limit);
;;;964    		}break;
;;;965    		case set_87:
;;;966            {
;;;967                WM_HWIN hItem;
;;;968    //            WM_InvalidateWindow(hWinWind);
;;;969                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000020  f640112d          MOV      r1,#0x92d
000024  f7fffffe          BL       WM_GetDialogItem
;;;970    			if(bit > 0)
000028  7829              LDRB     r1,[r5,#0]  ; bit
00002a  b121              CBZ      r1,|L2.54|
;;;971    			{
;;;972    				bit --;
00002c  7829              LDRB     r1,[r5,#0]  ; bit
00002e  1e49              SUBS     r1,r1,#1
000030  7029              STRB     r1,[r5,#0]
;;;973    				set_limit[bit] = '\0';
000032  7829              LDRB     r1,[r5,#0]  ; bit
000034  547c              STRB     r4,[r7,r1]
                  |L2.54|
;;;974    			}
;;;975    			if(bit == dot_flag)
000036  7829              LDRB     r1,[r5,#0]  ; bit
000038  7832              LDRB     r2,[r6,#0]  ; dot_flag
00003a  4291              CMP      r1,r2
00003c  d100              BNE      |L2.64|
;;;976    			{
;;;977    				dot_flag = 0;
00003e  7034              STRB     r4,[r6,#0]
                  |L2.64|
;;;978    			}
;;;979    			TEXT_SetText(hItem,set_limit);
000040  e8bd41f0          POP      {r4-r8,lr}
000044  4919              LDR      r1,|L2.172|
000046  f7ffbffe          B.W      TEXT_SetText
                  |L2.74|
00004a  f640016e          MOV      r1,#0x86e             ;937
00004e  f7fffffe          BL       WM_GetDialogItem
000052  7829              LDRB     r1,[r5,#0]            ;938  ; bit
000054  b121              CBZ      r1,|L2.96|
000056  7829              LDRB     r1,[r5,#0]            ;940  ; bit
000058  1e49              SUBS     r1,r1,#1              ;940
00005a  7029              STRB     r1,[r5,#0]            ;940
00005c  7829              LDRB     r1,[r5,#0]            ;941  ; bit
00005e  547c              STRB     r4,[r7,r1]            ;941
                  |L2.96|
000060  7829              LDRB     r1,[r5,#0]            ;943  ; bit
000062  7832              LDRB     r2,[r6,#0]            ;943  ; dot_flag
000064  4291              CMP      r1,r2                 ;943
000066  d100              BNE      |L2.106|
000068  7034              STRB     r4,[r6,#0]            ;945
                  |L2.106|
00006a  e8bd41f0          POP      {r4-r8,lr}            ;947
00006e  490f              LDR      r1,|L2.172|
000070  f7ffbffe          B.W      TEXT_SetText
                  |L2.116|
000074  f6401111          MOV      r1,#0x911             ;953
000078  f7fffffe          BL       WM_GetDialogItem
00007c  7829              LDRB     r1,[r5,#0]            ;954  ; bit
00007e  b121              CBZ      r1,|L2.138|
000080  7829              LDRB     r1,[r5,#0]            ;956  ; bit
000082  1e49              SUBS     r1,r1,#1              ;956
000084  7029              STRB     r1,[r5,#0]            ;956
000086  7829              LDRB     r1,[r5,#0]            ;957  ; bit
000088  547c              STRB     r4,[r7,r1]            ;957
                  |L2.138|
00008a  7829              LDRB     r1,[r5,#0]            ;959  ; bit
00008c  7832              LDRB     r2,[r6,#0]            ;959  ; dot_flag
00008e  4291              CMP      r1,r2                 ;959
000090  d100              BNE      |L2.148|
000092  7034              STRB     r4,[r6,#0]            ;961
                  |L2.148|
000094  e8bd41f0          POP      {r4-r8,lr}            ;963
000098  4904              LDR      r1,|L2.172|
00009a  f7ffbffe          B.W      TEXT_SetText
                  |L2.158|
;;;980    		}break;
;;;981    	}
;;;982    }
00009e  e8bd81f0          POP      {r4-r8,pc}
;;;983    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L2.164|
                          DCD      set_sw
                  |L2.168|
                          DCD      ||.data||
                  |L2.172|
                          DCD      set_limit
                  |L2.176|
                          DCD      bit
                  |L2.180|
                          DCD      dot_flag

                          AREA ||i.INPUT_LOAD||, CODE, READONLY, ALIGN=2

                  INPUT_LOAD PROC
;;;984    void INPUT_LOAD(char* num);            
;;;985    void INPUT_LOAD(char* num){
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4681              MOV      r9,r0
;;;986    	u8 i;    
;;;987        switch(set_sw)
000006  484f              LDR      r0,|L3.324|
000008  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;988        {
;;;989            case set_25:
;;;990            {
;;;991                WM_HWIN hItem;
;;;992     //           WM_InvalidateWindow(load_wind);
;;;993                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
00000a  484f              LDR      r0,|L3.328|
00000c  2400              MOVS     r4,#0
;;;994    			if(bit < 6)
;;;995    			{
;;;996    				strcat(set_limit,num);
00000e  4d4f              LDR      r5,|L3.332|
000010  6840              LDR      r0,[r0,#4]            ;993
;;;997    				if(dot_flag != 0 && strcmp(num,".") == 0)
000012  f8df813c          LDR      r8,|L3.336|
000016  4f4f              LDR      r7,|L3.340|
000018  2918              CMP      r1,#0x18              ;987
00001a  d01d              BEQ      |L3.88|
00001c  2943              CMP      r1,#0x43              ;987
00001e  d04b              BEQ      |L3.184|
000020  2956              CMP      r1,#0x56              ;987
000022  d17c              BNE      |L3.286|
;;;998    				{
;;;999    					
;;;1000   				}else{			
;;;1001   					
;;;1002   					if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1003   					{
;;;1004   						dot_flag = bit;
;;;1005   					}
;;;1006   					bit ++;
;;;1007   				}
;;;1008   			}else{
;;;1009   				bit = 0;
;;;1010   				for(i=0;i<6;i++)
;;;1011   				{
;;;1012   					set_limit[i] = '\0';
;;;1013   				}
;;;1014   			}
;;;1015   			
;;;1016   			TEXT_SetText(hItem,set_limit);
;;;1017   //            switch(bit){
;;;1018   //                case 1:
;;;1019   //                {
;;;1020   //					for(i=0;i<6;i++)
;;;1021   //					{
;;;1022   //						set_limit[i] = '\0';
;;;1023   //					}
;;;1024   //                    load_c = atoi(num) * 1000;
;;;1025   //                    strcat(set_limit,num);            
;;;1026   //                    TEXT_SetText(hItem,set_limit);
;;;1027   //                    
;;;1028   //                    bit = 2;
;;;1029   //                    break;
;;;1030   //                }
;;;1031   //                case 2:
;;;1032   //                {
;;;1033   //                    strcat(set_limit,num);            
;;;1034   //                    TEXT_SetText(hItem,set_limit);
;;;1035   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1036   //                    {
;;;1037   //                        dot_flag = 1;
;;;1038   //                    }else{
;;;1039   //                        load_c = load_c * 10 + atoi(num) * 1000;
;;;1040   //                    }
;;;1041   //                    bit = 3;
;;;1042   //                    break;
;;;1043   //                }
;;;1044   //                case 3:
;;;1045   //                {
;;;1046   //                    strcat(set_limit,num);
;;;1047   //                    TEXT_SetText(hItem,set_limit);
;;;1048   //                    if(dot_flag == 0)
;;;1049   //                    {
;;;1050   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1051   //                        {                            
;;;1052   //                            dot_flag = 2;
;;;1053   //                        }else{
;;;1054   //                            load_c = 0;
;;;1055   //                        }
;;;1056   //                    }else{
;;;1057   //                        load_c = load_c + atoi(num) * 100;
;;;1058   //                    }                  
;;;1059   //                    bit = 4;
;;;1060   //                    break;
;;;1061   //                }
;;;1062   //                case 4:
;;;1063   //                {
;;;1064   //                    strcat(set_limit,num);
;;;1065   //                    TEXT_SetText(hItem,set_limit);
;;;1066   //                    if(dot_flag == 0)
;;;1067   //                    {
;;;1068   //                        load_c = 0;
;;;1069   //                    }else if(dot_flag == 2){
;;;1070   //                        load_c = load_c + atoi(num) * 100;
;;;1071   //                    }else{
;;;1072   //                        load_c = load_c + atoi(num) * 10;
;;;1073   //                    }                  
;;;1074   //                    bit = 5;
;;;1075   //                    break;
;;;1076   //                }
;;;1077   //                case 5:
;;;1078   //                {
;;;1079   //                    strcat(set_limit,num);
;;;1080   //                    TEXT_SetText(hItem,set_limit);
;;;1081   //                    if(dot_flag == 0)
;;;1082   //                    {
;;;1083   //                        load_c = 0;
;;;1084   //                    }else if(dot_flag == 1){
;;;1085   //                        load_c = load_c + atoi(num);
;;;1086   //                    }else{
;;;1087   //                        load_c = load_c + atoi(num) * 10;
;;;1088   //                    }                 
;;;1089   //                    bit = 6;
;;;1090   //                    break;
;;;1091   //                }
;;;1092   //                case 6:
;;;1093   //                {
;;;1094   //                    strcat(set_limit,num);
;;;1095   //                    TEXT_SetText(hItem,set_limit);
;;;1096   //                    if(dot_flag == 0)
;;;1097   //                    {
;;;1098   //                        load_c = 0;
;;;1099   //                    }else if(dot_flag == 2){
;;;1100   //                        load_c = load_c + atoi(num);
;;;1101   //                    }                 
;;;1102   //                    bit = 0;
;;;1103   //                    break;
;;;1104   //                }
;;;1105   //            }
;;;1106               break;
;;;1107               
;;;1108           }
;;;1109           case set_68:
;;;1110           {
;;;1111               WM_HWIN hItem;
;;;1112    //           WM_InvalidateWindow(load_wind);
;;;1113               hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;1114   			if(bit < 6)
;;;1115   			{
;;;1116   				strcat(set_limit,num);
;;;1117   				if(dot_flag != 0 && strcmp(num,".") == 0)
;;;1118   				{
;;;1119   					
;;;1120   				}else{			
;;;1121   					
;;;1122   					if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1123   					{
;;;1124   						dot_flag = bit;
;;;1125   					}
;;;1126   					bit ++;
;;;1127   				}
;;;1128   			}else{
;;;1129   				bit = 0;
;;;1130   				for(i=0;i<6;i++)
;;;1131   				{
;;;1132   					set_limit[i] = '\0';
;;;1133   				}
;;;1134   			}
;;;1135   			
;;;1136   			TEXT_SetText(hItem,set_limit);
;;;1137   //            switch(bit){
;;;1138   //                case 1:
;;;1139   //                {
;;;1140   //					for(i=0;i<6;i++)
;;;1141   //					{
;;;1142   //						set_limit[i] = '\0';
;;;1143   //					}
;;;1144   //                    load_v = atoi(num) * 1000;
;;;1145   //                    strcat(set_limit,num);            
;;;1146   //                    TEXT_SetText(hItem,set_limit);
;;;1147   //                    
;;;1148   //                    bit = 2;
;;;1149   //                    break;
;;;1150   //                }
;;;1151   //                case 2:
;;;1152   //                {
;;;1153   //                    strcat(set_limit,num);            
;;;1154   //                    TEXT_SetText(hItem,set_limit);
;;;1155   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1156   //                    {
;;;1157   //                        dot_flag = 1;
;;;1158   //                    }else{
;;;1159   //                        load_v = load_v * 10 + atoi(num) * 1000;
;;;1160   //                    }
;;;1161   //                    bit = 3;
;;;1162   //                    break;
;;;1163   //                }
;;;1164   //                case 3:
;;;1165   //                {
;;;1166   //                    strcat(set_limit,num);
;;;1167   //                    TEXT_SetText(hItem,set_limit);
;;;1168   //                    if(dot_flag == 0)
;;;1169   //                    {
;;;1170   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1171   //                        {                            
;;;1172   //                            dot_flag = 2;
;;;1173   //                        }else{
;;;1174   //                            load_v = 0;
;;;1175   //                        }
;;;1176   //                    }else{
;;;1177   //                        load_v = load_v + atoi(num) * 100;
;;;1178   //                    }                  
;;;1179   //                    bit = 4;
;;;1180   //                    break;
;;;1181   //                }
;;;1182   //                case 4:
;;;1183   //                {
;;;1184   //                    strcat(set_limit,num);
;;;1185   //                    TEXT_SetText(hItem,set_limit);
;;;1186   //                    if(dot_flag == 0)
;;;1187   //                    {
;;;1188   //                        load_v = 0;
;;;1189   //                    }else if(dot_flag == 2){
;;;1190   //                        load_v = load_v + atoi(num) * 100;
;;;1191   //                    }else{
;;;1192   //                        load_v = load_v + atoi(num) * 10;
;;;1193   //                    }                  
;;;1194   //                    bit = 5;
;;;1195   //                    break;
;;;1196   //                }
;;;1197   //                case 5:
;;;1198   //                {
;;;1199   //                    strcat(set_limit,num);
;;;1200   //                    TEXT_SetText(hItem,set_limit);
;;;1201   //                    if(dot_flag == 0)
;;;1202   //                    {
;;;1203   //                        load_v = 0;
;;;1204   //                    }else if(dot_flag == 1){
;;;1205   //                        load_v = load_v + atoi(num);
;;;1206   //                    }else{
;;;1207   //                        load_v = load_v + atoi(num) * 10;
;;;1208   //                    }                 
;;;1209   //                    bit = 6;
;;;1210   //                    break;
;;;1211   //                }
;;;1212   //                case 6:
;;;1213   //                {
;;;1214   //                    strcat(set_limit,num);
;;;1215   //                    TEXT_SetText(hItem,set_limit);
;;;1216   //                    if(dot_flag == 0)
;;;1217   //                    {
;;;1218   //                        load_v = 0;
;;;1219   //                    }else if(dot_flag == 2){
;;;1220   //                        load_v = load_v + atoi(num);
;;;1221   //                    }                 
;;;1222   //                    bit = 0;
;;;1223   //                    break;
;;;1224   //                }
;;;1225   //            }
;;;1226               break;
;;;1227               
;;;1228           }
;;;1229   		case set_87:
;;;1230           {
;;;1231               WM_HWIN hItem;
;;;1232    //           WM_InvalidateWindow(load_wind);
;;;1233               hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000024  f640112d          MOV      r1,#0x92d
000028  f7fffffe          BL       WM_GetDialogItem
00002c  4604              MOV      r4,r0
;;;1234   			if(bit < 7)
00002e  7838              LDRB     r0,[r7,#0]  ; bit
000030  2807              CMP      r0,#7
000032  d203              BCS      |L3.60|
;;;1235   			{
;;;1236   				strcat(set_limit,num);
000034  4649              MOV      r1,r9
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       strcat
                  |L3.60|
;;;1237   			}
;;;1238   			if(dot_flag != 0 && strcmp(num,".") == 0)
00003c  f8980000          LDRB     r0,[r8,#0]  ; dot_flag
000040  b128              CBZ      r0,|L3.78|
000042  a145              ADR      r1,|L3.344|
000044  4648              MOV      r0,r9
000046  f7fffffe          BL       strcmp
00004a  2800              CMP      r0,#0
00004c  d072              BEQ      |L3.308|
                  |L3.78|
;;;1239   			{
;;;1240   				
;;;1241   			}else{			
;;;1242   				
;;;1243   				if(dot_flag == 0 && strcmp(num,".") == 0)
00004e  f8980000          LDRB     r0,[r8,#0]  ; dot_flag
000052  2800              CMP      r0,#0
000054  d060              BEQ      |L3.280|
000056  e06a              B        |L3.302|
                  |L3.88|
000058  f640016e          MOV      r1,#0x86e             ;993
00005c  f7fffffe          BL       WM_GetDialogItem
000060  4606              MOV      r6,r0                 ;993
000062  7838              LDRB     r0,[r7,#0]            ;994  ; bit
000064  2806              CMP      r0,#6                 ;994
000066  d21a              BCS      |L3.158|
000068  4649              MOV      r1,r9                 ;996
00006a  4838              LDR      r0,|L3.332|
00006c  f7fffffe          BL       strcat
000070  f8980000          LDRB     r0,[r8,#0]            ;997  ; dot_flag
000074  b120              CBZ      r0,|L3.128|
000076  a138              ADR      r1,|L3.344|
000078  4648              MOV      r0,r9                 ;997
00007a  f7fffffe          BL       strcmp
00007e  b1a8              CBZ      r0,|L3.172|
                  |L3.128|
000080  f8980000          LDRB     r0,[r8,#0]            ;1002  ; dot_flag
000084  b938              CBNZ     r0,|L3.150|
000086  a134              ADR      r1,|L3.344|
000088  4648              MOV      r0,r9                 ;1002
00008a  f7fffffe          BL       strcmp
00008e  b910              CBNZ     r0,|L3.150|
000090  7838              LDRB     r0,[r7,#0]            ;1004  ; bit
000092  f8880000          STRB     r0,[r8,#0]            ;1004
                  |L3.150|
000096  7838              LDRB     r0,[r7,#0]            ;1006  ; bit
000098  1c40              ADDS     r0,r0,#1              ;1006
00009a  7038              STRB     r0,[r7,#0]            ;1006
00009c  e006              B        |L3.172|
                  |L3.158|
00009e  703c              STRB     r4,[r7,#0]            ;1009
0000a0  2000              MOVS     r0,#0                 ;1010
                  |L3.162|
0000a2  542c              STRB     r4,[r5,r0]            ;1012
0000a4  1c40              ADDS     r0,r0,#1              ;1010
0000a6  b2c0              UXTB     r0,r0                 ;1010
0000a8  2806              CMP      r0,#6                 ;1010
0000aa  d3fa              BCC      |L3.162|
                  |L3.172|
0000ac  4630              MOV      r0,r6                 ;1016
0000ae  e8bd47f0          POP      {r4-r10,lr}           ;1016
0000b2  4926              LDR      r1,|L3.332|
0000b4  f7ffbffe          B.W      TEXT_SetText
                  |L3.184|
0000b8  f6401111          MOV      r1,#0x911             ;1113
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4606              MOV      r6,r0                 ;1113
0000c2  7838              LDRB     r0,[r7,#0]            ;1114  ; bit
0000c4  2806              CMP      r0,#6                 ;1114
0000c6  d21a              BCS      |L3.254|
0000c8  4649              MOV      r1,r9                 ;1116
0000ca  4820              LDR      r0,|L3.332|
0000cc  f7fffffe          BL       strcat
0000d0  f8980000          LDRB     r0,[r8,#0]            ;1117  ; dot_flag
0000d4  b120              CBZ      r0,|L3.224|
0000d6  a120              ADR      r1,|L3.344|
0000d8  4648              MOV      r0,r9                 ;1117
0000da  f7fffffe          BL       strcmp
0000de  b1a8              CBZ      r0,|L3.268|
                  |L3.224|
0000e0  f8980000          LDRB     r0,[r8,#0]            ;1122  ; dot_flag
0000e4  b938              CBNZ     r0,|L3.246|
0000e6  a11c              ADR      r1,|L3.344|
0000e8  4648              MOV      r0,r9                 ;1122
0000ea  f7fffffe          BL       strcmp
0000ee  b910              CBNZ     r0,|L3.246|
0000f0  7838              LDRB     r0,[r7,#0]            ;1124  ; bit
0000f2  f8880000          STRB     r0,[r8,#0]            ;1124
                  |L3.246|
0000f6  7838              LDRB     r0,[r7,#0]            ;1126  ; bit
0000f8  1c40              ADDS     r0,r0,#1              ;1126
0000fa  7038              STRB     r0,[r7,#0]            ;1126
0000fc  e006              B        |L3.268|
                  |L3.254|
0000fe  703c              STRB     r4,[r7,#0]            ;1129
000100  2000              MOVS     r0,#0                 ;1130
                  |L3.258|
000102  542c              STRB     r4,[r5,r0]            ;1132
000104  1c40              ADDS     r0,r0,#1              ;1130
000106  b2c0              UXTB     r0,r0                 ;1130
000108  2806              CMP      r0,#6                 ;1130
00010a  d3fa              BCC      |L3.258|
                  |L3.268|
00010c  4630              MOV      r0,r6                 ;1136
00010e  e8bd47f0          POP      {r4-r10,lr}           ;1136
000112  490e              LDR      r1,|L3.332|
000114  f7ffbffe          B.W      TEXT_SetText
                  |L3.280|
000118  a10f              ADR      r1,|L3.344|
00011a  4648              MOV      r0,r9
00011c  e001              B        |L3.290|
                  |L3.286|
00011e  e00f              B        |L3.320|
000120  e008              B        |L3.308|
                  |L3.290|
000122  f7fffffe          BL       strcmp
000126  b910              CBNZ     r0,|L3.302|
;;;1244   				{
;;;1245   					dot_flag = bit;
000128  7838              LDRB     r0,[r7,#0]  ; bit
00012a  f8880000          STRB     r0,[r8,#0]
                  |L3.302|
;;;1246   				}
;;;1247   				bit ++;
00012e  7838              LDRB     r0,[r7,#0]  ; bit
000130  1c40              ADDS     r0,r0,#1
000132  7038              STRB     r0,[r7,#0]
                  |L3.308|
;;;1248   			}
;;;1249   			TEXT_SetText(hItem,set_limit);
000134  4620              MOV      r0,r4
000136  e8bd47f0          POP      {r4-r10,lr}
00013a  4904              LDR      r1,|L3.332|
00013c  f7ffbffe          B.W      TEXT_SetText
                  |L3.320|
;;;1250   //            switch(bit){
;;;1251   //                case 1:
;;;1252   //                {
;;;1253   //					for(i=0;i<6;i++)
;;;1254   //					{
;;;1255   //						set_limit[i] = '\0';
;;;1256   //					}
;;;1257   //                    set_load_cutoffv = atoi(num) * 1000;
;;;1258   //                    strcat(set_limit,num);            
;;;1259   //                    TEXT_SetText(hItem,set_limit);
;;;1260   //                    
;;;1261   //                    bit = 2;
;;;1262   //                    break;
;;;1263   //                }
;;;1264   //                case 2:
;;;1265   //                {
;;;1266   //                    strcat(set_limit,num);            
;;;1267   //                    TEXT_SetText(hItem,set_limit);
;;;1268   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1269   //                    {
;;;1270   //                        dot_flag = 1;
;;;1271   //                    }else{
;;;1272   //                        set_load_cutoffv = set_load_cutoffv * 10 + atoi(num) * 1000;
;;;1273   //                    }
;;;1274   //                    bit = 3;
;;;1275   //                    break;
;;;1276   //                }
;;;1277   //                case 3:
;;;1278   //                {
;;;1279   //                    strcat(set_limit,num);
;;;1280   //                    TEXT_SetText(hItem,set_limit);
;;;1281   //                    if(dot_flag == 0)
;;;1282   //                    {
;;;1283   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1284   //                        {                            
;;;1285   //                            dot_flag = 2;
;;;1286   //                        }else{
;;;1287   //                            set_load_cutoffv = 0;
;;;1288   //                        }
;;;1289   //                    }else{
;;;1290   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 100;
;;;1291   //                    }                  
;;;1292   //                    bit = 4;
;;;1293   //                    break;
;;;1294   //                }
;;;1295   //                case 4:
;;;1296   //                {
;;;1297   //                    strcat(set_limit,num);
;;;1298   //                    TEXT_SetText(hItem,set_limit);
;;;1299   //                    if(dot_flag == 0)
;;;1300   //                    {
;;;1301   //                        set_load_cutoffv = 0;
;;;1302   //                    }else if(dot_flag == 2){
;;;1303   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 100;
;;;1304   //                    }else{
;;;1305   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 10;
;;;1306   //                    }                  
;;;1307   //                    bit = 5;
;;;1308   //                    break;
;;;1309   //                }
;;;1310   //                case 5:
;;;1311   //                {
;;;1312   //                    strcat(set_limit,num);
;;;1313   //                    TEXT_SetText(hItem,set_limit);
;;;1314   //                    if(dot_flag == 0)
;;;1315   //                    {
;;;1316   //                        set_load_cutoffv = 0;
;;;1317   //                    }else if(dot_flag == 1){
;;;1318   //                        set_load_cutoffv = set_load_cutoffv + atoi(num);
;;;1319   //                    }else{
;;;1320   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 10;
;;;1321   //                    }                 
;;;1322   //                    bit = 6;
;;;1323   //                    break;
;;;1324   //                }
;;;1325   //                case 6:
;;;1326   //                {
;;;1327   //                    strcat(set_limit,num);
;;;1328   //                    TEXT_SetText(hItem,set_limit);
;;;1329   //                    if(dot_flag == 0)
;;;1330   //                    {
;;;1331   //                        set_load_cutoffv = 0;
;;;1332   //                    }else if(dot_flag == 2){
;;;1333   //                        set_load_cutoffv = set_load_cutoffv + atoi(num);
;;;1334   //                    }                 
;;;1335   //                    bit = 0;
;;;1336   //                    break;
;;;1337   //                }
;;;1338   //            }
;;;1339               break;
;;;1340               
;;;1341           }
;;;1342           default:break;
;;;1343       }
;;;1344   }
000140  e8bd87f0          POP      {r4-r10,pc}
;;;1345   
                          ENDP

                  |L3.324|
                          DCD      set_sw
                  |L3.328|
                          DCD      ||.data||
                  |L3.332|
                          DCD      set_limit
                  |L3.336|
                          DCD      dot_flag
                  |L3.340|
                          DCD      bit
                  |L3.344|
000158  2e00              DCB      ".",0
00015a  00                DCB      0
00015b  00                DCB      0

                          AREA ||i.LOAD_OP_DOWN||, CODE, READONLY, ALIGN=2

                  LOAD_OP_DOWN PROC
;;;634    void LOAD_OP_DOWN(void);
;;;635    void LOAD_OP_DOWN(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;636    {
;;;637        switch(set_sw)
000004  4d34              LDR      r5,|L4.216|
000006  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;638        {
;;;639            case set_24:
;;;640            {
;;;641                WM_HWIN hItem;
;;;642                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
000008  4c34              LDR      r4,|L4.220|
;;;643                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00000a  f06f4670          MVN      r6,#0xf0000000
;;;644                TEXT_SetTextColor(hItem, GUI_WHITE);
00000e  1137              ASRS     r7,r6,#4
;;;645                
;;;646                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;647                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000010  f8df90cc          LDR      r9,|L4.224|
000014  6860              LDR      r0,[r4,#4]            ;637
000016  f44f6811          MOV      r8,#0x910             ;646
00001a  2917              CMP      r1,#0x17              ;637
00001c  d023              BEQ      |L4.102|
;;;648                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;649    
;;;650                set_sw = set_66;
;;;651                break;
;;;652            }
;;;653            case set_66:
;;;654            {
;;;655                WM_HWIN hItem;
;;;656                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;657                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;658                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;659                
;;;660                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
00001e  f6401a0e          MOV      r10,#0x90e
000022  2941              CMP      r1,#0x41              ;637
000024  d03c              BEQ      |L4.160|
000026  2942              CMP      r1,#0x42              ;637
000028  d11b              BNE      |L4.98|
;;;661                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;662                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;663    
;;;664                set_sw = set_67;
;;;665                break;
;;;666            }
;;;667    		 case set_67:
;;;668            {
;;;669                WM_HWIN hItem;
;;;670                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
00002a  4651              MOV      r1,r10
00002c  f7fffffe          BL       WM_GetDialogItem
000030  4680              MOV      r8,r0
;;;671                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
000032  4631              MOV      r1,r6
000034  4640              MOV      r0,r8
000036  f7fffffe          BL       TEXT_SetBkColor
;;;672                TEXT_SetTextColor(hItem, GUI_WHITE);
00003a  4639              MOV      r1,r7
00003c  4640              MOV      r0,r8
00003e  f7fffffe          BL       TEXT_SetTextColor
;;;673                
;;;674                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000042  f6401139          MOV      r1,#0x939
000046  6860              LDR      r0,[r4,#4]  ; load_wind
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4604              MOV      r4,r0
;;;675                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00004e  4649              MOV      r1,r9
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TEXT_SetBkColor
;;;676                TEXT_SetTextColor(hItem, GUI_BLACK);
000056  2100              MOVS     r1,#0
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       TEXT_SetTextColor
;;;677    
;;;678                set_sw = set_86;
00005e  2055              MOVS     r0,#0x55
000060  7028              STRB     r0,[r5,#0]
                  |L4.98|
;;;679                break;
;;;680            }
;;;681        }   
;;;682    }
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L4.102|
000066  f640016d          MOV      r1,#0x86d             ;642
00006a  f7fffffe          BL       WM_GetDialogItem
00006e  4682              MOV      r10,r0                ;642
000070  4631              MOV      r1,r6                 ;643
000072  4650              MOV      r0,r10                ;643
000074  f7fffffe          BL       TEXT_SetBkColor
000078  4639              MOV      r1,r7                 ;644
00007a  4650              MOV      r0,r10                ;644
00007c  f7fffffe          BL       TEXT_SetTextColor
000080  4641              MOV      r1,r8                 ;646
000082  6860              LDR      r0,[r4,#4]            ;646  ; load_wind
000084  f7fffffe          BL       WM_GetDialogItem
000088  4604              MOV      r4,r0                 ;646
00008a  4649              MOV      r1,r9                 ;647
00008c  4620              MOV      r0,r4                 ;647
00008e  f7fffffe          BL       TEXT_SetBkColor
000092  2100              MOVS     r1,#0                 ;648
000094  4620              MOV      r0,r4                 ;648
000096  f7fffffe          BL       TEXT_SetTextColor
00009a  2041              MOVS     r0,#0x41              ;650
00009c  7028              STRB     r0,[r5,#0]            ;650
00009e  e7e0              B        |L4.98|
                  |L4.160|
0000a0  4641              MOV      r1,r8                 ;656
0000a2  f7fffffe          BL       WM_GetDialogItem
0000a6  4680              MOV      r8,r0                 ;656
0000a8  4631              MOV      r1,r6                 ;657
0000aa  4640              MOV      r0,r8                 ;657
0000ac  f7fffffe          BL       TEXT_SetBkColor
0000b0  4639              MOV      r1,r7                 ;658
0000b2  4640              MOV      r0,r8                 ;658
0000b4  f7fffffe          BL       TEXT_SetTextColor
0000b8  4651              MOV      r1,r10                ;660
0000ba  6860              LDR      r0,[r4,#4]            ;660  ; load_wind
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4604              MOV      r4,r0                 ;660
0000c2  4649              MOV      r1,r9                 ;661
0000c4  4620              MOV      r0,r4                 ;661
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  2100              MOVS     r1,#0                 ;662
0000cc  4620              MOV      r0,r4                 ;662
0000ce  f7fffffe          BL       TEXT_SetTextColor
0000d2  2042              MOVS     r0,#0x42              ;664
0000d4  7028              STRB     r0,[r5,#0]            ;664
0000d6  e7c4              B        |L4.98|
;;;683    
                          ENDP

                  |L4.216|
                          DCD      set_sw
                  |L4.220|
                          DCD      ||.data||
                  |L4.224|
                          DCD      0x00bfffff

                          AREA ||i.LOAD_OP_UP||, CODE, READONLY, ALIGN=2

                  LOAD_OP_UP PROC
;;;684    void LOAD_OP_UP(void);
;;;685    void LOAD_OP_UP(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;686    {
;;;687        switch(set_sw)
000004  4d34              LDR      r5,|L5.216|
000006  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;688        {
;;;689            case set_66:
;;;690            {
;;;691                WM_HWIN hItem;
;;;692                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
000008  4c34              LDR      r4,|L5.220|
;;;693                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;694                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;695                
;;;696                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;697                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00000a  f8dfa0d4          LDR      r10,|L5.224|
00000e  f44f6611          MOV      r6,#0x910             ;692
000012  6860              LDR      r0,[r4,#4]            ;687
000014  f06f4870          MVN      r8,#0xf0000000        ;693
000018  f06f497f          MVN      r9,#0xff000000        ;694
00001c  2941              CMP      r1,#0x41              ;687
00001e  d022              BEQ      |L5.102|
;;;698                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;699    
;;;700                set_sw = set_24;
;;;701                break;
;;;702            }
;;;703            case set_67:
;;;704            {
;;;705                WM_HWIN hItem;
;;;706                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
000020  1eb7              SUBS     r7,r6,#2
000022  2942              CMP      r1,#0x42              ;687
000024  d03c              BEQ      |L5.160|
000026  2955              CMP      r1,#0x55              ;687
000028  d11b              BNE      |L5.98|
;;;707                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;708                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;709                
;;;710                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;711                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;712                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;713    
;;;714                set_sw = set_66;
;;;715                break;
;;;716            }
;;;717    		case set_86:
;;;718            {
;;;719                WM_HWIN hItem;
;;;720                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
00002a  f6401139          MOV      r1,#0x939
00002e  f7fffffe          BL       WM_GetDialogItem
000032  4606              MOV      r6,r0
;;;721                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
000034  4641              MOV      r1,r8
000036  4630              MOV      r0,r6
000038  f7fffffe          BL       TEXT_SetBkColor
;;;722                TEXT_SetTextColor(hItem, GUI_WHITE);
00003c  4649              MOV      r1,r9
00003e  4630              MOV      r0,r6
000040  f7fffffe          BL       TEXT_SetTextColor
;;;723                
;;;724                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
000044  4639              MOV      r1,r7
000046  6860              LDR      r0,[r4,#4]  ; load_wind
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4604              MOV      r4,r0
;;;725                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00004e  4651              MOV      r1,r10
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TEXT_SetBkColor
;;;726                TEXT_SetTextColor(hItem, GUI_BLACK);
000056  2100              MOVS     r1,#0
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       TEXT_SetTextColor
;;;727    
;;;728                set_sw = set_67;
00005e  2042              MOVS     r0,#0x42
000060  7028              STRB     r0,[r5,#0]
                  |L5.98|
;;;729                break;
;;;730            }
;;;731        }   
;;;732    }
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L5.102|
000066  4631              MOV      r1,r6                 ;692
000068  f7fffffe          BL       WM_GetDialogItem
00006c  4606              MOV      r6,r0                 ;692
00006e  4641              MOV      r1,r8                 ;693
000070  4630              MOV      r0,r6                 ;693
000072  f7fffffe          BL       TEXT_SetBkColor
000076  4649              MOV      r1,r9                 ;694
000078  4630              MOV      r0,r6                 ;694
00007a  f7fffffe          BL       TEXT_SetTextColor
00007e  f640016d          MOV      r1,#0x86d             ;696
000082  6860              LDR      r0,[r4,#4]            ;696  ; load_wind
000084  f7fffffe          BL       WM_GetDialogItem
000088  4604              MOV      r4,r0                 ;696
00008a  4651              MOV      r1,r10                ;697
00008c  4620              MOV      r0,r4                 ;697
00008e  f7fffffe          BL       TEXT_SetBkColor
000092  2100              MOVS     r1,#0                 ;698
000094  4620              MOV      r0,r4                 ;698
000096  f7fffffe          BL       TEXT_SetTextColor
00009a  2017              MOVS     r0,#0x17              ;700
00009c  7028              STRB     r0,[r5,#0]            ;700
00009e  e7e0              B        |L5.98|
                  |L5.160|
0000a0  4639              MOV      r1,r7                 ;706
0000a2  f7fffffe          BL       WM_GetDialogItem
0000a6  4607              MOV      r7,r0                 ;706
0000a8  4641              MOV      r1,r8                 ;707
0000aa  4638              MOV      r0,r7                 ;707
0000ac  f7fffffe          BL       TEXT_SetBkColor
0000b0  4649              MOV      r1,r9                 ;708
0000b2  4638              MOV      r0,r7                 ;708
0000b4  f7fffffe          BL       TEXT_SetTextColor
0000b8  4631              MOV      r1,r6                 ;710
0000ba  6860              LDR      r0,[r4,#4]            ;710  ; load_wind
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4604              MOV      r4,r0                 ;710
0000c2  4651              MOV      r1,r10                ;711
0000c4  4620              MOV      r0,r4                 ;711
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  2100              MOVS     r1,#0                 ;712
0000cc  4620              MOV      r0,r4                 ;712
0000ce  f7fffffe          BL       TEXT_SetTextColor
0000d2  2041              MOVS     r0,#0x41              ;714
0000d4  7028              STRB     r0,[r5,#0]            ;714
0000d6  e7c4              B        |L5.98|
;;;733    
                          ENDP

                  |L5.216|
                          DCD      set_sw
                  |L5.220|
                          DCD      ||.data||
                  |L5.224|
                          DCD      0x00bfffff

                          AREA ||i.LOAD_SET||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  LOAD_SET PROC
;;;735    void LOAD_SET(void);
;;;736    void LOAD_SET(void) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b083              SUB      sp,sp,#0xc
;;;737        char    buf[6];
;;;738        float   dis_load_c;
;;;739        float   dis_load_v;
;;;740        vu8 i;
;;;741        switch(set_sw)
00000a  4df8              LDR      r5,|L6.1004|
00000c  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;742        {
;;;743            case set_24:
;;;744            {
;;;745                WM_HWIN hItem;
;;;746    //            WM_InvalidateWindow(load_wind);
;;;747                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;748                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;749                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;750                       
;;;751                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;752                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;753                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;754                for(i=0;i<6;i++)
;;;755                {
;;;756                    set_limit[i] = '\0';
;;;757                }
;;;758                set_sw = set_25;
;;;759                break;
;;;760            }
;;;761            case set_25:
;;;762            {
;;;763                WM_HWIN hItem;
;;;764    //            WM_InvalidateWindow(lo\\JK_BTSET\../drive/AD7689.c\AD7689_Bufferad_wind);
;;;765                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;766                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;767                TEXT_SetTextColor(hItem, GUI_WHITE);  
;;;768    			if(dot_flag == 0){
;;;769    				load_c = atoi(set_limit)*1000;					
;;;770    			}else if(dot_flag != 0){
;;;771    				memset(buf, '\0', sizeof(buf));
;;;772    				strncpy(buf,set_limit,dot_flag + 4);
;;;773    				load_c = atof(buf)*1000;
00000e  ed9f8bf8          VLDR     d8,|L6.1008|
000012  4afb              LDR      r2,|L6.1024|
;;;774    			}
;;;775    			if(load_c > 30000 || (float)load_c/1000 * DISS_Voltage > 200){
000014  f8df93e0          LDR      r9,|L6.1016|
;;;776                    load_c = 0;
;;;777                }
;;;778    			if(load_c > 2500)
;;;779    			{
;;;780    				C_SW(1);
;;;781    			}else{
;;;782    				C_SW(0);
;;;783    			}
;;;784                SET_Current_Laod = load_c;            
;;;785    //            if(load_c > 3000)
;;;786    //			{
;;;787    //				C_SW(1);
;;;788    //			}else{
;;;789    //				C_SW(0);
;;;790    //			}
;;;791                dis_load_c = (float)SET_Current_Laod/1000;
;;;792                sprintf(buf,"%.3f",dis_load_c);
;;;793                TEXT_SetText(hItem,buf);
;;;794                
;;;795                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;796                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;797                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;798                Write_Limits();
;;;799                
;;;800                set_sw = set_24;
;;;801                bit = 0;
000018  f8df83e0          LDR      r8,|L6.1020|
00001c  ed9f9af9          VLDR     s18,|L6.1028|
000020  4ef9              LDR      r6,|L6.1032|
000022  f8dfb3e8          LDR      r11,|L6.1036|
000026  2400              MOVS     r4,#0                 ;756
000028  4ff9              LDR      r7,|L6.1040|
00002a  6850              LDR      r0,[r2,#4]            ;741
00002c  2942              CMP      r1,#0x42              ;741
00002e  d07c              BEQ      |L6.298|
000030  dc27              BGT      |L6.130|
000032  f6400a6e          MOV      r10,#0x86e            ;751
000036  2917              CMP      r1,#0x17              ;741
000038  d078              BEQ      |L6.300|
00003a  2918              CMP      r1,#0x18              ;741
00003c  d077              BEQ      |L6.302|
00003e  2941              CMP      r1,#0x41              ;741
000040  d176              BNE      |L6.304|
;;;802                dot_flag = 0;
;;;803                break;
;;;804            }
;;;805            case set_66:
;;;806            {
;;;807                WM_HWIN hItem;
;;;808    //            WM_InvalidateWindow(load_wind);
;;;809                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
000042  f44f6111          MOV      r1,#0x910
000046  4616              MOV      r6,r2
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4607              MOV      r7,r0
;;;810                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00004e  f06f4170          MVN      r1,#0xf0000000
000052  4638              MOV      r0,r7
000054  f7fffffe          BL       TEXT_SetBkColor
;;;811                TEXT_SetTextColor(hItem, GUI_WHITE);
000058  f06f417f          MVN      r1,#0xff000000
00005c  4638              MOV      r0,r7
00005e  f7fffffe          BL       TEXT_SetTextColor
;;;812                       
;;;813                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
000062  f6401111          MOV      r1,#0x911
000066  6870              LDR      r0,[r6,#4]  ; load_wind
000068  f7fffffe          BL       WM_GetDialogItem
00006c  4606              MOV      r6,r0
;;;814                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00006e  49e9              LDR      r1,|L6.1044|
000070  4630              MOV      r0,r6
000072  f7fffffe          BL       TEXT_SetBkColor
;;;815                TEXT_SetTextColor(hItem, GUI_BLACK);
000076  2100              MOVS     r1,#0
000078  4630              MOV      r0,r6
00007a  f7fffffe          BL       TEXT_SetTextColor
;;;816                for(i=0;i<6;i++)
00007e  9400              STR      r4,[sp,#0]
000080  e12f              B        |L6.738|
                  |L6.130|
000082  2943              CMP      r1,#0x43              ;741
000084  d07d              BEQ      |L6.386|
;;;817                {
;;;818                    set_limit[i] = '\0';
;;;819                }
;;;820                set_sw = set_68;
;;;821                break;
;;;822            }
;;;823            case set_68:
;;;824            {
;;;825                WM_HWIN hItem;
;;;826                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;827                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;828                TEXT_SetTextColor(hItem, GUI_WHITE); 
;;;829    			if(dot_flag == 0){
;;;830    				load_v = atoi(set_limit)*1000;					
;;;831    			}else if(dot_flag != 0){
;;;832    				memset(buf, '\0', sizeof(buf));
;;;833    				strncpy(buf,set_limit,dot_flag + 4);
;;;834    				load_v = atof(buf)*1000;
;;;835    			}
;;;836    			if(load_v > 80000 || (float)load_v/1000 * DISS_Current > 200){
;;;837                    load_v = 0;
;;;838                }
;;;839                SET_Voltage_Laod = load_v;          
;;;840                
;;;841                dis_load_v = (float)SET_Voltage_Laod/1000;
;;;842                sprintf(buf,"%.3f",dis_load_v);
;;;843                TEXT_SetText(hItem,buf);
;;;844                
;;;845                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;846                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;847                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;848                Write_Limits();
;;;849                
;;;850                set_sw = set_66;
;;;851                bit = 0;
;;;852                dot_flag = 0;
;;;853                break;
;;;854            }
;;;855            case set_67:
;;;856            {
;;;857                switch(flag_Load_CC)
;;;858                {
;;;859                    case 1:
;;;860                    {
;;;861                        WM_HWIN hItem;
;;;862                        hItem = WM_GetDialogItem(load_wind, ID_TEXT_121);
;;;863                        TEXT_SetText(hItem,"CV");
;;;864    					flag_Load_CC = 0;
;;;865                        GPIO_ResetBits(GPIOC,GPIO_Pin_10);//CV                  
;;;866                        load_mode = 0;
;;;867                        Write_LOAD();
;;;868                        break;
;;;869                    }
;;;870                    case 0:
;;;871                    {
;;;872                         WM_HWIN hItem;
;;;873                         hItem = WM_GetDialogItem(load_wind, ID_TEXT_121);
;;;874                         TEXT_SetText(hItem,"CC");
;;;875    					 flag_Load_CC = 1;
;;;876                         GPIO_SetBits(GPIOC,GPIO_Pin_10);//CC                   
;;;877                         load_mode =1;
;;;878                         Write_LOAD();
;;;879                         break;
;;;880                    }
;;;881                }   
;;;882            }break;
;;;883    		case set_86:
;;;884            {
;;;885                WM_HWIN hItem;
;;;886    //            WM_InvalidateWindow(load_wind);
;;;887                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000086  f6401939          MOV      r9,#0x939
;;;888                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;889                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;890                       
;;;891                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
00008a  f640162d          MOV      r6,#0x92d
00008e  2955              CMP      r1,#0x55              ;741
000090  d078              BEQ      |L6.388|
000092  2956              CMP      r1,#0x56              ;741
000094  d15d              BNE      |L6.338|
;;;892                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;893                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;894                for(i=0;i<6;i++)
;;;895                {
;;;896                    set_limit[i] = '\0';
;;;897                }
;;;898                set_sw = set_87;
;;;899                break;
;;;900            }
;;;901            case set_87:
;;;902            {
;;;903                WM_HWIN hItem;
;;;904                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000096  4631              MOV      r1,r6
000098  4692              MOV      r10,r2
00009a  f7fffffe          BL       WM_GetDialogItem
00009e  4683              MOV      r11,r0
;;;905                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
0000a0  f06f4170          MVN      r1,#0xf0000000
0000a4  4658              MOV      r0,r11
0000a6  f7fffffe          BL       TEXT_SetBkColor
;;;906                TEXT_SetTextColor(hItem, GUI_WHITE); 
0000aa  f06f417f          MVN      r1,#0xff000000
0000ae  4658              MOV      r0,r11
0000b0  f7fffffe          BL       TEXT_SetTextColor
;;;907    			if(dot_flag == 0){
0000b4  7838              LDRB     r0,[r7,#0]  ; dot_flag
;;;908    				set_load_cutoffv = atoi(set_limit)*1000;					
0000b6  4ed8              LDR      r6,|L6.1048|
0000b8  2800              CMP      r0,#0                 ;907
0000ba  d071              BEQ      |L6.416|
;;;909    			}else if(dot_flag != 0){
0000bc  7838              LDRB     r0,[r7,#0]  ; dot_flag
0000be  b198              CBZ      r0,|L6.232|
;;;910    				memset(buf, '\0', sizeof(buf));
0000c0  9401              STR      r4,[sp,#4]
0000c2  9402              STR      r4,[sp,#8]
;;;911    				strncpy(buf,set_limit,dot_flag + 4);
0000c4  783a              LDRB     r2,[r7,#0]  ; dot_flag
0000c6  49d1              LDR      r1,|L6.1036|
0000c8  1d12              ADDS     r2,r2,#4
0000ca  a801              ADD      r0,sp,#4
0000cc  f7fffffe          BL       strncpy
;;;912    				set_load_cutoffv = atof(buf)*1000;
0000d0  a801              ADD      r0,sp,#4
0000d2  f7fffffe          BL       __hardfp_atof
0000d6  ec532b18          VMOV     r2,r3,d8
0000da  ec510b10          VMOV     r0,r1,d0
0000de  f7fffffe          BL       __aeabi_dmul
0000e2  f7fffffe          BL       __aeabi_d2iz
0000e6  6130              STR      r0,[r6,#0x10]  ; InFlashSave
                  |L6.232|
;;;913    			}
;;;914                load_cutoffv = (float)set_load_cutoffv/1000;
0000e8  ed960a04          VLDR     s0,[r6,#0x10]
0000ec  eef80ac0          VCVT.F32.S32 s1,s0
0000f0  ee800a89          VDIV.F32 s0,s1,s18
0000f4  ed8a0a02          VSTR     s0,[r10,#8]
;;;915                sprintf(buf,"%.3f",load_cutoffv);
0000f8  ee100a10          VMOV     r0,s0
0000fc  f7fffffe          BL       __aeabi_f2d
000100  ec410b10          VMOV     d0,r0,r1
000104  a1c5              ADR      r1,|L6.1052|
000106  ec532b10          VMOV     r2,r3,d0
00010a  a801              ADD      r0,sp,#4
00010c  f7fffffe          BL       __2sprintf
;;;916                TEXT_SetText(hItem,buf);
000110  a901              ADD      r1,sp,#4
000112  4658              MOV      r0,r11
000114  f7fffffe          BL       TEXT_SetText
;;;917                
;;;918                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000118  4649              MOV      r1,r9
00011a  f8da0004          LDR      r0,[r10,#4]  ; load_wind
00011e  f7fffffe          BL       WM_GetDialogItem
000122  4606              MOV      r6,r0
;;;919                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000124  49bb              LDR      r1,|L6.1044|
000126  4630              MOV      r0,r6
000128  e003              B        |L6.306|
                  |L6.298|
00012a  e183              B        |L6.1076|
                  |L6.300|
00012c  e016              B        |L6.348|
                  |L6.302|
00012e  e047              B        |L6.448|
                  |L6.304|
000130  e00f              B        |L6.338|
                  |L6.306|
000132  f7fffffe          BL       TEXT_SetBkColor
;;;920                TEXT_SetTextColor(hItem, GUI_BLACK);
000136  2100              MOVS     r1,#0
000138  4630              MOV      r0,r6
00013a  f7fffffe          BL       TEXT_SetTextColor
;;;921                Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
00013e  4ab6              LDR      r2,|L6.1048|
000140  2128              MOVS     r1,#0x28
000142  48b8              LDR      r0,|L6.1060|
000144  f7fffffe          BL       Flash_Write32BitDatas
;;;922                
;;;923                set_sw = set_86;
000148  2055              MOVS     r0,#0x55
00014a  7028              STRB     r0,[r5,#0]
;;;924                bit = 0;
00014c  f8884000          STRB     r4,[r8,#0]
;;;925                dot_flag = 0;
000150  703c              STRB     r4,[r7,#0]
                  |L6.338|
;;;926                break;
;;;927            }
;;;928        }
;;;929    }
000152  b003              ADD      sp,sp,#0xc
000154  ecbd8b04          VPOP     {d8-d9}
000158  e8bd8ff0          POP      {r4-r11,pc}
                  |L6.348|
00015c  f640016d          MOV      r1,#0x86d             ;747
000160  4616              MOV      r6,r2                 ;747
000162  f7fffffe          BL       WM_GetDialogItem
000166  4607              MOV      r7,r0                 ;747
000168  f06f4170          MVN      r1,#0xf0000000        ;748
00016c  4638              MOV      r0,r7                 ;748
00016e  f7fffffe          BL       TEXT_SetBkColor
000172  f06f417f          MVN      r1,#0xff000000        ;749
000176  4638              MOV      r0,r7                 ;749
000178  f7fffffe          BL       TEXT_SetTextColor
00017c  4651              MOV      r1,r10                ;751
00017e  6870              LDR      r0,[r6,#4]            ;751  ; load_wind
000180  e001              B        |L6.390|
                  |L6.386|
000182  e0b5              B        |L6.752|
                  |L6.388|
000184  e188              B        |L6.1176|
                  |L6.390|
000186  f7fffffe          BL       WM_GetDialogItem
00018a  4606              MOV      r6,r0                 ;751
00018c  49a1              LDR      r1,|L6.1044|
00018e  4630              MOV      r0,r6                 ;752
000190  f7fffffe          BL       TEXT_SetBkColor
000194  2100              MOVS     r1,#0                 ;753
000196  4630              MOV      r0,r6                 ;753
000198  f7fffffe          BL       TEXT_SetTextColor
00019c  9400              STR      r4,[sp,#0]            ;754
00019e  e008              B        |L6.434|
                  |L6.416|
0001a0  e1a7              B        |L6.1266|
                  |L6.418|
0001a2  f89d0000          LDRB     r0,[sp,#0]            ;756
0001a6  f80b4000          STRB     r4,[r11,r0]           ;756
0001aa  f89d0000          LDRB     r0,[sp,#0]            ;754
0001ae  1c40              ADDS     r0,r0,#1              ;754
0001b0  9000              STR      r0,[sp,#0]            ;754
                  |L6.434|
0001b2  f89d0000          LDRB     r0,[sp,#0]            ;754
0001b6  2806              CMP      r0,#6                 ;754
0001b8  d3f3              BCC      |L6.418|
0001ba  2018              MOVS     r0,#0x18              ;758
0001bc  7028              STRB     r0,[r5,#0]            ;758
0001be  e7c8              B        |L6.338|
                  |L6.448|
0001c0  4651              MOV      r1,r10                ;765
0001c2  4692              MOV      r10,r2                ;765
0001c4  f7fffffe          BL       WM_GetDialogItem
0001c8  4683              MOV      r11,r0                ;765
0001ca  f06f4170          MVN      r1,#0xf0000000        ;766
0001ce  4658              MOV      r0,r11                ;766
0001d0  f7fffffe          BL       TEXT_SetBkColor
0001d4  f06f417f          MVN      r1,#0xff000000        ;767
0001d8  4658              MOV      r0,r11                ;767
0001da  f7fffffe          BL       TEXT_SetTextColor
0001de  7838              LDRB     r0,[r7,#0]            ;768  ; dot_flag
0001e0  b3c8              CBZ      r0,|L6.598|
0001e2  7838              LDRB     r0,[r7,#0]            ;770  ; dot_flag
0001e4  b1a0              CBZ      r0,|L6.528|
0001e6  9401              STR      r4,[sp,#4]            ;771
0001e8  9402              STR      r4,[sp,#8]            ;771
0001ea  783a              LDRB     r2,[r7,#0]            ;772  ; dot_flag
0001ec  4987              LDR      r1,|L6.1036|
0001ee  1d12              ADDS     r2,r2,#4              ;772
0001f0  a801              ADD      r0,sp,#4              ;772
0001f2  f7fffffe          BL       strncpy
0001f6  a801              ADD      r0,sp,#4              ;773
0001f8  f7fffffe          BL       __hardfp_atof
0001fc  ec532b18          VMOV     r2,r3,d8              ;773
000200  ec510b10          VMOV     r0,r1,d0              ;773
000204  f7fffffe          BL       __aeabi_dmul
000208  f7fffffe          BL       __aeabi_d2uiz
00020c  f8c60094          STR      r0,[r6,#0x94]         ;773  ; Run_Control
                  |L6.528|
000210  f8d60094          LDR      r0,[r6,#0x94]         ;775  ; Run_Control
000214  f2475130          MOV      r1,#0x7530            ;775
000218  4288              CMP      r0,r1                 ;775
00021a  d810              BHI      |L6.574|
00021c  f8d60094          LDR      r0,[r6,#0x94]         ;775  ; Run_Control
000220  ee000a10          VMOV     s0,r0                 ;775
000224  4880              LDR      r0,|L6.1064|
000226  eef80a40          VCVT.F32.U32 s1,s0                 ;775
00022a  ee800a89          VDIV.F32 s0,s1,s18             ;775
00022e  edd00a00          VLDR     s1,[r0,#0]            ;775
000232  ee200a20          VMUL.F32 s0,s0,s1              ;775
000236  ee100a10          VMOV     r0,s0                 ;775
00023a  4548              CMP      r0,r9                 ;775
00023c  dd01              BLE      |L6.578|
                  |L6.574|
00023e  f8c64094          STR      r4,[r6,#0x94]         ;776  ; Run_Control
                  |L6.578|
000242  f8d60094          LDR      r0,[r6,#0x94]         ;778  ; Run_Control
000246  f64011c4          MOV      r1,#0x9c4             ;778
00024a  4288              CMP      r0,r1                 ;778
00024c  d90d              BLS      |L6.618|
00024e  2001              MOVS     r0,#1                 ;780
000250  f7fffffe          BL       C_SW
000254  e00c              B        |L6.624|
                  |L6.598|
000256  e7ff              B        |L6.600|
                  |L6.600|
000258  486c              LDR      r0,|L6.1036|
00025a  f7fffffe          BL       atoi
00025e  f44f717a          MOV      r1,#0x3e8             ;769
000262  4348              MULS     r0,r1,r0              ;769
000264  f8c60094          STR      r0,[r6,#0x94]         ;769  ; Run_Control
000268  e7d2              B        |L6.528|
                  |L6.618|
00026a  2000              MOVS     r0,#0                 ;782
00026c  f7fffffe          BL       C_SW
                  |L6.624|
000270  f8d60094          LDR      r0,[r6,#0x94]         ;784  ; Run_Control
000274  6130              STR      r0,[r6,#0x10]         ;784  ; Run_Control
000276  6930              LDR      r0,[r6,#0x10]         ;791  ; Run_Control
000278  ee000a10          VMOV     s0,r0                 ;791
00027c  eef80a40          VCVT.F32.U32 s1,s0                 ;791
000280  ee800a89          VDIV.F32 s0,s1,s18             ;791
000284  ee100a10          VMOV     r0,s0                 ;792
000288  f7fffffe          BL       __aeabi_f2d
00028c  ec410b10          VMOV     d0,r0,r1              ;792
000290  a162              ADR      r1,|L6.1052|
000292  ec532b10          VMOV     r2,r3,d0              ;792
000296  a801              ADD      r0,sp,#4              ;792
000298  f7fffffe          BL       __2sprintf
00029c  a901              ADD      r1,sp,#4              ;793
00029e  4658              MOV      r0,r11                ;793
0002a0  f7fffffe          BL       TEXT_SetText
0002a4  f640016d          MOV      r1,#0x86d             ;795
0002a8  f8da0004          LDR      r0,[r10,#4]           ;795  ; load_wind
0002ac  f7fffffe          BL       WM_GetDialogItem
0002b0  4606              MOV      r6,r0                 ;795
0002b2  4958              LDR      r1,|L6.1044|
0002b4  4630              MOV      r0,r6                 ;796
0002b6  f7fffffe          BL       TEXT_SetBkColor
0002ba  2100              MOVS     r1,#0                 ;797
0002bc  4630              MOV      r0,r6                 ;797
0002be  f7fffffe          BL       TEXT_SetTextColor
0002c2  f7fffffe          BL       Write_Limits
0002c6  2017              MOVS     r0,#0x17              ;800
0002c8  7028              STRB     r0,[r5,#0]            ;800
0002ca  f8884000          STRB     r4,[r8,#0]            ;801
0002ce  703c              STRB     r4,[r7,#0]            ;802
0002d0  e73f              B        |L6.338|
                  |L6.722|
0002d2  f89d0000          LDRB     r0,[sp,#0]            ;818
0002d6  f80b4000          STRB     r4,[r11,r0]           ;818
0002da  f89d0000          LDRB     r0,[sp,#0]            ;816
0002de  1c40              ADDS     r0,r0,#1              ;816
0002e0  9000              STR      r0,[sp,#0]            ;816
                  |L6.738|
0002e2  f89d0000          LDRB     r0,[sp,#0]            ;816
0002e6  2806              CMP      r0,#6                 ;816
0002e8  d3f3              BCC      |L6.722|
0002ea  2043              MOVS     r0,#0x43              ;820
0002ec  7028              STRB     r0,[r5,#0]            ;820
0002ee  e730              B        |L6.338|
                  |L6.752|
0002f0  f6401111          MOV      r1,#0x911             ;826
0002f4  4692              MOV      r10,r2                ;826
0002f6  f7fffffe          BL       WM_GetDialogItem
0002fa  4683              MOV      r11,r0                ;826
0002fc  f06f4170          MVN      r1,#0xf0000000        ;827
000300  4658              MOV      r0,r11                ;827
000302  f7fffffe          BL       TEXT_SetBkColor
000306  f06f417f          MVN      r1,#0xff000000        ;828
00030a  4658              MOV      r0,r11                ;828
00030c  f7fffffe          BL       TEXT_SetTextColor
000310  7838              LDRB     r0,[r7,#0]            ;829  ; dot_flag
000312  b3e8              CBZ      r0,|L6.912|
000314  7838              LDRB     r0,[r7,#0]            ;831  ; dot_flag
000316  b1a0              CBZ      r0,|L6.834|
000318  9401              STR      r4,[sp,#4]            ;832
00031a  9402              STR      r4,[sp,#8]            ;832
00031c  783a              LDRB     r2,[r7,#0]            ;833  ; dot_flag
00031e  493b              LDR      r1,|L6.1036|
000320  1d12              ADDS     r2,r2,#4              ;833
000322  a801              ADD      r0,sp,#4              ;833
000324  f7fffffe          BL       strncpy
000328  a801              ADD      r0,sp,#4              ;834
00032a  f7fffffe          BL       __hardfp_atof
00032e  ec532b18          VMOV     r2,r3,d8              ;834
000332  ec510b10          VMOV     r0,r1,d0              ;834
000336  f7fffffe          BL       __aeabi_dmul
00033a  f7fffffe          BL       __aeabi_d2uiz
00033e  f8c600a4          STR      r0,[r6,#0xa4]         ;834  ; Run_Control
                  |L6.834|
000342  f8d600a4          LDR      r0,[r6,#0xa4]         ;836  ; Run_Control
000346  4939              LDR      r1,|L6.1068|
000348  4288              CMP      r0,r1                 ;836
00034a  d810              BHI      |L6.878|
00034c  f8d600a4          LDR      r0,[r6,#0xa4]         ;836  ; Run_Control
000350  ee000a10          VMOV     s0,r0                 ;836
000354  4836              LDR      r0,|L6.1072|
000356  eeb80a40          VCVT.F32.U32 s0,s0                 ;836
00035a  eec00a09          VDIV.F32 s1,s0,s18             ;836
00035e  ed900a00          VLDR     s0,[r0,#0]            ;836
000362  ee200a80          VMUL.F32 s0,s1,s0              ;836
000366  ee100a10          VMOV     r0,s0                 ;836
00036a  4548              CMP      r0,r9                 ;836
00036c  dd01              BLE      |L6.882|
                  |L6.878|
00036e  f8c640a4          STR      r4,[r6,#0xa4]         ;837  ; Run_Control
                  |L6.882|
000372  f8d600a4          LDR      r0,[r6,#0xa4]         ;839  ; Run_Control
000376  60f0              STR      r0,[r6,#0xc]          ;839  ; Run_Control
000378  68f0              LDR      r0,[r6,#0xc]          ;841  ; Run_Control
00037a  ee000a10          VMOV     s0,r0                 ;841
00037e  eef80a40          VCVT.F32.U32 s1,s0                 ;841
000382  ee800a89          VDIV.F32 s0,s1,s18             ;841
000386  ee100a10          VMOV     r0,s0                 ;842
00038a  f7fffffe          BL       __aeabi_f2d
00038e  e000              B        |L6.914|
                  |L6.912|
000390  e022              B        |L6.984|
                  |L6.914|
000392  ec410b10          VMOV     d0,r0,r1              ;842
000396  a121              ADR      r1,|L6.1052|
000398  ec532b10          VMOV     r2,r3,d0              ;842
00039c  a801              ADD      r0,sp,#4              ;842
00039e  f7fffffe          BL       __2sprintf
0003a2  a901              ADD      r1,sp,#4              ;843
0003a4  4658              MOV      r0,r11                ;843
0003a6  f7fffffe          BL       TEXT_SetText
0003aa  f44f6111          MOV      r1,#0x910             ;845
0003ae  f8da0004          LDR      r0,[r10,#4]           ;845  ; load_wind
0003b2  f7fffffe          BL       WM_GetDialogItem
0003b6  4606              MOV      r6,r0                 ;845
0003b8  4916              LDR      r1,|L6.1044|
0003ba  4630              MOV      r0,r6                 ;846
0003bc  f7fffffe          BL       TEXT_SetBkColor
0003c0  2100              MOVS     r1,#0                 ;847
0003c2  4630              MOV      r0,r6                 ;847
0003c4  f7fffffe          BL       TEXT_SetTextColor
0003c8  f7fffffe          BL       Write_Limits
0003cc  2041              MOVS     r0,#0x41              ;850
0003ce  7028              STRB     r0,[r5,#0]            ;850
0003d0  f8884000          STRB     r4,[r8,#0]            ;851
0003d4  703c              STRB     r4,[r7,#0]            ;852
                  |L6.982|
0003d6  e6bc              B        |L6.338|
                  |L6.984|
0003d8  480c              LDR      r0,|L6.1036|
0003da  f7fffffe          BL       atoi
0003de  f44f717a          MOV      r1,#0x3e8             ;830
0003e2  4348              MULS     r0,r1,r0              ;830
0003e4  f8c600a4          STR      r0,[r6,#0xa4]         ;830  ; Run_Control
0003e8  e7ab              B        |L6.834|
0003ea  0000              DCW      0x0000
                  |L6.1004|
                          DCD      set_sw
                  |L6.1008|
0003f0  00000000          DCFD     0x408f400000000000 ; 1000
0003f4  408f4000
                  |L6.1016|
                          DCD      0x43480000
                  |L6.1020|
                          DCD      bit
                  |L6.1024|
                          DCD      ||.data||
                  |L6.1028|
000404  447a0000          DCFS     0x447a0000 ; 1000
                  |L6.1032|
                          DCD      Run_Control
                  |L6.1036|
                          DCD      set_limit
                  |L6.1040|
                          DCD      dot_flag
                  |L6.1044|
                          DCD      0x00bfffff
                  |L6.1048|
                          DCD      InFlashSave
                  |L6.1052|
00041c  252e3366          DCB      "%.3f",0
000420  00      
000421  00                DCB      0
000422  00                DCB      0
000423  00                DCB      0
                  |L6.1060|
                          DCD      0x080e0000
                  |L6.1064|
                          DCD      DISS_Voltage
                  |L6.1068|
                          DCD      0x00013880
                  |L6.1072|
                          DCD      DISS_Current
                  |L6.1076|
000434  4d33              LDR      r5,|L6.1284|
000436  4f34              LDR      r7,|L6.1288|
000438  f44f6680          MOV      r6,#0x400             ;865
00043c  7829              LDRB     r1,[r5,#0]            ;857  ; flagD
00043e  f3c113c0          UBFX     r3,r1,#7,#1           ;857
000442  f640110f          MOV      r1,#0x90f             ;862
000446  b1a3              CBZ      r3,|L6.1138|
000448  2b01              CMP      r3,#1                 ;857
00044a  d1c4              BNE      |L6.982|
00044c  4690              MOV      r8,r2                 ;862
00044e  f7fffffe          BL       WM_GetDialogItem
000452  a12e              ADR      r1,|L6.1292|
000454  f7fffffe          BL       TEXT_SetText
000458  6828              LDR      r0,[r5,#0]            ;864  ; flagD
00045a  f0200080          BIC      r0,r0,#0x80           ;864
00045e  6028              STR      r0,[r5,#0]            ;864  ; flagD
000460  4631              MOV      r1,r6                 ;865
000462  4638              MOV      r0,r7                 ;865
000464  f7fffffe          BL       GPIO_ResetBits
000468  f8884002          STRB     r4,[r8,#2]            ;866
00046c  f7fffffe          BL       Write_LOAD
000470  e66f              B        |L6.338|
                  |L6.1138|
000472  4614              MOV      r4,r2                 ;873
000474  f7fffffe          BL       WM_GetDialogItem
000478  a125              ADR      r1,|L6.1296|
00047a  f7fffffe          BL       TEXT_SetText
00047e  6828              LDR      r0,[r5,#0]            ;875  ; flagD
000480  f0400080          ORR      r0,r0,#0x80           ;875
000484  6028              STR      r0,[r5,#0]            ;875  ; flagD
000486  4631              MOV      r1,r6                 ;876
000488  4638              MOV      r0,r7                 ;876
00048a  f7fffffe          BL       GPIO_SetBits
00048e  2001              MOVS     r0,#1                 ;877
000490  70a0              STRB     r0,[r4,#2]            ;877
000492  f7fffffe          BL       Write_LOAD
000496  e65c              B        |L6.338|
                  |L6.1176|
000498  4649              MOV      r1,r9                 ;887
00049a  4617              MOV      r7,r2                 ;887
00049c  f7fffffe          BL       WM_GetDialogItem
0004a0  4680              MOV      r8,r0                 ;887
0004a2  f06f4170          MVN      r1,#0xf0000000        ;888
0004a6  4640              MOV      r0,r8                 ;888
0004a8  f7fffffe          BL       TEXT_SetBkColor
0004ac  f06f417f          MVN      r1,#0xff000000        ;889
0004b0  4640              MOV      r0,r8                 ;889
0004b2  f7fffffe          BL       TEXT_SetTextColor
0004b6  4631              MOV      r1,r6                 ;891
0004b8  6878              LDR      r0,[r7,#4]            ;891  ; load_wind
0004ba  f7fffffe          BL       WM_GetDialogItem
0004be  4606              MOV      r6,r0                 ;891
0004c0  4914              LDR      r1,|L6.1300|
0004c2  4630              MOV      r0,r6                 ;892
0004c4  f7fffffe          BL       TEXT_SetBkColor
0004c8  2100              MOVS     r1,#0                 ;893
0004ca  4630              MOV      r0,r6                 ;893
0004cc  f7fffffe          BL       TEXT_SetTextColor
0004d0  9400              STR      r4,[sp,#0]            ;894
0004d2  e007              B        |L6.1252|
                  |L6.1236|
0004d4  f89d0000          LDRB     r0,[sp,#0]            ;896
0004d8  f80b4000          STRB     r4,[r11,r0]           ;896
0004dc  f89d0000          LDRB     r0,[sp,#0]            ;894
0004e0  1c40              ADDS     r0,r0,#1              ;894
0004e2  9000              STR      r0,[sp,#0]            ;894
                  |L6.1252|
0004e4  f89d0000          LDRB     r0,[sp,#0]            ;894
0004e8  2806              CMP      r0,#6                 ;894
0004ea  d3f3              BCC      |L6.1236|
0004ec  2056              MOVS     r0,#0x56              ;898
0004ee  7028              STRB     r0,[r5,#0]            ;898
0004f0  e62f              B        |L6.338|
                  |L6.1266|
0004f2  4809              LDR      r0,|L6.1304|
0004f4  f7fffffe          BL       atoi
0004f8  f44f717a          MOV      r1,#0x3e8             ;908
0004fc  4348              MULS     r0,r1,r0              ;908
0004fe  6130              STR      r0,[r6,#0x10]         ;908  ; InFlashSave
000500  e5f2              B        |L6.232|
;;;930    void DEL_LOAD(void)
                          ENDP

000502  0000              DCW      0x0000
                  |L6.1284|
                          DCD      flagD
                  |L6.1288|
                          DCD      0x40020800
                  |L6.1292|
00050c  435600            DCB      "CV",0
00050f  00                DCB      0
                  |L6.1296|
000510  434300            DCB      "CC",0
000513  00                DCB      0
                  |L6.1300|
                          DCD      0x00bfffff
                  |L6.1304|
                          DCD      set_limit

                          AREA ||i.ResetLoad||, CODE, READONLY, ALIGN=2

                  ResetLoad PROC
;;;628    
;;;629    WM_HWIN ResetLoad(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;630      load_wind = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_HBKWIN, 0, 0);
000002  f7fffffe          BL       WM_GetDesktopWindow
000006  4603              MOV      r3,r0
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
00000c  9001              STR      r0,[sp,#4]
00000e  4a04              LDR      r2,|L7.32|
000010  2118              MOVS     r1,#0x18
000012  4804              LDR      r0,|L7.36|
000014  f7fffffe          BL       GUI_CreateDialogBox
000018  4903              LDR      r1,|L7.40|
00001a  6048              STR      r0,[r1,#4]  ; load_wind
;;;631      return load_wind;
;;;632    }
00001c  bd1c              POP      {r2-r4,pc}
;;;633    
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      _cbDialog2
                  |L7.36|
                          DCD      ||.constdata||
                  |L7.40|
                          DCD      ||.data||

                          AREA ||i._cbDialog2||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  _cbDialog2 PROC
;;;100    
;;;101    static void _cbDialog2(WM_MESSAGE * pMsg) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b06          VPUSH    {d8-d10}
000008  b083              SUB      sp,sp,#0xc
00000a  4604              MOV      r4,r0
;;;102      WM_HWIN hItem;
;;;103      int     NCode;
;;;104      int     Id;
;;;105      char    buf[6];
;;;106      static vu8 status_flash;
;;;107      float   dis_load_c = (float)SET_Current_Laod/1000;
00000c  4df7              LDR      r5,|L8.1004|
00000e  6928              LDR      r0,[r5,#0x10]  ; Run_Control
000010  ee000a10          VMOV     s0,r0
000014  eeb80a40          VCVT.F32.U32 s0,s0
000018  eddf9af5          VLDR     s19,|L8.1008|
00001c  ee80aa29          VDIV.F32 s20,s0,s19
;;;108      float   dis_load_v = (float)SET_Voltage_Laod/1000;
000020  68e8              LDR      r0,[r5,#0xc]  ; Run_Control
000022  ee000a10          VMOV     s0,r0
000026  eeb80a40          VCVT.F32.U32 s0,s0
00002a  ee809a29          VDIV.F32 s18,s0,s19
;;;109      static float olvbuff,oldv;
;;;110      static float testc1,testc2,testres;
;;;111      static vu8 testflag;
;;;112      // USER START (Optionally insert additional variables)
;;;113      // USER END
;;;114    
;;;115      switch (pMsg->MsgId) {
;;;116    
;;;117    	case WM_PAINT://无效化重绘
;;;118    		GUI_SetColor(GUI_WHITE);//设置画笔颜色
;;;119            GUI_FillRect(0,25,480,26);//画一条实线
;;;120            GUI_SetColor(GUI_ORANGE);
;;;121            GUI_SetFont(&GUI_Fontsymbol);
;;;122            GUI_UC_SetEncodeUTF8();
;;;123            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;124            if(jkflag == 1)
;;;125    		{
;;;126    			GUI_DispStringAt("Jinko", 5, 1);//SET
;;;127    		}
;;;128            GUI_SetColor(GUI_WHITE);
;;;129            GUI_SetFont(&GUI_FontHZ20S);
;;;130            GUI_UC_SetEncodeUTF8();
;;;131            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;132            GUI_DispStringAt("测量显示", 130, 3);//SET
;;;133            GUI_SetColor(GUI_WHITE);//设置前景色为白色
;;;134    //         GUI_SetFont(&GUI_FontD24x32);//
;;;135    // 		GUI_GotoXY(95,72);//设置显示坐标
;;;136    // 		GUI_DispFloatFix(DISS_Voltage,5,2);//显示电压值
;;;137    // 		GUI_GotoXY(95,140);//设置显示坐标
;;;138    // 		GUI_DispFloatFix(DISS_Current,5,2);//显示电流值
;;;139            GUI_SetFont(&GUI_Font24_1);
;;;140            GUI_DispStringAt("A",450,75);
;;;141            GUI_DispStringAt("V",450,100.);
;;;142            GUI_DispStringAt("V",450,150);
;;;143        
;;;144            GUI_SetFont(&GUI_FontEN40);
;;;145            GUI_SetColor(GUI_LIGHTGRAY);
00002e  f8df83c4          LDR      r8,|L8.1012|
;;;146            GUI_DispStringAt("C:", 28, 190);
;;;147            GUI_SetColor(GUI_LIGHTGRAY);
;;;148            GUI_DispStringAt("m", 217, 196);
;;;149            GUI_DispStringAt("AH", 238, 187);
;;;150            
;;;151            GUI_SetColor(GUI_GREEN);
;;;152            GUI_SetFont(&GUI_Fontunit);
;;;153            GUI_DispStringAt("°",342, 2);
;;;154            GUI_SetFont(&GUI_Font24_1);
;;;155            GUI_DispStringAt("C",350, 2);
;;;156    //        DrawLock();
;;;157    //        GUI_SetColor(GUI_WHITE);
;;;158    //        GUI_SetFont(&GUI_Fontset_font);
;;;159    //        GUI_DispStringAt("过放电压",290, 150);
;;;160    		break;
;;;161    	case WM_KEY://接受按键消息来处理按键功能
;;;162    		switch (((WM_KEY_INFO*)(pMsg->Data.p))->Key) 
;;;163    		{ 
;;;164    			case GUI_KEY_TAB:
;;;165    
;;;166    			break;
;;;167    			
;;;168    			case GUI_KEY_ENTER:
;;;169    			break;
;;;170    		}
;;;171    	break;
;;;172    		
;;;173    	case WM_TIMER://定时模块消息
;;;174    	if(WM_GetTimerId(pMsg->Data.v) == ID_TimerTime1)
;;;175    	{
;;;176    //        lockstat2 = lockstat1;
;;;177    //        lockstat1 = lock;
;;;178    //        
;;;179    ////        if((vu32)(DISS_Current*1000) > SET_Current_Laod)
;;;180    ////        {
;;;181    ////            testflag = 1;
;;;182    ////        }else{
;;;183    ////            testflag = 0;
;;;184    ////            testc1 = testc2 = 0;
;;;185    ////        }
;;;186    ////        if(testflag == 1)
;;;187    ////        {
;;;188    ////            testc2 = testc1;
;;;189    ////            testc1 = DISS_Current;
;;;190    ////            if(testc1 < testc2)
;;;191    ////            {
;;;192    ////                testres = testc2;
;;;193    ////                testflag = 0;
;;;194    ////                testc1 = testc2 = 0;
;;;195    ////            }
;;;196    ////        }
;;;197    //        
;;;198    //        
;;;199    //        if(lockstat1 != lockstat2)
;;;200    //        {
;;;201    //            WM_InvalidateWindow(load_wind);
;;;202    //        }
;;;203    //         if(clear_flag3 == 1)
;;;204    //         {
;;;205    		if(lock == 1)
;;;206    		{
;;;207    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
;;;208    			TEXT_SetText(hItem,"锁");
;;;209    		}else{
;;;210    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
;;;211    			TEXT_SetText(hItem,"");
;;;212    		}
;;;213    		
;;;214                if(DISS_Voltage < 0.3)
;;;215                {
;;;216                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;217                    sprintf(buf,"%.3f",0.000);       
;;;218                    TEXT_SetText(hItem,buf);
;;;219                }else{hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;221                    sprintf(buf,"%.3f",disloadv);       
;;;222                    TEXT_SetText(hItem,buf);
;;;223                }
;;;224    //         }else{
;;;225    //             hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;226    //             sprintf(buf,"%.3f",DISS_Voltage);       
;;;227    //             TEXT_SetText(hItem,buf);
;;;228    //         }
;;;229            if((float)SET_Current_Laod/1000 * DISS_Voltage > 200){
;;;230                SET_Current_Laod = 0;
;;;231                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;232                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;233                TEXT_SetTextColor(hItem, GUI_WHITE);            
;;;234                if(SET_Current_Laod > 55000 || (float)SET_Current_Laod/1000 * DISS_Voltage > 200){
;;;235                    SET_Current_Laod = 0;
;;;236                }
;;;237                dis_load_c = (float)SET_Current_Laod/1000;
;;;238                sprintf(buf,"%.3f",dis_load_c);
;;;239                TEXT_SetText(hItem,buf);
;;;240            }
;;;241            
;;;242                
;;;243            
;;;244    //        test_load();
;;;245            
;;;246            if(load_sw == load_on)
;;;247            {
;;;248                if(/*DISS_Current >= 30*/SET_Current_Laod >= 30000)
;;;249                {
;;;250                    alert_flag = 1;
;;;251                }else{
;;;252                    alert_flag = 0;
;;;253                }
;;;254                battery_c = (int)bc_raw;
;;;255                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_116);
;;;256                sprintf(buf,"%05d",battery_c);    
;;;257                TEXT_SetText(hItem,buf);
;;;258                
;;;259                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;260                sprintf(buf,"%.3f",DISS_Current);        
;;;261                TEXT_SetText(hItem,buf);
;;;262                if(status_flash == 0){
;;;263                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;264                    TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;265                    TEXT_SetFont(hItem,&GUI_FontHZ16);//设定文本字体
;;;266                    GUI_UC_SetEncodeUTF8();        
;;;267                    TEXT_SetText(hItem,"放电中");
;;;268                    status_flash = 1;
;;;269                }else{
;;;270                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;271                    TEXT_SetText(hItem,"");
;;;272                    status_flash = 0;
;;;273                }
;;;274                if(load_cutoffv != 0 && DISS_Voltage < load_cutoffv)
;;;275    			{
;;;276    				Flag_Swtich_ON=0;
;;;277                    GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;278                    mode_sw = 0;
;;;279                    load_sw = load_off;
;;;280    			}
;;;281                
;;;282    //            if(olvbuff != 0 && olvbuff - DISS_Voltage > 0.3)
;;;283    //            {
;;;284    //                Flag_Swtich_ON=0;
;;;285    //                GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;286    //                mode_sw = 0;
;;;287    //                load_sw = load_off;
;;;288    //                overloadv = olvbuff;
;;;289    //                olvbuff= 0;
;;;290    //            }else{
;;;291    //                olvbuff = DISS_Voltage;
;;;292    //                overloadv = 0;
;;;293    //            }
;;;294                
;;;295            }else{
;;;296                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;297                TEXT_SetText(hItem,"");
;;;298                
;;;299                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;300                sprintf(buf,"%.3f",0.000);        
;;;301                TEXT_SetText(hItem,buf);
;;;302            }
;;;303    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_143);       
;;;304    //        sprintf(buf,"%.3f",overloadv);
;;;305    //        TEXT_SetText(hItem,buf);
;;;306            
;;;307            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_126);       
;;;308            sprintf(buf,"%.1f",temp);
000032  f8dfb3c4          LDR      r11,|L8.1016|
000036  f6401a3d          MOV      r10,#0x93d            ;207
00003a  ed9f8bf0          VLDR     d8,|L8.1020|
00003e  6820              LDR      r0,[r4,#0]            ;115
000040  4ff0              LDR      r7,|L8.1028|
000042  f44f467f          MOV      r6,#0xff00            ;151
000046  f06f497f          MVN      r9,#0xff000000        ;118
00004a  281d              CMP      r0,#0x1d              ;115
00004c  d07e              BEQ      |L8.332|
00004e  dc04              BGT      |L8.90|
000050  280e              CMP      r0,#0xe               ;115
000052  d00b              BEQ      |L8.108|
000054  280f              CMP      r0,#0xf               ;115
000056  d106              BNE      |L8.102|
000058  e00d              B        |L8.118|
                  |L8.90|
00005a  2826              CMP      r0,#0x26              ;115
00005c  d077              BEQ      |L8.334|
00005e  f5a07080          SUB      r0,r0,#0x100          ;115
000062  3813              SUBS     r0,r0,#0x13           ;115
000064  d07f              BEQ      |L8.358|
                  |L8.102|
;;;309            TEXT_SetText(hItem,buf);
;;;310            
;;;311    		WM_RestartTimer(pMsg->Data.v, 50);
;;;312    	}
;;;313    	break;
;;;314    	
;;;315        case WM_INIT_DIALOG://重绘外观
;;;316        //
;;;317        // Initialization of 'Window'
;;;318        //
;;;319            hItem = pMsg->hWin;
;;;320            WINDOW_SetBkColor(hItem, GUI_BLACK);
;;;321    		WM_CreateTimer(hItem,ID_TimerTime1,500,0);//创建本窗口定时器
;;;322        //
;;;323        // Initialization of 'Button'
;;;324        //
;;;325    //         hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_6);
;;;326    // 		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;327    // 		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;328    // 		GUI_UC_SetEncodeUTF8();
;;;329    // 		BUTTON_SetText(hItem,"充放电");
;;;330        //
;;;331        // Initialization of 'Button'
;;;332        //
;;;333    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
;;;334    		TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;335    		TEXT_SetFont(hItem,&GUI_FontHZ14);
;;;336    		TEXT_SetText(hItem,"");
;;;337    		
;;;338    		
;;;339            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_7);
;;;340    //		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;341    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;342    		GUI_UC_SetEncodeUTF8();
;;;343            BUTTON_SetText(hItem, "内阻测试");
;;;344        //
;;;345        // Initialization of 'Button'
;;;346        //
;;;347            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_8);
;;;348            BUTTON_SetPressed(hItem,1);
;;;349    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;350    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;351    		GUI_UC_SetEncodeUTF8();
;;;352            BUTTON_SetText(hItem, "程控负载");
;;;353        //
;;;354        // Initialization of 'Button'
;;;355        //
;;;356            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
;;;357    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;358    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;359    		GUI_UC_SetEncodeUTF8();
;;;360            BUTTON_SetText(hItem, "程控电源");
;;;361        //
;;;362        // Initialization of 'Button'
;;;363        //
;;;364            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_10);
;;;365    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;366    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;367    		GUI_UC_SetEncodeUTF8();
;;;368            BUTTON_SetText(hItem, "充放电");
;;;369        //
;;;370        // Initialization of 'Button'
;;;371        //
;;;372            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_11);
;;;373    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;374    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;375    		GUI_UC_SetEncodeUTF8();
;;;376            BUTTON_SetText(hItem, "曲线");
;;;377    		
;;;378    		
;;;379    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_11);
;;;380    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;381            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;382    		GUI_UC_SetEncodeUTF8();
;;;383    		TEXT_SetText(hItem,"V:");
;;;384    		
;;;385    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_12);
;;;386    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;387            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;388    		GUI_UC_SetEncodeUTF8();
;;;389    		TEXT_SetText(hItem,"I:");
;;;390            
;;;391            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_13);
;;;392    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;393            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;394    		GUI_UC_SetEncodeUTF8();
;;;395    		TEXT_SetText(hItem,"V");
;;;396    		
;;;397    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_14);
;;;398    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;399            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;400    		GUI_UC_SetEncodeUTF8();
;;;401    		TEXT_SetText(hItem,"A");
;;;402            
;;;403            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_48);
;;;404    		TEXT_SetTextColor(hItem, GUI_BLACK);//设置字体颜色
;;;405            TEXT_SetBkColor(hItem,0x00BFFFFF);
;;;406            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;407    		GUI_UC_SetEncodeUTF8();
;;;408    		TEXT_SetText(hItem,"负载电流");
;;;409            
;;;410            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_49);
;;;411            sprintf(buf,"%.3f",dis_load_c);
;;;412    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;413            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;414    		GUI_UC_SetEncodeUTF8();     
;;;415    		TEXT_SetText(hItem,buf);
;;;416            
;;;417            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_143);
;;;418            sprintf(buf,"%.3f",load_cutoffv);
;;;419    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;420            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;421    		GUI_UC_SetEncodeUTF8();     
;;;422    		TEXT_SetText(hItem,buf);
;;;423            
;;;424            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;425            sprintf(buf,"%.3f",0.000);
;;;426    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;427            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;428    		GUI_UC_SetEncodeUTF8();        
;;;429    		TEXT_SetText(hItem,buf);
;;;430            
;;;431            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;432            sprintf(buf,"%.3f",0.000);
;;;433    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;434            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;435    		GUI_UC_SetEncodeUTF8();        
;;;436    		TEXT_SetText(hItem,buf);
;;;437            
;;;438            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_116);
;;;439            sprintf(buf,"%05d",0);
;;;440            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;441            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;442            GUI_UC_SetEncodeUTF8();        
;;;443            TEXT_SetText(hItem,buf);
;;;444            
;;;445            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_120);
;;;446            TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;447            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;448            GUI_UC_SetEncodeUTF8();        
;;;449            TEXT_SetText(hItem,"负载模式");
;;;450    		
;;;451    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_158);
;;;452            TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;453            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;454            GUI_UC_SetEncodeUTF8();        
;;;455            TEXT_SetText(hItem,"截止电压");
;;;456            
;;;457            if(load_mode == 1)
;;;458            {
;;;459                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_121);
;;;460                TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;461                TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;462                GUI_UC_SetEncodeUTF8();
;;;463                GPIO_SetBits(GPIOC,GPIO_Pin_10);//CC
;;;464                TEXT_SetText(hItem,"CC");
;;;465                flag_Load_CC = 1;
;;;466            }else if(load_mode == 0){
;;;467                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_121);
;;;468                TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;469                TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;470                GUI_UC_SetEncodeUTF8();  
;;;471                GPIO_ResetBits(GPIOC,GPIO_Pin_10);//CV            
;;;472                TEXT_SetText(hItem,"CV");
;;;473                flag_Load_CC = 0;
;;;474            }
;;;475            
;;;476            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_122);
;;;477    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;478            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;479    		GUI_UC_SetEncodeUTF8();
;;;480    		TEXT_SetText(hItem,"负载电压");
;;;481            
;;;482            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_123);
;;;483            sprintf(buf,"%.3f",dis_load_v);
;;;484    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;485            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;486    		GUI_UC_SetEncodeUTF8();     
;;;487    		TEXT_SetText(hItem,buf);
;;;488            
;;;489            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_126);
;;;490            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;491            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体       
;;;492            sprintf(buf,"%.1f",temp);
;;;493            TEXT_SetText(hItem,buf);
;;;494            
;;;495    
;;;496        // USER START (Optionally insert additional code for further widget initialization)
;;;497        // USER END
;;;498        break;
;;;499      case WM_NOTIFY_PARENT:
;;;500        Id    = WM_GetId(pMsg->hWinSrc);
;;;501        NCode = pMsg->Data.v;
;;;502        switch(Id) {
;;;503        case ID_BUTTON_6: // Notifications sent by 'Button'
;;;504          switch(NCode) {
;;;505          case WM_NOTIFICATION_CLICKED:
;;;506            // USER START (Optionally insert code for reacting on notification message)
;;;507            // USER END
;;;508            break;
;;;509          case WM_NOTIFICATION_RELEASED:
;;;510            // USER START (Optionally insert code for reacting on notification message)
;;;511            // USER END
;;;512            break;
;;;513          // USER START (Optionally insert additional code for further notification handling)
;;;514          // USER END
;;;515          }
;;;516          break;
;;;517        case ID_BUTTON_7: // Notifications sent by 'Button'
;;;518          switch(NCode) {
;;;519          case WM_NOTIFICATION_CLICKED:
;;;520            // USER START (Optionally insert code for reacting on notification message)
;;;521            // USER END
;;;522            break;
;;;523          case WM_NOTIFICATION_RELEASED:
;;;524    				
;;;525            // USER START (Optionally insert code for reacting on notification message)
;;;526            // USER END
;;;527            break;
;;;528          // USER START (Optionally insert additional code for further notification handling)
;;;529          // USER END
;;;530          }
;;;531          break;
;;;532        case ID_BUTTON_8: // Notifications sent by 'Button'
;;;533          switch(NCode) {
;;;534          case WM_NOTIFICATION_CLICKED:
;;;535            // USER START (Optionally insert code for reacting on notification message)
;;;536            // USER END
;;;537            break;
;;;538          case WM_NOTIFICATION_RELEASED:
;;;539            // USER START (Optionally insert code for reacting on notification message)
;;;540            // USER END
;;;541            break;
;;;542          // USER START (Optionally insert additional code for further notification handling)
;;;543          // USER END
;;;544          }
;;;545          break;
;;;546        case ID_BUTTON_9: // Notifications sent by 'Button'
;;;547          switch(NCode) {
;;;548          case WM_NOTIFICATION_CLICKED:
;;;549            // USER START (Optionally insert code for reacting on notification message)
;;;550            // USER END
;;;551            break;
;;;552          case WM_NOTIFICATION_RELEASED:
;;;553            // USER START (Optionally insert code for reacting on notification message)
;;;554            // USER END
;;;555            break;
;;;556          // USER START (Optionally insert additional code for further notification handling)
;;;557          // USER END
;;;558          }
;;;559          break;
;;;560        case ID_BUTTON_10: // Notifications sent by 'Button'
;;;561          switch(NCode) {
;;;562          case WM_NOTIFICATION_CLICKED:
;;;563            // USER START (Optionally insert code for reacting on notification message)
;;;564            // USER END
;;;565            break;
;;;566          case WM_NOTIFICATION_RELEASED:
;;;567            // USER START (Optionally insert code for reacting on notification message)
;;;568            // USER END
;;;569            break;
;;;570          // USER START (Optionally insert additional code for further notification handling)
;;;571          // USER END
;;;572          }
;;;573          break;
;;;574        case ID_BUTTON_11: // Notifications sent by 'Button'
;;;575          switch(NCode) {
;;;576          case WM_NOTIFICATION_CLICKED:
;;;577            // USER START (Optionally insert code for reacting on notification message)
;;;578            // USER END
;;;579            break;
;;;580          case WM_NOTIFICATION_RELEASED:
;;;581            // USER START (Optionally insert code for reacting on notification message)
;;;582            // USER END
;;;583            break;
;;;584          // USER START (Optionally insert additional code for further notification handling)
;;;585          // USER END
;;;586          }
;;;587          break;
;;;588        // USER START (Optionally insert additional code for further Ids)
;;;589        // USER END
;;;590        }
;;;591        break;
;;;592      // USER START (Optionally insert additional message handling)
;;;593      // USER END
;;;594      default:
;;;595        WM_DefaultProc(pMsg);
000066  4620              MOV      r0,r4
000068  f7fffffe          BL       WM_DefaultProc
                  |L8.108|
;;;596        break;
;;;597      }
;;;598    }
00006c  b003              ADD      sp,sp,#0xc
00006e  ecbd8b06          VPOP     {d8-d10}
000072  e8bd8ff0          POP      {r4-r11,pc}
                  |L8.118|
000076  4648              MOV      r0,r9                 ;118
000078  f7fffffe          BL       GUI_SetColor
00007c  231a              MOVS     r3,#0x1a              ;119
00007e  f44f72f0          MOV      r2,#0x1e0             ;119
000082  2119              MOVS     r1,#0x19              ;119
000084  2000              MOVS     r0,#0                 ;119
000086  f7fffffe          BL       GUI_FillRect
00008a  f24a50ff          MOV      r0,#0xa5ff            ;120
00008e  f7fffffe          BL       GUI_SetColor
000092  48dd              LDR      r0,|L8.1032|
000094  f7fffffe          BL       GUI_SetFont
000098  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00009c  2002              MOVS     r0,#2                 ;123
00009e  f7fffffe          BL       GUI_SetTextMode
0000a2  48da              LDR      r0,|L8.1036|
0000a4  7800              LDRB     r0,[r0,#0]            ;124  ; jkflag
0000a6  2801              CMP      r0,#1                 ;124
0000a8  d104              BNE      |L8.180|
0000aa  2201              MOVS     r2,#1                 ;126
0000ac  2105              MOVS     r1,#5                 ;126
0000ae  a0d8              ADR      r0,|L8.1040|
0000b0  f7fffffe          BL       GUI_DispStringAt
                  |L8.180|
0000b4  4648              MOV      r0,r9                 ;128
0000b6  f7fffffe          BL       GUI_SetColor
0000ba  48d7              LDR      r0,|L8.1048|
0000bc  f7fffffe          BL       GUI_SetFont
0000c0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0000c4  2002              MOVS     r0,#2                 ;131
0000c6  f7fffffe          BL       GUI_SetTextMode
0000ca  2203              MOVS     r2,#3                 ;132
0000cc  2182              MOVS     r1,#0x82              ;132
0000ce  a0d3              ADR      r0,|L8.1052|
0000d0  f7fffffe          BL       GUI_DispStringAt
0000d4  4648              MOV      r0,r9                 ;133
0000d6  f7fffffe          BL       GUI_SetColor
0000da  48d4              LDR      r0,|L8.1068|
0000dc  f7fffffe          BL       GUI_SetFont
0000e0  f44f74e1          MOV      r4,#0x1c2             ;140
0000e4  224b              MOVS     r2,#0x4b              ;140
0000e6  4621              MOV      r1,r4                 ;140
0000e8  a0d1              ADR      r0,|L8.1072|
0000ea  f7fffffe          BL       GUI_DispStringAt
0000ee  2264              MOVS     r2,#0x64              ;141
0000f0  4621              MOV      r1,r4                 ;141
0000f2  a0d0              ADR      r0,|L8.1076|
0000f4  f7fffffe          BL       GUI_DispStringAt
0000f8  2296              MOVS     r2,#0x96              ;142
0000fa  4621              MOV      r1,r4                 ;142
0000fc  a0cd              ADR      r0,|L8.1076|
0000fe  f7fffffe          BL       GUI_DispStringAt
000102  48cd              LDR      r0,|L8.1080|
000104  f7fffffe          BL       GUI_SetFont
000108  4640              MOV      r0,r8                 ;145
00010a  f7fffffe          BL       GUI_SetColor
00010e  22be              MOVS     r2,#0xbe              ;146
000110  211c              MOVS     r1,#0x1c              ;146
000112  a0ca              ADR      r0,|L8.1084|
000114  f7fffffe          BL       GUI_DispStringAt
000118  4640              MOV      r0,r8                 ;147
00011a  f7fffffe          BL       GUI_SetColor
00011e  22c4              MOVS     r2,#0xc4              ;148
000120  21d9              MOVS     r1,#0xd9              ;148
000122  a0c7              ADR      r0,|L8.1088|
000124  f7fffffe          BL       GUI_DispStringAt
000128  22bb              MOVS     r2,#0xbb              ;149
00012a  21ee              MOVS     r1,#0xee              ;149
00012c  a0c5              ADR      r0,|L8.1092|
00012e  f7fffffe          BL       GUI_DispStringAt
000132  4630              MOV      r0,r6                 ;151
000134  f7fffffe          BL       GUI_SetColor
000138  48c3              LDR      r0,|L8.1096|
00013a  f7fffffe          BL       GUI_SetFont
00013e  2202              MOVS     r2,#2                 ;153
000140  f44f71ab          MOV      r1,#0x156             ;153
000144  a0c1              ADR      r0,|L8.1100|
000146  f7fffffe          BL       GUI_DispStringAt
00014a  e002              B        |L8.338|
                  |L8.332|
00014c  e1b0              B        |L8.1200|
                  |L8.334|
00014e  e3be              B        |L8.2254|
000150  e009              B        |L8.358|
                  |L8.338|
000152  48b6              LDR      r0,|L8.1068|
000154  f7fffffe          BL       GUI_SetFont
000158  2202              MOVS     r2,#2                 ;155
00015a  f44f71af          MOV      r1,#0x15e             ;155
00015e  a0bc              ADR      r0,|L8.1104|
000160  f7fffffe          BL       GUI_DispStringAt
                  |L8.356|
000164  e782              B        |L8.108|
                  |L8.358|
000166  68e0              LDR      r0,[r4,#0xc]          ;174
000168  f7fffffe          BL       WM_GetTimerId
00016c  2802              CMP      r0,#2                 ;174
00016e  d1f9              BNE      |L8.356|
000170  48b8              LDR      r0,|L8.1108|
000172  7800              LDRB     r0,[r0,#0]            ;205  ; lock
000174  2801              CMP      r0,#1                 ;205
000176  d01e              BEQ      |L8.438|
000178  4651              MOV      r1,r10                ;210
00017a  6860              LDR      r0,[r4,#4]            ;210
00017c  f7fffffe          BL       WM_GetDialogItem
000180  a1a9              ADR      r1,|L8.1064|
000182  f7fffffe          BL       TEXT_SetText
                  |L8.390|
000186  f8df82d0          LDR      r8,|L8.1112|
00018a  49b4              LDR      r1,|L8.1116|
00018c  f8d80000          LDR      r0,[r8,#0]            ;214  ; DISS_Voltage
000190  4288              CMP      r0,r1                 ;214
000192  da18              BGE      |L8.454|
000194  f6400191          MOV      r1,#0x891             ;216
000198  6860              LDR      r0,[r4,#4]            ;216
00019a  f7fffffe          BL       WM_GetDialogItem
00019e  4606              MOV      r6,r0                 ;216
0001a0  ec532b18          VMOV     r2,r3,d8              ;217
0001a4  a1ae              ADR      r1,|L8.1120|
0001a6  4668              MOV      r0,sp                 ;217
0001a8  f7fffffe          BL       __2sprintf
0001ac  4669              MOV      r1,sp                 ;218
0001ae  4630              MOV      r0,r6                 ;218
0001b0  f7fffffe          BL       TEXT_SetText
0001b4  e01d              B        |L8.498|
                  |L8.438|
0001b6  4651              MOV      r1,r10                ;207
0001b8  6860              LDR      r0,[r4,#4]            ;207
0001ba  f7fffffe          BL       WM_GetDialogItem
0001be  a1aa              ADR      r1,|L8.1128|
0001c0  f7fffffe          BL       TEXT_SetText
0001c4  e7df              B        |L8.390|
                  |L8.454|
0001c6  f6400191          MOV      r1,#0x891             ;220
0001ca  6860              LDR      r0,[r4,#4]            ;220
0001cc  f7fffffe          BL       WM_GetDialogItem
0001d0  4606              MOV      r6,r0                 ;220
0001d2  48a6              LDR      r0,|L8.1132|
0001d4  6800              LDR      r0,[r0,#0]            ;221  ; disloadv
0001d6  f7fffffe          BL       __aeabi_f2d
0001da  ec410b10          VMOV     d0,r0,r1              ;221
0001de  a1a0              ADR      r1,|L8.1120|
0001e0  ec532b10          VMOV     r2,r3,d0              ;221
0001e4  4668              MOV      r0,sp                 ;221
0001e6  f7fffffe          BL       __2sprintf
0001ea  4669              MOV      r1,sp                 ;222
0001ec  4630              MOV      r0,r6                 ;222
0001ee  f7fffffe          BL       TEXT_SetText
                  |L8.498|
0001f2  6928              LDR      r0,[r5,#0x10]         ;229  ; Run_Control
0001f4  f8dfa278          LDR      r10,|L8.1136|
0001f8  ee000a10          VMOV     s0,r0                 ;229
0001fc  2600              MOVS     r6,#0                 ;229
0001fe  eeb80a40          VCVT.F32.U32 s0,s0                 ;229
000202  eec00a29          VDIV.F32 s1,s0,s19             ;229
000206  ed980a00          VLDR     s0,[r8,#0]            ;229
00020a  ee200a80          VMUL.F32 s0,s1,s0              ;229
00020e  ee100a10          VMOV     r0,s0                 ;229
000212  4550              CMP      r0,r10                ;229
000214  dd3b              BLE      |L8.654|
000216  612e              STR      r6,[r5,#0x10]         ;230  ; Run_Control
000218  f640016e          MOV      r1,#0x86e             ;231
00021c  6878              LDR      r0,[r7,#4]            ;231  ; load_wind
00021e  f7fffffe          BL       WM_GetDialogItem
000222  9002              STR      r0,[sp,#8]            ;231
000224  f06f4170          MVN      r1,#0xf0000000        ;232
000228  9802              LDR      r0,[sp,#8]            ;232
00022a  f7fffffe          BL       TEXT_SetBkColor
00022e  4649              MOV      r1,r9                 ;233
000230  9802              LDR      r0,[sp,#8]            ;233
000232  f7fffffe          BL       TEXT_SetTextColor
000236  6928              LDR      r0,[r5,#0x10]         ;234  ; Run_Control
000238  f24d61d8          MOV      r1,#0xd6d8            ;234
00023c  4288              CMP      r0,r1                 ;234
00023e  d80e              BHI      |L8.606|
000240  6928              LDR      r0,[r5,#0x10]         ;234  ; Run_Control
000242  ee000a10          VMOV     s0,r0                 ;234
000246  eef80a40          VCVT.F32.U32 s1,s0                 ;234
00024a  ee800aa9          VDIV.F32 s0,s1,s19             ;234
00024e  edd80a00          VLDR     s1,[r8,#0]            ;234
000252  ee200a20          VMUL.F32 s0,s0,s1              ;234
000256  ee100a10          VMOV     r0,s0                 ;234
00025a  4550              CMP      r0,r10                ;234
00025c  dd00              BLE      |L8.608|
                  |L8.606|
00025e  612e              STR      r6,[r5,#0x10]         ;235  ; Run_Control
                  |L8.608|
000260  6928              LDR      r0,[r5,#0x10]         ;237  ; Run_Control
000262  ee000a10          VMOV     s0,r0                 ;237
000266  eef80a40          VCVT.F32.U32 s1,s0                 ;237
00026a  ee800aa9          VDIV.F32 s0,s1,s19             ;237
00026e  ee100a10          VMOV     r0,s0                 ;238
000272  f7fffffe          BL       __aeabi_f2d
000276  ec410b10          VMOV     d0,r0,r1              ;238
00027a  a179              ADR      r1,|L8.1120|
00027c  ec532b10          VMOV     r2,r3,d0              ;238
000280  4668              MOV      r0,sp                 ;238
000282  f7fffffe          BL       __2sprintf
000286  4669              MOV      r1,sp                 ;239
000288  9802              LDR      r0,[sp,#8]            ;239
00028a  f7fffffe          BL       TEXT_SetText
                  |L8.654|
00028e  7838              LDRB     r0,[r7,#0]            ;246  ; load_sw
000290  2801              CMP      r0,#1                 ;246
000292  d032              BEQ      |L8.762|
000294  f6400196          MOV      r1,#0x896             ;296
000298  6860              LDR      r0,[r4,#4]            ;296
00029a  f7fffffe          BL       WM_GetDialogItem
00029e  a162              ADR      r1,|L8.1064|
0002a0  f7fffffe          BL       TEXT_SetText
0002a4  f6400192          MOV      r1,#0x892             ;299
0002a8  6860              LDR      r0,[r4,#4]            ;299
0002aa  f7fffffe          BL       WM_GetDialogItem
0002ae  4605              MOV      r5,r0                 ;299
0002b0  ec532b18          VMOV     r2,r3,d8              ;300
0002b4  a16a              ADR      r1,|L8.1120|
0002b6  4668              MOV      r0,sp                 ;300
0002b8  f7fffffe          BL       __2sprintf
0002bc  4669              MOV      r1,sp                 ;301
0002be  4628              MOV      r0,r5                 ;301
0002c0  f7fffffe          BL       TEXT_SetText
                  |L8.708|
0002c4  f6401112          MOV      r1,#0x912             ;307
0002c8  6860              LDR      r0,[r4,#4]            ;307
0002ca  f7fffffe          BL       WM_GetDialogItem
0002ce  4605              MOV      r5,r0                 ;307
0002d0  f8db0000          LDR      r0,[r11,#0]           ;308  ; temp
0002d4  f7fffffe          BL       __aeabi_f2d
0002d8  ec410b10          VMOV     d0,r0,r1              ;308
0002dc  a165              ADR      r1,|L8.1140|
0002de  ec532b10          VMOV     r2,r3,d0              ;308
0002e2  4668              MOV      r0,sp                 ;308
0002e4  f7fffffe          BL       __2sprintf
0002e8  4669              MOV      r1,sp                 ;309
0002ea  4628              MOV      r0,r5                 ;309
0002ec  f7fffffe          BL       TEXT_SetText
0002f0  2132              MOVS     r1,#0x32              ;311
0002f2  68e0              LDR      r0,[r4,#0xc]          ;311
0002f4  f7fffffe          BL       WM_RestartTimer
                  |L8.760|
0002f8  e6b8              B        |L8.108|
                  |L8.762|
0002fa  6929              LDR      r1,[r5,#0x10]         ;248  ; Run_Control
0002fc  f2475230          MOV      r2,#0x7530            ;248
000300  485e              LDR      r0,|L8.1148|
000302  2501              MOVS     r5,#1                 ;126
000304  4291              CMP      r1,r2                 ;248
000306  d301              BCC      |L8.780|
000308  7005              STRB     r5,[r0,#0]            ;250
00030a  e000              B        |L8.782|
                  |L8.780|
00030c  7006              STRB     r6,[r0,#0]            ;252
                  |L8.782|
00030e  485c              LDR      r0,|L8.1152|
000310  f8df9170          LDR      r9,|L8.1156|
000314  ed900a00          VLDR     s0,[r0,#0]            ;254
000318  eebd0ac0          VCVT.S32.F32 s0,s0                 ;254
00031c  ee100a10          VMOV     r0,s0                 ;254
000320  f8c90000          STR      r0,[r9,#0]            ;254  ; battery_c
000324  f640110d          MOV      r1,#0x90d             ;255
000328  6860              LDR      r0,[r4,#4]            ;255
00032a  f7fffffe          BL       WM_GetDialogItem
00032e  4682              MOV      r10,r0                ;255
000330  f8d92000          LDR      r2,[r9,#0]            ;256  ; battery_c
000334  a154              ADR      r1,|L8.1160|
000336  4668              MOV      r0,sp                 ;256
000338  f7fffffe          BL       __2sprintf
00033c  4669              MOV      r1,sp                 ;257
00033e  4650              MOV      r0,r10                ;257
000340  f7fffffe          BL       TEXT_SetText
000344  f6400192          MOV      r1,#0x892             ;259
000348  6860              LDR      r0,[r4,#4]            ;259
00034a  f7fffffe          BL       WM_GetDialogItem
00034e  4681              MOV      r9,r0                 ;259
000350  484f              LDR      r0,|L8.1168|
000352  6800              LDR      r0,[r0,#0]            ;260  ; DISS_Current
000354  f7fffffe          BL       __aeabi_f2d
000358  ec410b10          VMOV     d0,r0,r1              ;260
00035c  a140              ADR      r1,|L8.1120|
00035e  ec532b10          VMOV     r2,r3,d0              ;260
000362  4668              MOV      r0,sp                 ;260
000364  f7fffffe          BL       __2sprintf
000368  4669              MOV      r1,sp                 ;261
00036a  4648              MOV      r0,r9                 ;261
00036c  f7fffffe          BL       TEXT_SetText
000370  7878              LDRB     r0,[r7,#1]            ;262  ; status_flash
000372  b320              CBZ      r0,|L8.958|
000374  f6400196          MOV      r1,#0x896             ;270
000378  6860              LDR      r0,[r4,#4]            ;270
00037a  f7fffffe          BL       WM_GetDialogItem
00037e  a12a              ADR      r1,|L8.1064|
000380  f7fffffe          BL       TEXT_SetText
000384  707e              STRB     r6,[r7,#1]            ;272
                  |L8.902|
000386  ed970a02          VLDR     s0,[r7,#8]            ;274
00038a  eeb50ac0          VCMPE.F32 s0,#0.0               ;274
00038e  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;274
000392  d097              BEQ      |L8.708|
000394  edd80a00          VLDR     s1,[r8,#0]            ;274
000398  eef40ac0          VCMPE.F32 s1,s0                 ;274
00039c  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;274
0003a0  d290              BCS      |L8.708|
0003a2  483c              LDR      r0,|L8.1172|
0003a4  6801              LDR      r1,[r0,#0]            ;276  ; flagA
0003a6  f0210140          BIC      r1,r1,#0x40           ;276
0003aa  6001              STR      r1,[r0,#0]            ;276  ; flagA
0003ac  f44f4100          MOV      r1,#0x8000            ;277
0003b0  4839              LDR      r0,|L8.1176|
0003b2  f7fffffe          BL       GPIO_SetBits
0003b6  4839              LDR      r0,|L8.1180|
0003b8  7006              STRB     r6,[r0,#0]            ;278
0003ba  703e              STRB     r6,[r7,#0]            ;279
0003bc  e782              B        |L8.708|
                  |L8.958|
0003be  f6400196          MOV      r1,#0x896             ;263
0003c2  6860              LDR      r0,[r4,#4]            ;263
0003c4  f7fffffe          BL       WM_GetDialogItem
0003c8  4681              MOV      r9,r0                 ;263
0003ca  21ff              MOVS     r1,#0xff              ;264
0003cc  4648              MOV      r0,r9                 ;264
0003ce  f7fffffe          BL       TEXT_SetTextColor
0003d2  4933              LDR      r1,|L8.1184|
0003d4  4648              MOV      r0,r9                 ;265
0003d6  f7fffffe          BL       TEXT_SetFont
0003da  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0003de  a131              ADR      r1,|L8.1188|
0003e0  4648              MOV      r0,r9                 ;267
0003e2  f7fffffe          BL       TEXT_SetText
0003e6  707d              STRB     r5,[r7,#1]            ;268
0003e8  e7cd              B        |L8.902|
0003ea  0000              DCW      0x0000
                  |L8.1004|
                          DCD      Run_Control
                  |L8.1008|
0003f0  447a0000          DCFS     0x447a0000 ; 1000
                  |L8.1012|
                          DCD      0x00d3d3d3
                  |L8.1016|
                          DCD      temp
                  |L8.1020|
0003fc  00000000          DCFD     0x0000000000000000 ; 0
000400  00000000
                  |L8.1028|
                          DCD      ||.data||
                  |L8.1032|
                          DCD      GUI_Fontsymbol
                  |L8.1036|
                          DCD      jkflag
                  |L8.1040|
000410  4a696e6b          DCB      "Jinko",0
000414  6f00    
000416  00                DCB      0
000417  00                DCB      0
                  |L8.1048|
                          DCD      GUI_FontHZ20S
                  |L8.1052|
00041c  e6b58be9          DCB      230,181,139,233,135,143,230,152,190,231,164,186
000420  878fe698
000424  bee7a4ba
                  |L8.1064|
000428  00                DCB      0
000429  00                DCB      0
00042a  00                DCB      0
00042b  00                DCB      0
                  |L8.1068|
                          DCD      GUI_Font24_1
                  |L8.1072|
000430  4100              DCB      "A",0
000432  00                DCB      0
000433  00                DCB      0
                  |L8.1076|
000434  5600              DCB      "V",0
000436  00                DCB      0
000437  00                DCB      0
                  |L8.1080|
                          DCD      GUI_FontEN40
                  |L8.1084|
00043c  433a00            DCB      "C:",0
00043f  00                DCB      0
                  |L8.1088|
000440  6d00              DCB      "m",0
000442  00                DCB      0
000443  00                DCB      0
                  |L8.1092|
000444  414800            DCB      "AH",0
000447  00                DCB      0
                  |L8.1096|
                          DCD      GUI_Fontunit
                  |L8.1100|
00044c  c2b000            DCB      194,176,0
00044f  00                DCB      0
                  |L8.1104|
000450  4300              DCB      "C",0
000452  00                DCB      0
000453  00                DCB      0
                  |L8.1108|
                          DCD      lock
                  |L8.1112|
                          DCD      DISS_Voltage
                  |L8.1116|
                          DCD      0x3e99999a
                  |L8.1120|
000460  252e3366          DCB      "%.3f",0
000464  00      
000465  00                DCB      0
000466  00                DCB      0
000467  00                DCB      0
                  |L8.1128|
000468  e9948100          DCB      233,148,129,0
                  |L8.1132|
                          DCD      disloadv
                  |L8.1136|
                          DCD      0x43480000
                  |L8.1140|
000474  252e3166          DCB      "%.1f",0
000478  00      
000479  00                DCB      0
00047a  00                DCB      0
00047b  00                DCB      0
                  |L8.1148|
                          DCD      alert_flag
                  |L8.1152|
                          DCD      bc_raw
                  |L8.1156|
                          DCD      battery_c
                  |L8.1160|
000488  25303564          DCB      "%05d",0
00048c  00      
00048d  00                DCB      0
00048e  00                DCB      0
00048f  00                DCB      0
                  |L8.1168|
                          DCD      DISS_Current
                  |L8.1172|
                          DCD      flagA
                  |L8.1176|
                          DCD      0x40020000
                  |L8.1180|
                          DCD      mode_sw
                  |L8.1184|
                          DCD      GUI_FontHZ16
                  |L8.1188|
0004a4  e694bee7          DCB      230,148,190,231,148,181,228,184,173,0
0004a8  94b5e4b8
0004ac  ad00    
0004ae  00                DCB      0
0004af  00                DCB      0
                  |L8.1200|
0004b0  6865              LDR      r5,[r4,#4]            ;319
0004b2  2100              MOVS     r1,#0                 ;320
0004b4  4628              MOV      r0,r5                 ;320
0004b6  f7fffffe          BL       WINDOW_SetBkColor
0004ba  2300              MOVS     r3,#0                 ;321
0004bc  f44f72fa          MOV      r2,#0x1f4             ;321
0004c0  2102              MOVS     r1,#2                 ;321
0004c2  4628              MOV      r0,r5                 ;321
0004c4  f7fffffe          BL       WM_CreateTimer
0004c8  4651              MOV      r1,r10                ;333
0004ca  6860              LDR      r0,[r4,#4]            ;333
0004cc  f7fffffe          BL       WM_GetDialogItem
0004d0  4605              MOV      r5,r0                 ;333
0004d2  21ff              MOVS     r1,#0xff              ;334
0004d4  4628              MOV      r0,r5                 ;334
0004d6  f7fffffe          BL       TEXT_SetTextColor
0004da  49fd              LDR      r1,|L8.2256|
0004dc  4628              MOV      r0,r5                 ;335
0004de  f7fffffe          BL       TEXT_SetFont
0004e2  f2af01bc          ADR      r1,|L8.1064|
0004e6  4628              MOV      r0,r5                 ;336
0004e8  f7fffffe          BL       TEXT_SetText
0004ec  f640010b          MOV      r1,#0x80b             ;339
0004f0  6860              LDR      r0,[r4,#4]            ;339
0004f2  f7fffffe          BL       WM_GetDialogItem
0004f6  4605              MOV      r5,r0                 ;339
0004f8  49f6              LDR      r1,|L8.2260|
0004fa  4628              MOV      r0,r5                 ;341
0004fc  f7fffffe          BL       BUTTON_SetFont
000500  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000504  a1f4              ADR      r1,|L8.2264|
000506  4628              MOV      r0,r5                 ;343
000508  f7fffffe          BL       BUTTON_SetText
00050c  f640010c          MOV      r1,#0x80c             ;347
000510  6860              LDR      r0,[r4,#4]            ;347
000512  f7fffffe          BL       WM_GetDialogItem
000516  4605              MOV      r5,r0                 ;347
000518  2101              MOVS     r1,#1                 ;348
00051a  4628              MOV      r0,r5                 ;348
00051c  f7fffffe          BL       BUTTON_SetPressed
000520  49ec              LDR      r1,|L8.2260|
000522  4628              MOV      r0,r5                 ;350
000524  f7fffffe          BL       BUTTON_SetFont
000528  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00052c  a1ee              ADR      r1,|L8.2280|
00052e  4628              MOV      r0,r5                 ;352
000530  f7fffffe          BL       BUTTON_SetText
000534  f640010d          MOV      r1,#0x80d             ;356
000538  6860              LDR      r0,[r4,#4]            ;356
00053a  f7fffffe          BL       WM_GetDialogItem
00053e  4605              MOV      r5,r0                 ;356
000540  49e4              LDR      r1,|L8.2260|
000542  4628              MOV      r0,r5                 ;358
000544  f7fffffe          BL       BUTTON_SetFont
000548  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00054c  a1ea              ADR      r1,|L8.2296|
00054e  4628              MOV      r0,r5                 ;360
000550  f7fffffe          BL       BUTTON_SetText
000554  f640010e          MOV      r1,#0x80e             ;364
000558  6860              LDR      r0,[r4,#4]            ;364
00055a  f7fffffe          BL       WM_GetDialogItem
00055e  4605              MOV      r5,r0                 ;364
000560  49dc              LDR      r1,|L8.2260|
000562  4628              MOV      r0,r5                 ;366
000564  f7fffffe          BL       BUTTON_SetFont
000568  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00056c  a1e6              ADR      r1,|L8.2312|
00056e  4628              MOV      r0,r5                 ;368
000570  f7fffffe          BL       BUTTON_SetText
000574  f640010f          MOV      r1,#0x80f             ;372
000578  6860              LDR      r0,[r4,#4]            ;372
00057a  f7fffffe          BL       WM_GetDialogItem
00057e  4605              MOV      r5,r0                 ;372
000580  49d4              LDR      r1,|L8.2260|
000582  4628              MOV      r0,r5                 ;374
000584  f7fffffe          BL       BUTTON_SetFont
000588  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00058c  a1e1              ADR      r1,|L8.2324|
00058e  4628              MOV      r0,r5                 ;376
000590  f7fffffe          BL       BUTTON_SetText
000594  f44f6101          MOV      r1,#0x810             ;379
000598  6860              LDR      r0,[r4,#4]            ;379
00059a  f7fffffe          BL       WM_GetDialogItem
00059e  4605              MOV      r5,r0                 ;379
0005a0  4641              MOV      r1,r8                 ;380
0005a2  4628              MOV      r0,r5                 ;380
0005a4  f7fffffe          BL       TEXT_SetTextColor
0005a8  49dc              LDR      r1,|L8.2332|
0005aa  4628              MOV      r0,r5                 ;381
0005ac  f7fffffe          BL       TEXT_SetFont
0005b0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005b4  a1da              ADR      r1,|L8.2336|
0005b6  4628              MOV      r0,r5                 ;383
0005b8  f7fffffe          BL       TEXT_SetText
0005bc  f6400111          MOV      r1,#0x811             ;385
0005c0  6860              LDR      r0,[r4,#4]            ;385
0005c2  f7fffffe          BL       WM_GetDialogItem
0005c6  4605              MOV      r5,r0                 ;385
0005c8  4641              MOV      r1,r8                 ;386
0005ca  4628              MOV      r0,r5                 ;386
0005cc  f7fffffe          BL       TEXT_SetTextColor
0005d0  49d2              LDR      r1,|L8.2332|
0005d2  4628              MOV      r0,r5                 ;387
0005d4  f7fffffe          BL       TEXT_SetFont
0005d8  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005dc  a1d1              ADR      r1,|L8.2340|
0005de  4628              MOV      r0,r5                 ;389
0005e0  f7fffffe          BL       TEXT_SetText
0005e4  f640011e          MOV      r1,#0x81e             ;391
0005e8  6860              LDR      r0,[r4,#4]            ;391
0005ea  f7fffffe          BL       WM_GetDialogItem
0005ee  4605              MOV      r5,r0                 ;391
0005f0  4641              MOV      r1,r8                 ;392
0005f2  4628              MOV      r0,r5                 ;392
0005f4  f7fffffe          BL       TEXT_SetTextColor
0005f8  49c8              LDR      r1,|L8.2332|
0005fa  4628              MOV      r0,r5                 ;393
0005fc  f7fffffe          BL       TEXT_SetFont
000600  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000604  f2af11d4          ADR      r1,|L8.1076|
000608  4628              MOV      r0,r5                 ;395
00060a  f7fffffe          BL       TEXT_SetText
00060e  f640011f          MOV      r1,#0x81f             ;397
000612  6860              LDR      r0,[r4,#4]            ;397
000614  f7fffffe          BL       WM_GetDialogItem
000618  4605              MOV      r5,r0                 ;397
00061a  4641              MOV      r1,r8                 ;398
00061c  4628              MOV      r0,r5                 ;398
00061e  f7fffffe          BL       TEXT_SetTextColor
000622  49be              LDR      r1,|L8.2332|
000624  4628              MOV      r0,r5                 ;399
000626  f7fffffe          BL       TEXT_SetFont
00062a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00062e  f2af2100          ADR      r1,|L8.1072|
000632  4628              MOV      r0,r5                 ;401
000634  f7fffffe          BL       TEXT_SetText
000638  f640016d          MOV      r1,#0x86d             ;403
00063c  6860              LDR      r0,[r4,#4]            ;403
00063e  f7fffffe          BL       WM_GetDialogItem
000642  4605              MOV      r5,r0                 ;403
000644  2100              MOVS     r1,#0                 ;404
000646  4628              MOV      r0,r5                 ;404
000648  f7fffffe          BL       TEXT_SetTextColor
00064c  49b6              LDR      r1,|L8.2344|
00064e  4628              MOV      r0,r5                 ;405
000650  f7fffffe          BL       TEXT_SetBkColor
000654  49b5              LDR      r1,|L8.2348|
000656  4628              MOV      r0,r5                 ;406
000658  f7fffffe          BL       TEXT_SetFont
00065c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000660  a1b3              ADR      r1,|L8.2352|
000662  4628              MOV      r0,r5                 ;408
000664  f7fffffe          BL       TEXT_SetText
000668  f640016e          MOV      r1,#0x86e             ;410
00066c  6860              LDR      r0,[r4,#4]            ;410
00066e  f7fffffe          BL       WM_GetDialogItem
000672  4605              MOV      r5,r0                 ;410
000674  ee1a0a10          VMOV     r0,s20                ;411
000678  f7fffffe          BL       __aeabi_f2d
00067c  ec410b10          VMOV     d0,r0,r1              ;411
000680  ec532b10          VMOV     r2,r3,d0              ;411
000684  f2af2128          ADR      r1,|L8.1120|
000688  4668              MOV      r0,sp                 ;411
00068a  f7fffffe          BL       __2sprintf
00068e  4649              MOV      r1,r9                 ;412
000690  4628              MOV      r0,r5                 ;412
000692  f7fffffe          BL       TEXT_SetTextColor
000696  49aa              LDR      r1,|L8.2368|
000698  4628              MOV      r0,r5                 ;413
00069a  f7fffffe          BL       TEXT_SetFont
00069e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006a2  4669              MOV      r1,sp                 ;415
0006a4  4628              MOV      r0,r5                 ;415
0006a6  f7fffffe          BL       TEXT_SetText
0006aa  f640112d          MOV      r1,#0x92d             ;417
0006ae  6860              LDR      r0,[r4,#4]            ;417
0006b0  f7fffffe          BL       WM_GetDialogItem
0006b4  4605              MOV      r5,r0                 ;417
0006b6  68b8              LDR      r0,[r7,#8]            ;418  ; load_cutoffv
0006b8  f7fffffe          BL       __aeabi_f2d
0006bc  ec410b10          VMOV     d0,r0,r1              ;418
0006c0  ec532b10          VMOV     r2,r3,d0              ;418
0006c4  f2af2168          ADR      r1,|L8.1120|
0006c8  4668              MOV      r0,sp                 ;418
0006ca  f7fffffe          BL       __2sprintf
0006ce  4649              MOV      r1,r9                 ;419
0006d0  4628              MOV      r0,r5                 ;419
0006d2  f7fffffe          BL       TEXT_SetTextColor
0006d6  499a              LDR      r1,|L8.2368|
0006d8  4628              MOV      r0,r5                 ;420
0006da  f7fffffe          BL       TEXT_SetFont
0006de  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006e2  4669              MOV      r1,sp                 ;422
0006e4  4628              MOV      r0,r5                 ;422
0006e6  f7fffffe          BL       TEXT_SetText
0006ea  f6400191          MOV      r1,#0x891             ;424
0006ee  6860              LDR      r0,[r4,#4]            ;424
0006f0  f7fffffe          BL       WM_GetDialogItem
0006f4  4605              MOV      r5,r0                 ;424
0006f6  ec532b18          VMOV     r2,r3,d8              ;425
0006fa  f2af219c          ADR      r1,|L8.1120|
0006fe  4668              MOV      r0,sp                 ;425
000700  f7fffffe          BL       __2sprintf
000704  4631              MOV      r1,r6                 ;426
000706  4628              MOV      r0,r5                 ;426
000708  f7fffffe          BL       TEXT_SetTextColor
00070c  498d              LDR      r1,|L8.2372|
00070e  4628              MOV      r0,r5                 ;427
000710  f7fffffe          BL       TEXT_SetFont
000714  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000718  4669              MOV      r1,sp                 ;429
00071a  4628              MOV      r0,r5                 ;429
00071c  f7fffffe          BL       TEXT_SetText
000720  f6400192          MOV      r1,#0x892             ;431
000724  6860              LDR      r0,[r4,#4]            ;431
000726  f7fffffe          BL       WM_GetDialogItem
00072a  4605              MOV      r5,r0                 ;431
00072c  ec532b18          VMOV     r2,r3,d8              ;432
000730  f2af21d4          ADR      r1,|L8.1120|
000734  4668              MOV      r0,sp                 ;432
000736  f7fffffe          BL       __2sprintf
00073a  4631              MOV      r1,r6                 ;433
00073c  4628              MOV      r0,r5                 ;433
00073e  f7fffffe          BL       TEXT_SetTextColor
000742  4980              LDR      r1,|L8.2372|
000744  4628              MOV      r0,r5                 ;434
000746  f7fffffe          BL       TEXT_SetFont
00074a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00074e  4669              MOV      r1,sp                 ;436
000750  4628              MOV      r0,r5                 ;436
000752  f7fffffe          BL       TEXT_SetText
000756  f640110d          MOV      r1,#0x90d             ;438
00075a  6860              LDR      r0,[r4,#4]            ;438
00075c  f7fffffe          BL       WM_GetDialogItem
000760  4605              MOV      r5,r0                 ;438
000762  2200              MOVS     r2,#0                 ;439
000764  f2af21e0          ADR      r1,|L8.1160|
000768  4668              MOV      r0,sp                 ;439
00076a  f7fffffe          BL       __2sprintf
00076e  4631              MOV      r1,r6                 ;440
000770  4628              MOV      r0,r5                 ;440
000772  f7fffffe          BL       TEXT_SetTextColor
000776  4973              LDR      r1,|L8.2372|
000778  4628              MOV      r0,r5                 ;441
00077a  f7fffffe          BL       TEXT_SetFont
00077e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000782  4669              MOV      r1,sp                 ;443
000784  4628              MOV      r0,r5                 ;443
000786  f7fffffe          BL       TEXT_SetText
00078a  f640110e          MOV      r1,#0x90e             ;445
00078e  6860              LDR      r0,[r4,#4]            ;445
000790  f7fffffe          BL       WM_GetDialogItem
000794  4605              MOV      r5,r0                 ;445
000796  4649              MOV      r1,r9                 ;446
000798  4628              MOV      r0,r5                 ;446
00079a  f7fffffe          BL       TEXT_SetTextColor
00079e  4963              LDR      r1,|L8.2348|
0007a0  4628              MOV      r0,r5                 ;447
0007a2  f7fffffe          BL       TEXT_SetFont
0007a6  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0007aa  a167              ADR      r1,|L8.2376|
0007ac  4628              MOV      r0,r5                 ;449
0007ae  f7fffffe          BL       TEXT_SetText
0007b2  f6401139          MOV      r1,#0x939             ;451
0007b6  6860              LDR      r0,[r4,#4]            ;451
0007b8  f7fffffe          BL       WM_GetDialogItem
0007bc  4605              MOV      r5,r0                 ;451
0007be  4649              MOV      r1,r9                 ;452
0007c0  4628              MOV      r0,r5                 ;452
0007c2  f7fffffe          BL       TEXT_SetTextColor
0007c6  4959              LDR      r1,|L8.2348|
0007c8  4628              MOV      r0,r5                 ;453
0007ca  f7fffffe          BL       TEXT_SetFont
0007ce  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0007d2  a161              ADR      r1,|L8.2392|
0007d4  4628              MOV      r0,r5                 ;455
0007d6  f7fffffe          BL       TEXT_SetText
0007da  78b8              LDRB     r0,[r7,#2]            ;457  ; load_mode
0007dc  f8df8188          LDR      r8,|L8.2408|
0007e0  4d62              LDR      r5,|L8.2412|
0007e2  f640110f          MOV      r1,#0x90f             ;459
0007e6  f44f6780          MOV      r7,#0x400             ;463
0007ea  2801              CMP      r0,#1                 ;457
0007ec  d001              BEQ      |L8.2034|
0007ee  b1d8              CBZ      r0,|L8.2088|
0007f0  e034              B        |L8.2140|
                  |L8.2034|
0007f2  6860              LDR      r0,[r4,#4]            ;459
0007f4  f7fffffe          BL       WM_GetDialogItem
0007f8  4682              MOV      r10,r0                ;459
0007fa  4649              MOV      r1,r9                 ;460
0007fc  4650              MOV      r0,r10                ;460
0007fe  f7fffffe          BL       TEXT_SetTextColor
000802  494f              LDR      r1,|L8.2368|
000804  4650              MOV      r0,r10                ;461
000806  f7fffffe          BL       TEXT_SetFont
00080a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00080e  4639              MOV      r1,r7                 ;463
000810  4640              MOV      r0,r8                 ;463
000812  f7fffffe          BL       GPIO_SetBits
000816  a156              ADR      r1,|L8.2416|
000818  4650              MOV      r0,r10                ;464
00081a  f7fffffe          BL       TEXT_SetText
00081e  6828              LDR      r0,[r5,#0]            ;465  ; flagD
000820  f0400080          ORR      r0,r0,#0x80           ;465
000824  6028              STR      r0,[r5,#0]            ;465  ; flagD
000826  e019              B        |L8.2140|
                  |L8.2088|
000828  6860              LDR      r0,[r4,#4]            ;467
00082a  f7fffffe          BL       WM_GetDialogItem
00082e  4682              MOV      r10,r0                ;467
000830  4649              MOV      r1,r9                 ;468
000832  4650              MOV      r0,r10                ;468
000834  f7fffffe          BL       TEXT_SetTextColor
000838  4941              LDR      r1,|L8.2368|
00083a  4650              MOV      r0,r10                ;469
00083c  f7fffffe          BL       TEXT_SetFont
000840  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000844  4639              MOV      r1,r7                 ;471
000846  4640              MOV      r0,r8                 ;471
000848  f7fffffe          BL       GPIO_ResetBits
00084c  a149              ADR      r1,|L8.2420|
00084e  4650              MOV      r0,r10                ;472
000850  f7fffffe          BL       TEXT_SetText
000854  6828              LDR      r0,[r5,#0]            ;473  ; flagD
000856  f0200080          BIC      r0,r0,#0x80           ;473
00085a  6028              STR      r0,[r5,#0]            ;473  ; flagD
                  |L8.2140|
00085c  f44f6111          MOV      r1,#0x910             ;476
000860  6860              LDR      r0,[r4,#4]            ;476
000862  f7fffffe          BL       WM_GetDialogItem
000866  4605              MOV      r5,r0                 ;476
000868  4649              MOV      r1,r9                 ;477
00086a  4628              MOV      r0,r5                 ;477
00086c  f7fffffe          BL       TEXT_SetTextColor
000870  492e              LDR      r1,|L8.2348|
000872  4628              MOV      r0,r5                 ;478
000874  f7fffffe          BL       TEXT_SetFont
000878  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00087c  a13e              ADR      r1,|L8.2424|
00087e  4628              MOV      r0,r5                 ;480
000880  f7fffffe          BL       TEXT_SetText
000884  f6401111          MOV      r1,#0x911             ;482
000888  6860              LDR      r0,[r4,#4]            ;482
00088a  f7fffffe          BL       WM_GetDialogItem
00088e  4605              MOV      r5,r0                 ;482
000890  ee190a10          VMOV     r0,s18                ;483
000894  f7fffffe          BL       __aeabi_f2d
000898  ec410b10          VMOV     d0,r0,r1              ;483
00089c  ec532b10          VMOV     r2,r3,d0              ;483
0008a0  f2af4144          ADR      r1,|L8.1120|
0008a4  4668              MOV      r0,sp                 ;483
0008a6  f7fffffe          BL       __2sprintf
0008aa  4649              MOV      r1,r9                 ;484
0008ac  4628              MOV      r0,r5                 ;484
0008ae  f7fffffe          BL       TEXT_SetTextColor
0008b2  4923              LDR      r1,|L8.2368|
0008b4  4628              MOV      r0,r5                 ;485
0008b6  f7fffffe          BL       TEXT_SetFont
0008ba  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0008be  4669              MOV      r1,sp                 ;487
0008c0  4628              MOV      r0,r5                 ;487
0008c2  f7fffffe          BL       TEXT_SetText
0008c6  f6401112          MOV      r1,#0x912             ;489
0008ca  6860              LDR      r0,[r4,#4]            ;489
0008cc  e05c              B        |L8.2440|
                  |L8.2254|
0008ce  e078              B        |L8.2498|
                  |L8.2256|
                          DCD      GUI_FontHZ14
                  |L8.2260|
                          DCD      GUI_FontHZ16
                  |L8.2264|
0008d8  e58685e9          DCB      229,134,133,233,152,187,230,181,139,232,175,149,0
0008dc  98bbe6b5
0008e0  8be8af95
0008e4  00      
0008e5  00                DCB      0
0008e6  00                DCB      0
0008e7  00                DCB      0
                  |L8.2280|
0008e8  e7a88be6          DCB      231,168,139,230,142,167,232,180,159,232,189,189,0
0008ec  8ea7e8b4
0008f0  9fe8bdbd
0008f4  00      
0008f5  00                DCB      0
0008f6  00                DCB      0
0008f7  00                DCB      0
                  |L8.2296|
0008f8  e7a88be6          DCB      231,168,139,230,142,167,231,148,181,230,186,144,0
0008fc  8ea7e794
000900  b5e6ba90
000904  00      
000905  00                DCB      0
000906  00                DCB      0
000907  00                DCB      0
                  |L8.2312|
000908  e58585e6          DCB      229,133,133,230,148,190,231,148,181,0
00090c  94bee794
000910  b500    
000912  00                DCB      0
000913  00                DCB      0
                  |L8.2324|
000914  e69bb2e7          DCB      230,155,178,231,186,191,0
000918  babf00  
00091b  00                DCB      0
                  |L8.2332|
                          DCD      GUI_FontEN40
                  |L8.2336|
000920  563a00            DCB      "V:",0
000923  00                DCB      0
                  |L8.2340|
000924  493a00            DCB      "I:",0
000927  00                DCB      0
                  |L8.2344|
                          DCD      0x00bfffff
                  |L8.2348|
                          DCD      GUI_Fontset_font
                  |L8.2352|
000930  e8b49fe8          DCB      232,180,159,232,189,189,231,148,181,230,181,129,0
000934  bdbde794
000938  b5e6b581
00093c  00      
00093d  00                DCB      0
00093e  00                DCB      0
00093f  00                DCB      0
                  |L8.2368|
                          DCD      GUI_Font24_1
                  |L8.2372|
                          DCD      GUI_FontD24x32
                  |L8.2376|
000948  e8b49fe8          DCB      232,180,159,232,189,189,230,168,161,229,188,143,0
00094c  bdbde6a8
000950  a1e5bc8f
000954  00      
000955  00                DCB      0
000956  00                DCB      0
000957  00                DCB      0
                  |L8.2392|
000958  e688aae6          DCB      230,136,170,230,173,162,231,148,181,229,142,139,0
00095c  ada2e794
000960  b5e58e8b
000964  00      
000965  00                DCB      0
000966  00                DCB      0
000967  00                DCB      0
                  |L8.2408|
                          DCD      0x40020800
                  |L8.2412|
                          DCD      flagD
                  |L8.2416|
000970  434300            DCB      "CC",0
000973  00                DCB      0
                  |L8.2420|
000974  435600            DCB      "CV",0
000977  00                DCB      0
                  |L8.2424|
000978  e8b49fe8          DCB      232,180,159,232,189,189,231,148,181,229,142,139,0
00097c  bdbde794
000980  b5e58e8b
000984  00      
000985  00                DCB      0
000986  00                DCB      0
000987  00                DCB      0
                  |L8.2440|
000988  f7fffffe          BL       WM_GetDialogItem
00098c  4604              MOV      r4,r0                 ;489
00098e  4631              MOV      r1,r6                 ;490
000990  4620              MOV      r0,r4                 ;490
000992  f7fffffe          BL       TEXT_SetTextColor
000996  490d              LDR      r1,|L8.2508|
000998  4620              MOV      r0,r4                 ;491
00099a  f7fffffe          BL       TEXT_SetFont
00099e  f8db0000          LDR      r0,[r11,#0]           ;492  ; temp
0009a2  f7fffffe          BL       __aeabi_f2d
0009a6  ec410b10          VMOV     d0,r0,r1              ;492
0009aa  ec532b10          VMOV     r2,r3,d0              ;492
0009ae  f2af513c          ADR      r1,|L8.1140|
0009b2  4668              MOV      r0,sp                 ;492
0009b4  f7fffffe          BL       __2sprintf
0009b8  4669              MOV      r1,sp                 ;493
0009ba  4620              MOV      r0,r4                 ;493
0009bc  f7fffffe          BL       TEXT_SetText
0009c0  e49a              B        |L8.760|
                  |L8.2498|
0009c2  68a0              LDR      r0,[r4,#8]            ;500
0009c4  f7fffffe          BL       WM_GetId
0009c8  e496              B        |L8.760|
;;;599    
                          ENDP

0009ca  0000              DCW      0x0000
                  |L8.2508|
                          DCD      GUI_Font24_1

                          AREA ||i.test_load||, CODE, READONLY, ALIGN=2

                  test_load PROC
;;;1345   
;;;1346   void test_load(void)
000000  b570              PUSH     {r4-r6,lr}
;;;1347   {
;;;1348   
;;;1349       if(load_sw == load_on && para_set1 == set_1_on)
000002  4827              LDR      r0,|L9.160|
000004  7802              LDRB     r2,[r0,#0]  ; load_sw
;;;1350       {
;;;1351           if(DISS_Voltage*100 > set_max_v || DISS_Voltage*100 < set_min_v)
;;;1352           {
;;;1353              if(para_set4 == set_4_on){
;;;1354                   BEEP_Tiggr();
;;;1355               }
;;;1356               TM1650_SET_LED(0x68,0x70);//FAIL灯
;;;1357               GPIO_SetBits(GPIOD,GPIO_Pin_12);//            
000006  4d27              LDR      r5,|L9.164|
000008  f44f5480          MOV      r4,#0x1000
00000c  2a01              CMP      r2,#1                 ;1349
00000e  d103              BNE      |L9.24|
000010  4825              LDR      r0,|L9.168|
000012  7800              LDRB     r0,[r0,#0]            ;1349  ; para_set1
000014  28ff              CMP      r0,#0xff              ;1349
000016  d009              BEQ      |L9.44|
                  |L9.24|
;;;1358           }else{
;;;1359               GPIO_ResetBits(GPIOD,GPIO_Pin_12);
;;;1360               TM1650_SET_LED(0x48,0x71);
;;;1361               TM1650_SET_LED(0x68,0xF2);//PASS灯
;;;1362           }        
;;;1363       }else
;;;1364       {
;;;1365           TM1650_SET_LED(0x68,0x70);
000018  2170              MOVS     r1,#0x70
00001a  2068              MOVS     r0,#0x68
00001c  f7fffffe          BL       TM1650_SET_LED
;;;1366           GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
000020  4621              MOV      r1,r4
000022  4628              MOV      r0,r5
000024  e8bd4070          POP      {r4-r6,lr}
000028  f7ffbffe          B.W      GPIO_ResetBits
                  |L9.44|
00002c  4a1f              LDR      r2,|L9.172|
00002e  ed9f0a20          VLDR     s0,|L9.176|
000032  edd20a00          VLDR     s1,[r2,#0]            ;1351
000036  4a1f              LDR      r2,|L9.180|
000038  ee200a80          VMUL.F32 s0,s1,s0              ;1351
00003c  6b93              LDR      r3,[r2,#0x38]         ;1351  ; Run_Control
00003e  ee003a90          VMOV     s1,r3                 ;1351
000042  eef80a60          VCVT.F32.U32 s1,s1                 ;1351
000046  eeb40ae0          VCMPE.F32 s0,s1                 ;1351
00004a  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1351
00004e  dc09              BGT      |L9.100|
000050  6bd2              LDR      r2,[r2,#0x3c]         ;1351  ; Run_Control
000052  ee002a90          VMOV     s1,r2                 ;1351
000056  eef80a60          VCVT.F32.U32 s1,s1                 ;1351
00005a  eeb40ae0          VCMPE.F32 s0,s1                 ;1351
00005e  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1351
000062  d20f              BCS      |L9.132|
                  |L9.100|
000064  4814              LDR      r0,|L9.184|
000066  7800              LDRB     r0,[r0,#0]            ;1353  ; para_set4
000068  28ff              CMP      r0,#0xff              ;1353
00006a  d101              BNE      |L9.112|
00006c  f7fffffe          BL       BEEP_Tiggr
                  |L9.112|
000070  2170              MOVS     r1,#0x70              ;1356
000072  2068              MOVS     r0,#0x68              ;1356
000074  f7fffffe          BL       TM1650_SET_LED
000078  4621              MOV      r1,r4                 ;1357
00007a  4628              MOV      r0,r5                 ;1357
00007c  e8bd4070          POP      {r4-r6,lr}            ;1357
000080  f7ffbffe          B.W      GPIO_SetBits
                  |L9.132|
000084  4621              MOV      r1,r4                 ;1359
000086  4628              MOV      r0,r5                 ;1359
000088  f7fffffe          BL       GPIO_ResetBits
00008c  2171              MOVS     r1,#0x71              ;1360
00008e  2048              MOVS     r0,#0x48              ;1360
000090  f7fffffe          BL       TM1650_SET_LED
000094  e8bd4070          POP      {r4-r6,lr}            ;1361
000098  21f2              MOVS     r1,#0xf2              ;1361
00009a  2068              MOVS     r0,#0x68              ;1361
00009c  f7ffbffe          B.W      TM1650_SET_LED
;;;1367       }
;;;1368   }
                          ENDP

                  |L9.160|
                          DCD      ||.data||
                  |L9.164|
                          DCD      0x40020c00
                  |L9.168|
                          DCD      para_set1
                  |L9.172|
                          DCD      DISS_Voltage
                  |L9.176|
0000b0  42c80000          DCFS     0x42c80000 ; 100
                  |L9.180|
                          DCD      Run_Control
                  |L9.184|
                          DCD      para_set4

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aDialogCreate2
                          DCD      WINDOW_CreateIndirect
                          DCD      ||.conststring||
000008  08090000          DCW      0x0809,0x0000
00000c  000001e0          DCW      0x0000,0x01e0
000010  01100000          DCW      0x0110,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  080b0053          DCW      0x080b,0x0053
000028  00e2004d          DCW      0x00e2,0x004d
00002c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000040  080c00a3          DCW      0x080c,0x00a3
000044  00e2004d          DCW      0x00e2,0x004d
000048  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
00005c  080d00f3          DCW      0x080d,0x00f3
000060  00e2004d          DCW      0x00e2,0x004d
000064  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000078  080e0143          DCW      0x080e,0x0143
00007c  00e2004d          DCW      0x00e2,0x004d
000080  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000094  080f0193          DCW      0x080f,0x0193
000098  00e2004d          DCW      0x00e2,0x004d
00009c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000b0  0810001c          DCW      0x0810,0x001c
0000b4  00320040          DCW      0x0032,0x0040
0000b8  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000cc  0811001c          DCW      0x0811,0x001c
0000d0  00780040          DCW      0x0078,0x0040
0000d4  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000e8  081e00f0          DCW      0x081e,0x00f0
0000ec  00320020          DCW      0x0032,0x0020
0000f0  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000104  081f00f0          DCW      0x081f,0x00f0
000108  00790020          DCW      0x0079,0x0020
00010c  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000120  086d0122          DCW      0x086d,0x0122
000124  004b0050          DCW      0x004b,0x0050
000128  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00013c  086e017c          DCW      0x086e,0x017c
000140  004b0041          DCW      0x004b,0x0041
000144  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000158  090e0122          DCW      0x090e,0x0122
00015c  007d0050          DCW      0x007d,0x0050
000160  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000174  09390122          DCW      0x0939,0x0122
000178  00960050          DCW      0x0096,0x0050
00017c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000190  090f017c          DCW      0x090f,0x017c
000194  007d0041          DCW      0x007d,0x0041
000198  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001ac  09100122          DCW      0x0910,0x0122
0001b0  00640050          DCW      0x0064,0x0050
0001b4  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001c8  0911017c          DCW      0x0911,0x017c
0001cc  00640041          DCW      0x0064,0x0041
0001d0  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001e4  0891005f          DCW      0x0891,0x005f
0001e8  00300096          DCW      0x0030,0x0096
0001ec  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000200  0892005f          DCW      0x0892,0x005f
000204  00740096          DCW      0x0074,0x0096
000208  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00021c  08960190          DCW      0x0896,0x0190
000220  00040032          DCW      0x0004,0x0032
000224  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000238  090d005f          DCW      0x090d,0x005f
00023c  00b80096          DCW      0x00b8,0x0096
000240  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000254  0912012c          DCW      0x0912,0x012c
000258  00020050          DCW      0x0002,0x0050
00025c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000270  092d017c          DCW      0x092d,0x017c
000274  00960041          DCW      0x0096,0x0041
000278  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00028c  093d017c          DCW      0x093d,0x017c
000290  00080014          DCW      0x0008,0x0014
000294  000f0000          DCW      0x000f,0x0000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  57696e64          DCB      "Window",0
000004  6f7700  
000007  00                DCB      0
000008  42757474          DCB      "Button",0
00000c  6f6e00  
00000f  00                DCB      0
000010  54657874          DCB      "Text",0
000014  00      

                          AREA ||.data||, DATA, ALIGN=2

                  load_sw
000000  00                DCB      0x00
                  status_flash
000001  00                DCB      0x00
                  load_mode
000002  0000              DCB      0x00,0x00
                  load_wind
                          DCD      0x00000000
                  load_cutoffv
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\APP\\load_Face.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_load_Face_c_load_sw____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_load_Face_c_load_sw____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_load_Face_c_load_sw____REVSH|
#line 144
|__asm___11_load_Face_c_load_sw____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
