; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\load_face.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\load_face.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\load_face.crf --no_multibyte_chars ..\APP\load_Face.c]
                          THUMB

                          AREA ||i.CreateWindow2||, CODE, READONLY, ALIGN=2

                  CreateWindow2 PROC
;;;596    
;;;597    WM_HWIN CreateWindow2(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;598      if(page_sw == face_graph)
000002  4c23              LDR      r4,|L1.144|
000004  7820              LDRB     r0,[r4,#0]  ; page_sw
000006  2800              CMP      r0,#0
000008  d001              BEQ      |L1.14|
;;;599      {      
;;;600      }else{
;;;601          IO_OFF();
00000a  f7fffffe          BL       IO_OFF
                  |L1.14|
;;;602      }
;;;603      page_sw = face_load;
00000e  2004              MOVS     r0,#4
000010  7020              STRB     r0,[r4,#0]
;;;604      track = face_load;
000012  4920              LDR      r1,|L1.148|
000014  7008              STRB     r0,[r1,#0]
;;;605      set_sw = set_24;
000016  4920              LDR      r1,|L1.152|
000018  2017              MOVS     r0,#0x17
00001a  7008              STRB     r0,[r1,#0]
;;;606      load_cutoffv = (float)set_load_cutoffv/1000;
00001c  481f              LDR      r0,|L1.156|
00001e  eddf0a20          VLDR     s1,|L1.160|
000022  4e20              LDR      r6,|L1.164|
000024  ed900a04          VLDR     s0,[r0,#0x10]
000028  eeb80ac0          VCVT.F32.S32 s0,s0
00002c  ee801a20          VDIV.F32 s2,s0,s1
000030  ed861a02          VSTR     s2,[r6,#8]
;;;607      SET_Current_Laod = load_c;
000034  4c1c              LDR      r4,|L1.168|
000036  f8d40094          LDR      r0,[r4,#0x94]  ; Run_Control
00003a  6120              STR      r0,[r4,#0x10]  ; Run_Control
;;;608      if(SET_Current_Laod > 2500)
00003c  6920              LDR      r0,[r4,#0x10]  ; Run_Control
00003e  f64011c4          MOV      r1,#0x9c4
000042  4288              CMP      r0,r1
000044  d903              BLS      |L1.78|
;;;609      {
;;;610    	  C_SW(1);
000046  2001              MOVS     r0,#1
000048  f7fffffe          BL       C_SW
00004c  e002              B        |L1.84|
                  |L1.78|
;;;611      }else{
;;;612    	  C_SW(0);
00004e  2000              MOVS     r0,#0
000050  f7fffffe          BL       C_SW
                  |L1.84|
;;;613      }
;;;614      pass = 0;  
000054  4815              LDR      r0,|L1.172|
000056  2500              MOVS     r5,#0
000058  7005              STRB     r5,[r0,#0]
;;;615      mode_sw = mode_load;
00005a  4915              LDR      r1,|L1.176|
00005c  2002              MOVS     r0,#2
00005e  7008              STRB     r0,[r1,#0]
;;;616      SET_Voltage_Laod = load_v; 
000060  f8d400a4          LDR      r0,[r4,#0xa4]  ; Run_Control
000064  60e0              STR      r0,[r4,#0xc]  ; Run_Control
;;;617    //   GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;618    //   GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
;;;619    //   GPIO_SetBits(GPIOC,GPIO_Pin_13);//关闭电源输出继电器
;;;620      TM1650_SET_LED(0x68,0x70);
000066  2170              MOVS     r1,#0x70
000068  2068              MOVS     r0,#0x68
00006a  f7fffffe          BL       TM1650_SET_LED
;;;621      GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
00006e  f44f5180          MOV      r1,#0x1000
000072  4810              LDR      r0,|L1.180|
000074  f7fffffe          BL       GPIO_ResetBits
;;;622      load_wind = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_HBKWIN, 0, 0);
000078  f7fffffe          BL       WM_GetDesktopWindow
00007c  4603              MOV      r3,r0
00007e  9500              STR      r5,[sp,#0]
000080  4a0d              LDR      r2,|L1.184|
000082  2118              MOVS     r1,#0x18
000084  480d              LDR      r0,|L1.188|
000086  9501              STR      r5,[sp,#4]
000088  f7fffffe          BL       GUI_CreateDialogBox
00008c  6070              STR      r0,[r6,#4]  ; load_wind
;;;623      return load_wind;
;;;624    }
00008e  bd7c              POP      {r2-r6,pc}
;;;625    
                          ENDP

                  |L1.144|
                          DCD      page_sw
                  |L1.148|
                          DCD      track
                  |L1.152|
                          DCD      set_sw
                  |L1.156|
                          DCD      InFlashSave
                  |L1.160|
0000a0  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.164|
                          DCD      ||.data||
                  |L1.168|
                          DCD      Run_Control
                  |L1.172|
                          DCD      pass
                  |L1.176|
                          DCD      mode_sw
                  |L1.180|
                          DCD      0x40020c00
                  |L1.184|
                          DCD      _cbDialog2
                  |L1.188|
                          DCD      ||.constdata||

                          AREA ||i.DEL_LOAD||, CODE, READONLY, ALIGN=2

                  DEL_LOAD PROC
;;;926    }
;;;927    void DEL_LOAD(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;928    {
;;;929    	switch(set_sw){
000004  4827              LDR      r0,|L2.164|
000006  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;930    		case set_25:
;;;931            {
;;;932    			WM_HWIN hItem;
;;;933    //            WM_InvalidateWindow(hWinWind);
;;;934                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
000008  4827              LDR      r0,|L2.168|
;;;935    			if(bit > 0)
;;;936    			{
;;;937    				bit --;
;;;938    				set_limit[bit] = '\0';
00000a  4f28              LDR      r7,|L2.172|
00000c  2400              MOVS     r4,#0                 ;934
00000e  6840              LDR      r0,[r0,#4]            ;934
000010  4d27              LDR      r5,|L2.176|
;;;939    			}
;;;940    			if(bit == dot_flag)
000012  4e28              LDR      r6,|L2.180|
000014  2918              CMP      r1,#0x18              ;929
000016  d018              BEQ      |L2.74|
000018  2943              CMP      r1,#0x43              ;929
00001a  d02b              BEQ      |L2.116|
00001c  2956              CMP      r1,#0x56              ;929
00001e  d13e              BNE      |L2.158|
;;;941    			{
;;;942    				dot_flag = 0;
;;;943    			}
;;;944    			TEXT_SetText(hItem,set_limit);
;;;945    		}break;
;;;946    		case set_68:
;;;947            {
;;;948    			WM_HWIN hItem;
;;;949    //            WM_InvalidateWindow(hWinWind);
;;;950                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;951    			if(bit > 0)
;;;952    			{
;;;953    				bit --;
;;;954    				set_limit[bit] = '\0';
;;;955    			}
;;;956    			if(bit == dot_flag)
;;;957    			{
;;;958    				dot_flag = 0;
;;;959    			}
;;;960    			TEXT_SetText(hItem,set_limit);
;;;961    		}break;
;;;962    		case set_87:
;;;963            {
;;;964                WM_HWIN hItem;
;;;965    //            WM_InvalidateWindow(hWinWind);
;;;966                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000020  f640112d          MOV      r1,#0x92d
000024  f7fffffe          BL       WM_GetDialogItem
;;;967    			if(bit > 0)
000028  7829              LDRB     r1,[r5,#0]  ; bit
00002a  b121              CBZ      r1,|L2.54|
;;;968    			{
;;;969    				bit --;
00002c  7829              LDRB     r1,[r5,#0]  ; bit
00002e  1e49              SUBS     r1,r1,#1
000030  7029              STRB     r1,[r5,#0]
;;;970    				set_limit[bit] = '\0';
000032  7829              LDRB     r1,[r5,#0]  ; bit
000034  547c              STRB     r4,[r7,r1]
                  |L2.54|
;;;971    			}
;;;972    			if(bit == dot_flag)
000036  7829              LDRB     r1,[r5,#0]  ; bit
000038  7832              LDRB     r2,[r6,#0]  ; dot_flag
00003a  4291              CMP      r1,r2
00003c  d100              BNE      |L2.64|
;;;973    			{
;;;974    				dot_flag = 0;
00003e  7034              STRB     r4,[r6,#0]
                  |L2.64|
;;;975    			}
;;;976    			TEXT_SetText(hItem,set_limit);
000040  e8bd41f0          POP      {r4-r8,lr}
000044  4919              LDR      r1,|L2.172|
000046  f7ffbffe          B.W      TEXT_SetText
                  |L2.74|
00004a  f640016e          MOV      r1,#0x86e             ;934
00004e  f7fffffe          BL       WM_GetDialogItem
000052  7829              LDRB     r1,[r5,#0]            ;935  ; bit
000054  b121              CBZ      r1,|L2.96|
000056  7829              LDRB     r1,[r5,#0]            ;937  ; bit
000058  1e49              SUBS     r1,r1,#1              ;937
00005a  7029              STRB     r1,[r5,#0]            ;937
00005c  7829              LDRB     r1,[r5,#0]            ;938  ; bit
00005e  547c              STRB     r4,[r7,r1]            ;938
                  |L2.96|
000060  7829              LDRB     r1,[r5,#0]            ;940  ; bit
000062  7832              LDRB     r2,[r6,#0]            ;940  ; dot_flag
000064  4291              CMP      r1,r2                 ;940
000066  d100              BNE      |L2.106|
000068  7034              STRB     r4,[r6,#0]            ;942
                  |L2.106|
00006a  e8bd41f0          POP      {r4-r8,lr}            ;944
00006e  490f              LDR      r1,|L2.172|
000070  f7ffbffe          B.W      TEXT_SetText
                  |L2.116|
000074  f6401111          MOV      r1,#0x911             ;950
000078  f7fffffe          BL       WM_GetDialogItem
00007c  7829              LDRB     r1,[r5,#0]            ;951  ; bit
00007e  b121              CBZ      r1,|L2.138|
000080  7829              LDRB     r1,[r5,#0]            ;953  ; bit
000082  1e49              SUBS     r1,r1,#1              ;953
000084  7029              STRB     r1,[r5,#0]            ;953
000086  7829              LDRB     r1,[r5,#0]            ;954  ; bit
000088  547c              STRB     r4,[r7,r1]            ;954
                  |L2.138|
00008a  7829              LDRB     r1,[r5,#0]            ;956  ; bit
00008c  7832              LDRB     r2,[r6,#0]            ;956  ; dot_flag
00008e  4291              CMP      r1,r2                 ;956
000090  d100              BNE      |L2.148|
000092  7034              STRB     r4,[r6,#0]            ;958
                  |L2.148|
000094  e8bd41f0          POP      {r4-r8,lr}            ;960
000098  4904              LDR      r1,|L2.172|
00009a  f7ffbffe          B.W      TEXT_SetText
                  |L2.158|
;;;977    		}break;
;;;978    	}
;;;979    }
00009e  e8bd81f0          POP      {r4-r8,pc}
;;;980    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L2.164|
                          DCD      set_sw
                  |L2.168|
                          DCD      ||.data||
                  |L2.172|
                          DCD      set_limit
                  |L2.176|
                          DCD      bit
                  |L2.180|
                          DCD      dot_flag

                          AREA ||i.INPUT_LOAD||, CODE, READONLY, ALIGN=2

                  INPUT_LOAD PROC
;;;981    void INPUT_LOAD(char* num);            
;;;982    void INPUT_LOAD(char* num){
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4681              MOV      r9,r0
;;;983    	u8 i;    
;;;984        switch(set_sw)
000006  484f              LDR      r0,|L3.324|
000008  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;985        {
;;;986            case set_25:
;;;987            {
;;;988                WM_HWIN hItem;
;;;989     //           WM_InvalidateWindow(load_wind);
;;;990                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
00000a  484f              LDR      r0,|L3.328|
00000c  2400              MOVS     r4,#0
;;;991    			if(bit < 6)
;;;992    			{
;;;993    				strcat(set_limit,num);
00000e  4d4f              LDR      r5,|L3.332|
000010  6840              LDR      r0,[r0,#4]            ;990
;;;994    				if(dot_flag != 0 && strcmp(num,".") == 0)
000012  f8df813c          LDR      r8,|L3.336|
000016  4f4f              LDR      r7,|L3.340|
000018  2918              CMP      r1,#0x18              ;984
00001a  d01d              BEQ      |L3.88|
00001c  2943              CMP      r1,#0x43              ;984
00001e  d04b              BEQ      |L3.184|
000020  2956              CMP      r1,#0x56              ;984
000022  d17c              BNE      |L3.286|
;;;995    				{
;;;996    					
;;;997    				}else{			
;;;998    					
;;;999    					if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1000   					{
;;;1001   						dot_flag = bit;
;;;1002   					}
;;;1003   					bit ++;
;;;1004   				}
;;;1005   			}else{
;;;1006   				bit = 0;
;;;1007   				for(i=0;i<6;i++)
;;;1008   				{
;;;1009   					set_limit[i] = '\0';
;;;1010   				}
;;;1011   			}
;;;1012   			
;;;1013   			TEXT_SetText(hItem,set_limit);
;;;1014   //            switch(bit){
;;;1015   //                case 1:
;;;1016   //                {
;;;1017   //					for(i=0;i<6;i++)
;;;1018   //					{
;;;1019   //						set_limit[i] = '\0';
;;;1020   //					}
;;;1021   //                    load_c = atoi(num) * 1000;
;;;1022   //                    strcat(set_limit,num);            
;;;1023   //                    TEXT_SetText(hItem,set_limit);
;;;1024   //                    
;;;1025   //                    bit = 2;
;;;1026   //                    break;
;;;1027   //                }
;;;1028   //                case 2:
;;;1029   //                {
;;;1030   //                    strcat(set_limit,num);            
;;;1031   //                    TEXT_SetText(hItem,set_limit);
;;;1032   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1033   //                    {
;;;1034   //                        dot_flag = 1;
;;;1035   //                    }else{
;;;1036   //                        load_c = load_c * 10 + atoi(num) * 1000;
;;;1037   //                    }
;;;1038   //                    bit = 3;
;;;1039   //                    break;
;;;1040   //                }
;;;1041   //                case 3:
;;;1042   //                {
;;;1043   //                    strcat(set_limit,num);
;;;1044   //                    TEXT_SetText(hItem,set_limit);
;;;1045   //                    if(dot_flag == 0)
;;;1046   //                    {
;;;1047   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1048   //                        {                            
;;;1049   //                            dot_flag = 2;
;;;1050   //                        }else{
;;;1051   //                            load_c = 0;
;;;1052   //                        }
;;;1053   //                    }else{
;;;1054   //                        load_c = load_c + atoi(num) * 100;
;;;1055   //                    }                  
;;;1056   //                    bit = 4;
;;;1057   //                    break;
;;;1058   //                }
;;;1059   //                case 4:
;;;1060   //                {
;;;1061   //                    strcat(set_limit,num);
;;;1062   //                    TEXT_SetText(hItem,set_limit);
;;;1063   //                    if(dot_flag == 0)
;;;1064   //                    {
;;;1065   //                        load_c = 0;
;;;1066   //                    }else if(dot_flag == 2){
;;;1067   //                        load_c = load_c + atoi(num) * 100;
;;;1068   //                    }else{
;;;1069   //                        load_c = load_c + atoi(num) * 10;
;;;1070   //                    }                  
;;;1071   //                    bit = 5;
;;;1072   //                    break;
;;;1073   //                }
;;;1074   //                case 5:
;;;1075   //                {
;;;1076   //                    strcat(set_limit,num);
;;;1077   //                    TEXT_SetText(hItem,set_limit);
;;;1078   //                    if(dot_flag == 0)
;;;1079   //                    {
;;;1080   //                        load_c = 0;
;;;1081   //                    }else if(dot_flag == 1){
;;;1082   //                        load_c = load_c + atoi(num);
;;;1083   //                    }else{
;;;1084   //                        load_c = load_c + atoi(num) * 10;
;;;1085   //                    }                 
;;;1086   //                    bit = 6;
;;;1087   //                    break;
;;;1088   //                }
;;;1089   //                case 6:
;;;1090   //                {
;;;1091   //                    strcat(set_limit,num);
;;;1092   //                    TEXT_SetText(hItem,set_limit);
;;;1093   //                    if(dot_flag == 0)
;;;1094   //                    {
;;;1095   //                        load_c = 0;
;;;1096   //                    }else if(dot_flag == 2){
;;;1097   //                        load_c = load_c + atoi(num);
;;;1098   //                    }                 
;;;1099   //                    bit = 0;
;;;1100   //                    break;
;;;1101   //                }
;;;1102   //            }
;;;1103               break;
;;;1104               
;;;1105           }
;;;1106           case set_68:
;;;1107           {
;;;1108               WM_HWIN hItem;
;;;1109    //           WM_InvalidateWindow(load_wind);
;;;1110               hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;1111   			if(bit < 6)
;;;1112   			{
;;;1113   				strcat(set_limit,num);
;;;1114   				if(dot_flag != 0 && strcmp(num,".") == 0)
;;;1115   				{
;;;1116   					
;;;1117   				}else{			
;;;1118   					
;;;1119   					if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1120   					{
;;;1121   						dot_flag = bit;
;;;1122   					}
;;;1123   					bit ++;
;;;1124   				}
;;;1125   			}else{
;;;1126   				bit = 0;
;;;1127   				for(i=0;i<6;i++)
;;;1128   				{
;;;1129   					set_limit[i] = '\0';
;;;1130   				}
;;;1131   			}
;;;1132   			
;;;1133   			TEXT_SetText(hItem,set_limit);
;;;1134   //            switch(bit){
;;;1135   //                case 1:
;;;1136   //                {
;;;1137   //					for(i=0;i<6;i++)
;;;1138   //					{
;;;1139   //						set_limit[i] = '\0';
;;;1140   //					}
;;;1141   //                    load_v = atoi(num) * 1000;
;;;1142   //                    strcat(set_limit,num);            
;;;1143   //                    TEXT_SetText(hItem,set_limit);
;;;1144   //                    
;;;1145   //                    bit = 2;
;;;1146   //                    break;
;;;1147   //                }
;;;1148   //                case 2:
;;;1149   //                {
;;;1150   //                    strcat(set_limit,num);            
;;;1151   //                    TEXT_SetText(hItem,set_limit);
;;;1152   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1153   //                    {
;;;1154   //                        dot_flag = 1;
;;;1155   //                    }else{
;;;1156   //                        load_v = load_v * 10 + atoi(num) * 1000;
;;;1157   //                    }
;;;1158   //                    bit = 3;
;;;1159   //                    break;
;;;1160   //                }
;;;1161   //                case 3:
;;;1162   //                {
;;;1163   //                    strcat(set_limit,num);
;;;1164   //                    TEXT_SetText(hItem,set_limit);
;;;1165   //                    if(dot_flag == 0)
;;;1166   //                    {
;;;1167   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1168   //                        {                            
;;;1169   //                            dot_flag = 2;
;;;1170   //                        }else{
;;;1171   //                            load_v = 0;
;;;1172   //                        }
;;;1173   //                    }else{
;;;1174   //                        load_v = load_v + atoi(num) * 100;
;;;1175   //                    }                  
;;;1176   //                    bit = 4;
;;;1177   //                    break;
;;;1178   //                }
;;;1179   //                case 4:
;;;1180   //                {
;;;1181   //                    strcat(set_limit,num);
;;;1182   //                    TEXT_SetText(hItem,set_limit);
;;;1183   //                    if(dot_flag == 0)
;;;1184   //                    {
;;;1185   //                        load_v = 0;
;;;1186   //                    }else if(dot_flag == 2){
;;;1187   //                        load_v = load_v + atoi(num) * 100;
;;;1188   //                    }else{
;;;1189   //                        load_v = load_v + atoi(num) * 10;
;;;1190   //                    }                  
;;;1191   //                    bit = 5;
;;;1192   //                    break;
;;;1193   //                }
;;;1194   //                case 5:
;;;1195   //                {
;;;1196   //                    strcat(set_limit,num);
;;;1197   //                    TEXT_SetText(hItem,set_limit);
;;;1198   //                    if(dot_flag == 0)
;;;1199   //                    {
;;;1200   //                        load_v = 0;
;;;1201   //                    }else if(dot_flag == 1){
;;;1202   //                        load_v = load_v + atoi(num);
;;;1203   //                    }else{
;;;1204   //                        load_v = load_v + atoi(num) * 10;
;;;1205   //                    }                 
;;;1206   //                    bit = 6;
;;;1207   //                    break;
;;;1208   //                }
;;;1209   //                case 6:
;;;1210   //                {
;;;1211   //                    strcat(set_limit,num);
;;;1212   //                    TEXT_SetText(hItem,set_limit);
;;;1213   //                    if(dot_flag == 0)
;;;1214   //                    {
;;;1215   //                        load_v = 0;
;;;1216   //                    }else if(dot_flag == 2){
;;;1217   //                        load_v = load_v + atoi(num);
;;;1218   //                    }                 
;;;1219   //                    bit = 0;
;;;1220   //                    break;
;;;1221   //                }
;;;1222   //            }
;;;1223               break;
;;;1224               
;;;1225           }
;;;1226   		case set_87:
;;;1227           {
;;;1228               WM_HWIN hItem;
;;;1229    //           WM_InvalidateWindow(load_wind);
;;;1230               hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000024  f640112d          MOV      r1,#0x92d
000028  f7fffffe          BL       WM_GetDialogItem
00002c  4604              MOV      r4,r0
;;;1231   			if(bit < 7)
00002e  7838              LDRB     r0,[r7,#0]  ; bit
000030  2807              CMP      r0,#7
000032  d203              BCS      |L3.60|
;;;1232   			{
;;;1233   				strcat(set_limit,num);
000034  4649              MOV      r1,r9
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       strcat
                  |L3.60|
;;;1234   			}
;;;1235   			if(dot_flag != 0 && strcmp(num,".") == 0)
00003c  f8980000          LDRB     r0,[r8,#0]  ; dot_flag
000040  b128              CBZ      r0,|L3.78|
000042  a145              ADR      r1,|L3.344|
000044  4648              MOV      r0,r9
000046  f7fffffe          BL       strcmp
00004a  2800              CMP      r0,#0
00004c  d072              BEQ      |L3.308|
                  |L3.78|
;;;1236   			{
;;;1237   				
;;;1238   			}else{			
;;;1239   				
;;;1240   				if(dot_flag == 0 && strcmp(num,".") == 0)
00004e  f8980000          LDRB     r0,[r8,#0]  ; dot_flag
000052  2800              CMP      r0,#0
000054  d060              BEQ      |L3.280|
000056  e06a              B        |L3.302|
                  |L3.88|
000058  f640016e          MOV      r1,#0x86e             ;990
00005c  f7fffffe          BL       WM_GetDialogItem
000060  4606              MOV      r6,r0                 ;990
000062  7838              LDRB     r0,[r7,#0]            ;991  ; bit
000064  2806              CMP      r0,#6                 ;991
000066  d21a              BCS      |L3.158|
000068  4649              MOV      r1,r9                 ;993
00006a  4838              LDR      r0,|L3.332|
00006c  f7fffffe          BL       strcat
000070  f8980000          LDRB     r0,[r8,#0]            ;994  ; dot_flag
000074  b120              CBZ      r0,|L3.128|
000076  a138              ADR      r1,|L3.344|
000078  4648              MOV      r0,r9                 ;994
00007a  f7fffffe          BL       strcmp
00007e  b1a8              CBZ      r0,|L3.172|
                  |L3.128|
000080  f8980000          LDRB     r0,[r8,#0]            ;999  ; dot_flag
000084  b938              CBNZ     r0,|L3.150|
000086  a134              ADR      r1,|L3.344|
000088  4648              MOV      r0,r9                 ;999
00008a  f7fffffe          BL       strcmp
00008e  b910              CBNZ     r0,|L3.150|
000090  7838              LDRB     r0,[r7,#0]            ;1001  ; bit
000092  f8880000          STRB     r0,[r8,#0]            ;1001
                  |L3.150|
000096  7838              LDRB     r0,[r7,#0]            ;1003  ; bit
000098  1c40              ADDS     r0,r0,#1              ;1003
00009a  7038              STRB     r0,[r7,#0]            ;1003
00009c  e006              B        |L3.172|
                  |L3.158|
00009e  703c              STRB     r4,[r7,#0]            ;1006
0000a0  2000              MOVS     r0,#0                 ;1007
                  |L3.162|
0000a2  542c              STRB     r4,[r5,r0]            ;1009
0000a4  1c40              ADDS     r0,r0,#1              ;1007
0000a6  b2c0              UXTB     r0,r0                 ;1007
0000a8  2806              CMP      r0,#6                 ;1007
0000aa  d3fa              BCC      |L3.162|
                  |L3.172|
0000ac  4630              MOV      r0,r6                 ;1013
0000ae  e8bd47f0          POP      {r4-r10,lr}           ;1013
0000b2  4926              LDR      r1,|L3.332|
0000b4  f7ffbffe          B.W      TEXT_SetText
                  |L3.184|
0000b8  f6401111          MOV      r1,#0x911             ;1110
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4606              MOV      r6,r0                 ;1110
0000c2  7838              LDRB     r0,[r7,#0]            ;1111  ; bit
0000c4  2806              CMP      r0,#6                 ;1111
0000c6  d21a              BCS      |L3.254|
0000c8  4649              MOV      r1,r9                 ;1113
0000ca  4820              LDR      r0,|L3.332|
0000cc  f7fffffe          BL       strcat
0000d0  f8980000          LDRB     r0,[r8,#0]            ;1114  ; dot_flag
0000d4  b120              CBZ      r0,|L3.224|
0000d6  a120              ADR      r1,|L3.344|
0000d8  4648              MOV      r0,r9                 ;1114
0000da  f7fffffe          BL       strcmp
0000de  b1a8              CBZ      r0,|L3.268|
                  |L3.224|
0000e0  f8980000          LDRB     r0,[r8,#0]            ;1119  ; dot_flag
0000e4  b938              CBNZ     r0,|L3.246|
0000e6  a11c              ADR      r1,|L3.344|
0000e8  4648              MOV      r0,r9                 ;1119
0000ea  f7fffffe          BL       strcmp
0000ee  b910              CBNZ     r0,|L3.246|
0000f0  7838              LDRB     r0,[r7,#0]            ;1121  ; bit
0000f2  f8880000          STRB     r0,[r8,#0]            ;1121
                  |L3.246|
0000f6  7838              LDRB     r0,[r7,#0]            ;1123  ; bit
0000f8  1c40              ADDS     r0,r0,#1              ;1123
0000fa  7038              STRB     r0,[r7,#0]            ;1123
0000fc  e006              B        |L3.268|
                  |L3.254|
0000fe  703c              STRB     r4,[r7,#0]            ;1126
000100  2000              MOVS     r0,#0                 ;1127
                  |L3.258|
000102  542c              STRB     r4,[r5,r0]            ;1129
000104  1c40              ADDS     r0,r0,#1              ;1127
000106  b2c0              UXTB     r0,r0                 ;1127
000108  2806              CMP      r0,#6                 ;1127
00010a  d3fa              BCC      |L3.258|
                  |L3.268|
00010c  4630              MOV      r0,r6                 ;1133
00010e  e8bd47f0          POP      {r4-r10,lr}           ;1133
000112  490e              LDR      r1,|L3.332|
000114  f7ffbffe          B.W      TEXT_SetText
                  |L3.280|
000118  a10f              ADR      r1,|L3.344|
00011a  4648              MOV      r0,r9
00011c  e001              B        |L3.290|
                  |L3.286|
00011e  e00f              B        |L3.320|
000120  e008              B        |L3.308|
                  |L3.290|
000122  f7fffffe          BL       strcmp
000126  b910              CBNZ     r0,|L3.302|
;;;1241   				{
;;;1242   					dot_flag = bit;
000128  7838              LDRB     r0,[r7,#0]  ; bit
00012a  f8880000          STRB     r0,[r8,#0]
                  |L3.302|
;;;1243   				}
;;;1244   				bit ++;
00012e  7838              LDRB     r0,[r7,#0]  ; bit
000130  1c40              ADDS     r0,r0,#1
000132  7038              STRB     r0,[r7,#0]
                  |L3.308|
;;;1245   			}
;;;1246   			TEXT_SetText(hItem,set_limit);
000134  4620              MOV      r0,r4
000136  e8bd47f0          POP      {r4-r10,lr}
00013a  4904              LDR      r1,|L3.332|
00013c  f7ffbffe          B.W      TEXT_SetText
                  |L3.320|
;;;1247   //            switch(bit){
;;;1248   //                case 1:
;;;1249   //                {
;;;1250   //					for(i=0;i<6;i++)
;;;1251   //					{
;;;1252   //						set_limit[i] = '\0';
;;;1253   //					}
;;;1254   //                    set_load_cutoffv = atoi(num) * 1000;
;;;1255   //                    strcat(set_limit,num);            
;;;1256   //                    TEXT_SetText(hItem,set_limit);
;;;1257   //                    
;;;1258   //                    bit = 2;
;;;1259   //                    break;
;;;1260   //                }
;;;1261   //                case 2:
;;;1262   //                {
;;;1263   //                    strcat(set_limit,num);            
;;;1264   //                    TEXT_SetText(hItem,set_limit);
;;;1265   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1266   //                    {
;;;1267   //                        dot_flag = 1;
;;;1268   //                    }else{
;;;1269   //                        set_load_cutoffv = set_load_cutoffv * 10 + atoi(num) * 1000;
;;;1270   //                    }
;;;1271   //                    bit = 3;
;;;1272   //                    break;
;;;1273   //                }
;;;1274   //                case 3:
;;;1275   //                {
;;;1276   //                    strcat(set_limit,num);
;;;1277   //                    TEXT_SetText(hItem,set_limit);
;;;1278   //                    if(dot_flag == 0)
;;;1279   //                    {
;;;1280   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1281   //                        {                            
;;;1282   //                            dot_flag = 2;
;;;1283   //                        }else{
;;;1284   //                            set_load_cutoffv = 0;
;;;1285   //                        }
;;;1286   //                    }else{
;;;1287   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 100;
;;;1288   //                    }                  
;;;1289   //                    bit = 4;
;;;1290   //                    break;
;;;1291   //                }
;;;1292   //                case 4:
;;;1293   //                {
;;;1294   //                    strcat(set_limit,num);
;;;1295   //                    TEXT_SetText(hItem,set_limit);
;;;1296   //                    if(dot_flag == 0)
;;;1297   //                    {
;;;1298   //                        set_load_cutoffv = 0;
;;;1299   //                    }else if(dot_flag == 2){
;;;1300   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 100;
;;;1301   //                    }else{
;;;1302   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 10;
;;;1303   //                    }                  
;;;1304   //                    bit = 5;
;;;1305   //                    break;
;;;1306   //                }
;;;1307   //                case 5:
;;;1308   //                {
;;;1309   //                    strcat(set_limit,num);
;;;1310   //                    TEXT_SetText(hItem,set_limit);
;;;1311   //                    if(dot_flag == 0)
;;;1312   //                    {
;;;1313   //                        set_load_cutoffv = 0;
;;;1314   //                    }else if(dot_flag == 1){
;;;1315   //                        set_load_cutoffv = set_load_cutoffv + atoi(num);
;;;1316   //                    }else{
;;;1317   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 10;
;;;1318   //                    }                 
;;;1319   //                    bit = 6;
;;;1320   //                    break;
;;;1321   //                }
;;;1322   //                case 6:
;;;1323   //                {
;;;1324   //                    strcat(set_limit,num);
;;;1325   //                    TEXT_SetText(hItem,set_limit);
;;;1326   //                    if(dot_flag == 0)
;;;1327   //                    {
;;;1328   //                        set_load_cutoffv = 0;
;;;1329   //                    }else if(dot_flag == 2){
;;;1330   //                        set_load_cutoffv = set_load_cutoffv + atoi(num);
;;;1331   //                    }                 
;;;1332   //                    bit = 0;
;;;1333   //                    break;
;;;1334   //                }
;;;1335   //            }
;;;1336               break;
;;;1337               
;;;1338           }
;;;1339           default:break;
;;;1340       }
;;;1341   }
000140  e8bd87f0          POP      {r4-r10,pc}
;;;1342   
                          ENDP

                  |L3.324|
                          DCD      set_sw
                  |L3.328|
                          DCD      ||.data||
                  |L3.332|
                          DCD      set_limit
                  |L3.336|
                          DCD      dot_flag
                  |L3.340|
                          DCD      bit
                  |L3.344|
000158  2e00              DCB      ".",0
00015a  00                DCB      0
00015b  00                DCB      0

                          AREA ||i.LOAD_OP_DOWN||, CODE, READONLY, ALIGN=2

                  LOAD_OP_DOWN PROC
;;;631    void LOAD_OP_DOWN(void);
;;;632    void LOAD_OP_DOWN(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;633    {
;;;634        switch(set_sw)
000004  4d34              LDR      r5,|L4.216|
000006  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;635        {
;;;636            case set_24:
;;;637            {
;;;638                WM_HWIN hItem;
;;;639                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
000008  4c34              LDR      r4,|L4.220|
;;;640                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00000a  f06f4670          MVN      r6,#0xf0000000
;;;641                TEXT_SetTextColor(hItem, GUI_WHITE);
00000e  1137              ASRS     r7,r6,#4
;;;642                
;;;643                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;644                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000010  f8df90cc          LDR      r9,|L4.224|
000014  6860              LDR      r0,[r4,#4]            ;634
000016  f44f6811          MOV      r8,#0x910             ;643
00001a  2917              CMP      r1,#0x17              ;634
00001c  d023              BEQ      |L4.102|
;;;645                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;646    
;;;647                set_sw = set_66;
;;;648                break;
;;;649            }
;;;650            case set_66:
;;;651            {
;;;652                WM_HWIN hItem;
;;;653                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;654                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;655                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;656                
;;;657                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
00001e  f6401a0e          MOV      r10,#0x90e
000022  2941              CMP      r1,#0x41              ;634
000024  d03c              BEQ      |L4.160|
000026  2942              CMP      r1,#0x42              ;634
000028  d11b              BNE      |L4.98|
;;;658                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;659                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;660    
;;;661                set_sw = set_67;
;;;662                break;
;;;663            }
;;;664    		 case set_67:
;;;665            {
;;;666                WM_HWIN hItem;
;;;667                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
00002a  4651              MOV      r1,r10
00002c  f7fffffe          BL       WM_GetDialogItem
000030  4680              MOV      r8,r0
;;;668                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
000032  4631              MOV      r1,r6
000034  4640              MOV      r0,r8
000036  f7fffffe          BL       TEXT_SetBkColor
;;;669                TEXT_SetTextColor(hItem, GUI_WHITE);
00003a  4639              MOV      r1,r7
00003c  4640              MOV      r0,r8
00003e  f7fffffe          BL       TEXT_SetTextColor
;;;670                
;;;671                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000042  f6401139          MOV      r1,#0x939
000046  6860              LDR      r0,[r4,#4]  ; load_wind
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4604              MOV      r4,r0
;;;672                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00004e  4649              MOV      r1,r9
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TEXT_SetBkColor
;;;673                TEXT_SetTextColor(hItem, GUI_BLACK);
000056  2100              MOVS     r1,#0
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       TEXT_SetTextColor
;;;674    
;;;675                set_sw = set_86;
00005e  2055              MOVS     r0,#0x55
000060  7028              STRB     r0,[r5,#0]
                  |L4.98|
;;;676                break;
;;;677            }
;;;678        }   
;;;679    }
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L4.102|
000066  f640016d          MOV      r1,#0x86d             ;639
00006a  f7fffffe          BL       WM_GetDialogItem
00006e  4682              MOV      r10,r0                ;639
000070  4631              MOV      r1,r6                 ;640
000072  4650              MOV      r0,r10                ;640
000074  f7fffffe          BL       TEXT_SetBkColor
000078  4639              MOV      r1,r7                 ;641
00007a  4650              MOV      r0,r10                ;641
00007c  f7fffffe          BL       TEXT_SetTextColor
000080  4641              MOV      r1,r8                 ;643
000082  6860              LDR      r0,[r4,#4]            ;643  ; load_wind
000084  f7fffffe          BL       WM_GetDialogItem
000088  4604              MOV      r4,r0                 ;643
00008a  4649              MOV      r1,r9                 ;644
00008c  4620              MOV      r0,r4                 ;644
00008e  f7fffffe          BL       TEXT_SetBkColor
000092  2100              MOVS     r1,#0                 ;645
000094  4620              MOV      r0,r4                 ;645
000096  f7fffffe          BL       TEXT_SetTextColor
00009a  2041              MOVS     r0,#0x41              ;647
00009c  7028              STRB     r0,[r5,#0]            ;647
00009e  e7e0              B        |L4.98|
                  |L4.160|
0000a0  4641              MOV      r1,r8                 ;653
0000a2  f7fffffe          BL       WM_GetDialogItem
0000a6  4680              MOV      r8,r0                 ;653
0000a8  4631              MOV      r1,r6                 ;654
0000aa  4640              MOV      r0,r8                 ;654
0000ac  f7fffffe          BL       TEXT_SetBkColor
0000b0  4639              MOV      r1,r7                 ;655
0000b2  4640              MOV      r0,r8                 ;655
0000b4  f7fffffe          BL       TEXT_SetTextColor
0000b8  4651              MOV      r1,r10                ;657
0000ba  6860              LDR      r0,[r4,#4]            ;657  ; load_wind
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4604              MOV      r4,r0                 ;657
0000c2  4649              MOV      r1,r9                 ;658
0000c4  4620              MOV      r0,r4                 ;658
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  2100              MOVS     r1,#0                 ;659
0000cc  4620              MOV      r0,r4                 ;659
0000ce  f7fffffe          BL       TEXT_SetTextColor
0000d2  2042              MOVS     r0,#0x42              ;661
0000d4  7028              STRB     r0,[r5,#0]            ;661
0000d6  e7c4              B        |L4.98|
;;;680    
                          ENDP

                  |L4.216|
                          DCD      set_sw
                  |L4.220|
                          DCD      ||.data||
                  |L4.224|
                          DCD      0x00bfffff

                          AREA ||i.LOAD_OP_UP||, CODE, READONLY, ALIGN=2

                  LOAD_OP_UP PROC
;;;681    void LOAD_OP_UP(void);
;;;682    void LOAD_OP_UP(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;683    {
;;;684        switch(set_sw)
000004  4d34              LDR      r5,|L5.216|
000006  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;685        {
;;;686            case set_66:
;;;687            {
;;;688                WM_HWIN hItem;
;;;689                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
000008  4c34              LDR      r4,|L5.220|
;;;690                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;691                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;692                
;;;693                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;694                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00000a  f8dfa0d4          LDR      r10,|L5.224|
00000e  f44f6611          MOV      r6,#0x910             ;689
000012  6860              LDR      r0,[r4,#4]            ;684
000014  f06f4870          MVN      r8,#0xf0000000        ;690
000018  f06f497f          MVN      r9,#0xff000000        ;691
00001c  2941              CMP      r1,#0x41              ;684
00001e  d022              BEQ      |L5.102|
;;;695                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;696    
;;;697                set_sw = set_24;
;;;698                break;
;;;699            }
;;;700            case set_67:
;;;701            {
;;;702                WM_HWIN hItem;
;;;703                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
000020  1eb7              SUBS     r7,r6,#2
000022  2942              CMP      r1,#0x42              ;684
000024  d03c              BEQ      |L5.160|
000026  2955              CMP      r1,#0x55              ;684
000028  d11b              BNE      |L5.98|
;;;704                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;705                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;706                
;;;707                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;708                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;709                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;710    
;;;711                set_sw = set_66;
;;;712                break;
;;;713            }
;;;714    		case set_86:
;;;715            {
;;;716                WM_HWIN hItem;
;;;717                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
00002a  f6401139          MOV      r1,#0x939
00002e  f7fffffe          BL       WM_GetDialogItem
000032  4606              MOV      r6,r0
;;;718                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
000034  4641              MOV      r1,r8
000036  4630              MOV      r0,r6
000038  f7fffffe          BL       TEXT_SetBkColor
;;;719                TEXT_SetTextColor(hItem, GUI_WHITE);
00003c  4649              MOV      r1,r9
00003e  4630              MOV      r0,r6
000040  f7fffffe          BL       TEXT_SetTextColor
;;;720                
;;;721                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
000044  4639              MOV      r1,r7
000046  6860              LDR      r0,[r4,#4]  ; load_wind
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4604              MOV      r4,r0
;;;722                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00004e  4651              MOV      r1,r10
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TEXT_SetBkColor
;;;723                TEXT_SetTextColor(hItem, GUI_BLACK);
000056  2100              MOVS     r1,#0
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       TEXT_SetTextColor
;;;724    
;;;725                set_sw = set_67;
00005e  2042              MOVS     r0,#0x42
000060  7028              STRB     r0,[r5,#0]
                  |L5.98|
;;;726                break;
;;;727            }
;;;728        }   
;;;729    }
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L5.102|
000066  4631              MOV      r1,r6                 ;689
000068  f7fffffe          BL       WM_GetDialogItem
00006c  4606              MOV      r6,r0                 ;689
00006e  4641              MOV      r1,r8                 ;690
000070  4630              MOV      r0,r6                 ;690
000072  f7fffffe          BL       TEXT_SetBkColor
000076  4649              MOV      r1,r9                 ;691
000078  4630              MOV      r0,r6                 ;691
00007a  f7fffffe          BL       TEXT_SetTextColor
00007e  f640016d          MOV      r1,#0x86d             ;693
000082  6860              LDR      r0,[r4,#4]            ;693  ; load_wind
000084  f7fffffe          BL       WM_GetDialogItem
000088  4604              MOV      r4,r0                 ;693
00008a  4651              MOV      r1,r10                ;694
00008c  4620              MOV      r0,r4                 ;694
00008e  f7fffffe          BL       TEXT_SetBkColor
000092  2100              MOVS     r1,#0                 ;695
000094  4620              MOV      r0,r4                 ;695
000096  f7fffffe          BL       TEXT_SetTextColor
00009a  2017              MOVS     r0,#0x17              ;697
00009c  7028              STRB     r0,[r5,#0]            ;697
00009e  e7e0              B        |L5.98|
                  |L5.160|
0000a0  4639              MOV      r1,r7                 ;703
0000a2  f7fffffe          BL       WM_GetDialogItem
0000a6  4607              MOV      r7,r0                 ;703
0000a8  4641              MOV      r1,r8                 ;704
0000aa  4638              MOV      r0,r7                 ;704
0000ac  f7fffffe          BL       TEXT_SetBkColor
0000b0  4649              MOV      r1,r9                 ;705
0000b2  4638              MOV      r0,r7                 ;705
0000b4  f7fffffe          BL       TEXT_SetTextColor
0000b8  4631              MOV      r1,r6                 ;707
0000ba  6860              LDR      r0,[r4,#4]            ;707  ; load_wind
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4604              MOV      r4,r0                 ;707
0000c2  4651              MOV      r1,r10                ;708
0000c4  4620              MOV      r0,r4                 ;708
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  2100              MOVS     r1,#0                 ;709
0000cc  4620              MOV      r0,r4                 ;709
0000ce  f7fffffe          BL       TEXT_SetTextColor
0000d2  2041              MOVS     r0,#0x41              ;711
0000d4  7028              STRB     r0,[r5,#0]            ;711
0000d6  e7c4              B        |L5.98|
;;;730    
                          ENDP

                  |L5.216|
                          DCD      set_sw
                  |L5.220|
                          DCD      ||.data||
                  |L5.224|
                          DCD      0x00bfffff

                          AREA ||i.LOAD_SET||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  LOAD_SET PROC
;;;732    void LOAD_SET(void);
;;;733    void LOAD_SET(void) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b083              SUB      sp,sp,#0xc
;;;734        char    buf[6];
;;;735        float   dis_load_c;
;;;736        float   dis_load_v;
;;;737        vu8 i;
;;;738        switch(set_sw)
00000a  4df8              LDR      r5,|L6.1004|
00000c  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;739        {
;;;740            case set_24:
;;;741            {
;;;742                WM_HWIN hItem;
;;;743    //            WM_InvalidateWindow(load_wind);
;;;744                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;745                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;746                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;747                       
;;;748                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;749                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;750                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;751                for(i=0;i<6;i++)
;;;752                {
;;;753                    set_limit[i] = '\0';
;;;754                }
;;;755                set_sw = set_25;
;;;756                break;
;;;757            }
;;;758            case set_25:
;;;759            {
;;;760                WM_HWIN hItem;
;;;761    //            WM_InvalidateWindow(lo\\JK_BTSET\../drive/AD7689.c\AD7689_Bufferad_wind);
;;;762                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;763                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;764                TEXT_SetTextColor(hItem, GUI_WHITE);  
;;;765    			if(dot_flag == 0){
;;;766    				load_c = atoi(set_limit)*1000;					
;;;767    			}else if(dot_flag != 0){
;;;768    				memset(buf, '\0', sizeof(buf));
;;;769    				strncpy(buf,set_limit,dot_flag + 4);
;;;770    				load_c = atof(buf)*1000;
00000e  ed9f8bf8          VLDR     d8,|L6.1008|
000012  4afb              LDR      r2,|L6.1024|
;;;771    			}
;;;772    			if(load_c > 30000 || (float)load_c/1000 * DISS_Voltage > 200){
000014  f8df93e0          LDR      r9,|L6.1016|
;;;773                    load_c = 0;
;;;774                }
;;;775    			if(load_c > 2500)
;;;776    			{
;;;777    				C_SW(1);
;;;778    			}else{
;;;779    				C_SW(0);
;;;780    			}
;;;781                SET_Current_Laod = load_c;            
;;;782    //            if(load_c > 3000)
;;;783    //			{
;;;784    //				C_SW(1);
;;;785    //			}else{
;;;786    //				C_SW(0);
;;;787    //			}
;;;788                dis_load_c = (float)SET_Current_Laod/1000;
;;;789                sprintf(buf,"%.3f",dis_load_c);
;;;790                TEXT_SetText(hItem,buf);
;;;791                
;;;792                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;793                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;794                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;795                Write_Limits();
;;;796                
;;;797                set_sw = set_24;
;;;798                bit = 0;
000018  f8df83e0          LDR      r8,|L6.1020|
00001c  ed9f9af9          VLDR     s18,|L6.1028|
000020  4ef9              LDR      r6,|L6.1032|
000022  f8dfb3e8          LDR      r11,|L6.1036|
000026  2400              MOVS     r4,#0                 ;753
000028  4ff9              LDR      r7,|L6.1040|
00002a  6850              LDR      r0,[r2,#4]            ;738
00002c  2942              CMP      r1,#0x42              ;738
00002e  d07c              BEQ      |L6.298|
000030  dc27              BGT      |L6.130|
000032  f6400a6e          MOV      r10,#0x86e            ;748
000036  2917              CMP      r1,#0x17              ;738
000038  d078              BEQ      |L6.300|
00003a  2918              CMP      r1,#0x18              ;738
00003c  d077              BEQ      |L6.302|
00003e  2941              CMP      r1,#0x41              ;738
000040  d176              BNE      |L6.304|
;;;799                dot_flag = 0;
;;;800                break;
;;;801            }
;;;802            case set_66:
;;;803            {
;;;804                WM_HWIN hItem;
;;;805    //            WM_InvalidateWindow(load_wind);
;;;806                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
000042  f44f6111          MOV      r1,#0x910
000046  4616              MOV      r6,r2
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4607              MOV      r7,r0
;;;807                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00004e  f06f4170          MVN      r1,#0xf0000000
000052  4638              MOV      r0,r7
000054  f7fffffe          BL       TEXT_SetBkColor
;;;808                TEXT_SetTextColor(hItem, GUI_WHITE);
000058  f06f417f          MVN      r1,#0xff000000
00005c  4638              MOV      r0,r7
00005e  f7fffffe          BL       TEXT_SetTextColor
;;;809                       
;;;810                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
000062  f6401111          MOV      r1,#0x911
000066  6870              LDR      r0,[r6,#4]  ; load_wind
000068  f7fffffe          BL       WM_GetDialogItem
00006c  4606              MOV      r6,r0
;;;811                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00006e  49e9              LDR      r1,|L6.1044|
000070  4630              MOV      r0,r6
000072  f7fffffe          BL       TEXT_SetBkColor
;;;812                TEXT_SetTextColor(hItem, GUI_BLACK);
000076  2100              MOVS     r1,#0
000078  4630              MOV      r0,r6
00007a  f7fffffe          BL       TEXT_SetTextColor
;;;813                for(i=0;i<6;i++)
00007e  9400              STR      r4,[sp,#0]
000080  e12f              B        |L6.738|
                  |L6.130|
000082  2943              CMP      r1,#0x43              ;738
000084  d07d              BEQ      |L6.386|
;;;814                {
;;;815                    set_limit[i] = '\0';
;;;816                }
;;;817                set_sw = set_68;
;;;818                break;
;;;819            }
;;;820            case set_68:
;;;821            {
;;;822                WM_HWIN hItem;
;;;823                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;824                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;825                TEXT_SetTextColor(hItem, GUI_WHITE); 
;;;826    			if(dot_flag == 0){
;;;827    				load_v = atoi(set_limit)*1000;					
;;;828    			}else if(dot_flag != 0){
;;;829    				memset(buf, '\0', sizeof(buf));
;;;830    				strncpy(buf,set_limit,dot_flag + 4);
;;;831    				load_v = atof(buf)*1000;
;;;832    			}
;;;833    			if(load_v > 80000 || (float)load_v/1000 * DISS_Current > 200){
;;;834                    load_v = 0;
;;;835                }
;;;836                SET_Voltage_Laod = load_v;          
;;;837                
;;;838                dis_load_v = (float)SET_Voltage_Laod/1000;
;;;839                sprintf(buf,"%.3f",dis_load_v);
;;;840                TEXT_SetText(hItem,buf);
;;;841                
;;;842                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;843                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;844                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;845                Write_Limits();
;;;846                
;;;847                set_sw = set_66;
;;;848                bit = 0;
;;;849                dot_flag = 0;
;;;850                break;
;;;851            }
;;;852            case set_67:
;;;853            {
;;;854                switch(flag_Load_CC)
;;;855                {
;;;856                    case 1:
;;;857                    {
;;;858                        WM_HWIN hItem;
;;;859                        hItem = WM_GetDialogItem(load_wind, ID_TEXT_121);
;;;860                        TEXT_SetText(hItem,"CV");
;;;861    					flag_Load_CC = 0;
;;;862                        GPIO_ResetBits(GPIOC,GPIO_Pin_10);//CV                  
;;;863                        load_mode = 0;
;;;864                        Write_LOAD();
;;;865                        break;
;;;866                    }
;;;867                    case 0:
;;;868                    {
;;;869                         WM_HWIN hItem;
;;;870                         hItem = WM_GetDialogItem(load_wind, ID_TEXT_121);
;;;871                         TEXT_SetText(hItem,"CC");
;;;872    					 flag_Load_CC = 1;
;;;873                         GPIO_SetBits(GPIOC,GPIO_Pin_10);//CC                   
;;;874                         load_mode =1;
;;;875                         Write_LOAD();
;;;876                         break;
;;;877                    }
;;;878                }   
;;;879            }break;
;;;880    		case set_86:
;;;881            {
;;;882                WM_HWIN hItem;
;;;883    //            WM_InvalidateWindow(load_wind);
;;;884                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000086  f6401939          MOV      r9,#0x939
;;;885                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;886                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;887                       
;;;888                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
00008a  f640162d          MOV      r6,#0x92d
00008e  2955              CMP      r1,#0x55              ;738
000090  d078              BEQ      |L6.388|
000092  2956              CMP      r1,#0x56              ;738
000094  d15d              BNE      |L6.338|
;;;889                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;890                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;891                for(i=0;i<6;i++)
;;;892                {
;;;893                    set_limit[i] = '\0';
;;;894                }
;;;895                set_sw = set_87;
;;;896                break;
;;;897            }
;;;898            case set_87:
;;;899            {
;;;900                WM_HWIN hItem;
;;;901                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000096  4631              MOV      r1,r6
000098  4692              MOV      r10,r2
00009a  f7fffffe          BL       WM_GetDialogItem
00009e  4683              MOV      r11,r0
;;;902                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
0000a0  f06f4170          MVN      r1,#0xf0000000
0000a4  4658              MOV      r0,r11
0000a6  f7fffffe          BL       TEXT_SetBkColor
;;;903                TEXT_SetTextColor(hItem, GUI_WHITE); 
0000aa  f06f417f          MVN      r1,#0xff000000
0000ae  4658              MOV      r0,r11
0000b0  f7fffffe          BL       TEXT_SetTextColor
;;;904    			if(dot_flag == 0){
0000b4  7838              LDRB     r0,[r7,#0]  ; dot_flag
;;;905    				set_load_cutoffv = atoi(set_limit)*1000;					
0000b6  4ed8              LDR      r6,|L6.1048|
0000b8  2800              CMP      r0,#0                 ;904
0000ba  d071              BEQ      |L6.416|
;;;906    			}else if(dot_flag != 0){
0000bc  7838              LDRB     r0,[r7,#0]  ; dot_flag
0000be  b198              CBZ      r0,|L6.232|
;;;907    				memset(buf, '\0', sizeof(buf));
0000c0  9401              STR      r4,[sp,#4]
0000c2  9402              STR      r4,[sp,#8]
;;;908    				strncpy(buf,set_limit,dot_flag + 4);
0000c4  783a              LDRB     r2,[r7,#0]  ; dot_flag
0000c6  49d1              LDR      r1,|L6.1036|
0000c8  1d12              ADDS     r2,r2,#4
0000ca  a801              ADD      r0,sp,#4
0000cc  f7fffffe          BL       strncpy
;;;909    				set_load_cutoffv = atof(buf)*1000;
0000d0  a801              ADD      r0,sp,#4
0000d2  f7fffffe          BL       __hardfp_atof
0000d6  ec532b18          VMOV     r2,r3,d8
0000da  ec510b10          VMOV     r0,r1,d0
0000de  f7fffffe          BL       __aeabi_dmul
0000e2  f7fffffe          BL       __aeabi_d2iz
0000e6  6130              STR      r0,[r6,#0x10]  ; InFlashSave
                  |L6.232|
;;;910    			}
;;;911                load_cutoffv = (float)set_load_cutoffv/1000;
0000e8  ed960a04          VLDR     s0,[r6,#0x10]
0000ec  eef80ac0          VCVT.F32.S32 s1,s0
0000f0  ee800a89          VDIV.F32 s0,s1,s18
0000f4  ed8a0a02          VSTR     s0,[r10,#8]
;;;912                sprintf(buf,"%.3f",load_cutoffv);
0000f8  ee100a10          VMOV     r0,s0
0000fc  f7fffffe          BL       __aeabi_f2d
000100  ec410b10          VMOV     d0,r0,r1
000104  a1c5              ADR      r1,|L6.1052|
000106  ec532b10          VMOV     r2,r3,d0
00010a  a801              ADD      r0,sp,#4
00010c  f7fffffe          BL       __2sprintf
;;;913                TEXT_SetText(hItem,buf);
000110  a901              ADD      r1,sp,#4
000112  4658              MOV      r0,r11
000114  f7fffffe          BL       TEXT_SetText
;;;914                
;;;915                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000118  4649              MOV      r1,r9
00011a  f8da0004          LDR      r0,[r10,#4]  ; load_wind
00011e  f7fffffe          BL       WM_GetDialogItem
000122  4606              MOV      r6,r0
;;;916                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000124  49bb              LDR      r1,|L6.1044|
000126  4630              MOV      r0,r6
000128  e003              B        |L6.306|
                  |L6.298|
00012a  e183              B        |L6.1076|
                  |L6.300|
00012c  e016              B        |L6.348|
                  |L6.302|
00012e  e047              B        |L6.448|
                  |L6.304|
000130  e00f              B        |L6.338|
                  |L6.306|
000132  f7fffffe          BL       TEXT_SetBkColor
;;;917                TEXT_SetTextColor(hItem, GUI_BLACK);
000136  2100              MOVS     r1,#0
000138  4630              MOV      r0,r6
00013a  f7fffffe          BL       TEXT_SetTextColor
;;;918                Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
00013e  4ab6              LDR      r2,|L6.1048|
000140  2128              MOVS     r1,#0x28
000142  48b8              LDR      r0,|L6.1060|
000144  f7fffffe          BL       Flash_Write32BitDatas
;;;919                
;;;920                set_sw = set_86;
000148  2055              MOVS     r0,#0x55
00014a  7028              STRB     r0,[r5,#0]
;;;921                bit = 0;
00014c  f8884000          STRB     r4,[r8,#0]
;;;922                dot_flag = 0;
000150  703c              STRB     r4,[r7,#0]
                  |L6.338|
;;;923                break;
;;;924            }
;;;925        }
;;;926    }
000152  b003              ADD      sp,sp,#0xc
000154  ecbd8b04          VPOP     {d8-d9}
000158  e8bd8ff0          POP      {r4-r11,pc}
                  |L6.348|
00015c  f640016d          MOV      r1,#0x86d             ;744
000160  4616              MOV      r6,r2                 ;744
000162  f7fffffe          BL       WM_GetDialogItem
000166  4607              MOV      r7,r0                 ;744
000168  f06f4170          MVN      r1,#0xf0000000        ;745
00016c  4638              MOV      r0,r7                 ;745
00016e  f7fffffe          BL       TEXT_SetBkColor
000172  f06f417f          MVN      r1,#0xff000000        ;746
000176  4638              MOV      r0,r7                 ;746
000178  f7fffffe          BL       TEXT_SetTextColor
00017c  4651              MOV      r1,r10                ;748
00017e  6870              LDR      r0,[r6,#4]            ;748  ; load_wind
000180  e001              B        |L6.390|
                  |L6.386|
000182  e0b5              B        |L6.752|
                  |L6.388|
000184  e188              B        |L6.1176|
                  |L6.390|
000186  f7fffffe          BL       WM_GetDialogItem
00018a  4606              MOV      r6,r0                 ;748
00018c  49a1              LDR      r1,|L6.1044|
00018e  4630              MOV      r0,r6                 ;749
000190  f7fffffe          BL       TEXT_SetBkColor
000194  2100              MOVS     r1,#0                 ;750
000196  4630              MOV      r0,r6                 ;750
000198  f7fffffe          BL       TEXT_SetTextColor
00019c  9400              STR      r4,[sp,#0]            ;751
00019e  e008              B        |L6.434|
                  |L6.416|
0001a0  e1a7              B        |L6.1266|
                  |L6.418|
0001a2  f89d0000          LDRB     r0,[sp,#0]            ;753
0001a6  f80b4000          STRB     r4,[r11,r0]           ;753
0001aa  f89d0000          LDRB     r0,[sp,#0]            ;751
0001ae  1c40              ADDS     r0,r0,#1              ;751
0001b0  9000              STR      r0,[sp,#0]            ;751
                  |L6.434|
0001b2  f89d0000          LDRB     r0,[sp,#0]            ;751
0001b6  2806              CMP      r0,#6                 ;751
0001b8  d3f3              BCC      |L6.418|
0001ba  2018              MOVS     r0,#0x18              ;755
0001bc  7028              STRB     r0,[r5,#0]            ;755
0001be  e7c8              B        |L6.338|
                  |L6.448|
0001c0  4651              MOV      r1,r10                ;762
0001c2  4692              MOV      r10,r2                ;762
0001c4  f7fffffe          BL       WM_GetDialogItem
0001c8  4683              MOV      r11,r0                ;762
0001ca  f06f4170          MVN      r1,#0xf0000000        ;763
0001ce  4658              MOV      r0,r11                ;763
0001d0  f7fffffe          BL       TEXT_SetBkColor
0001d4  f06f417f          MVN      r1,#0xff000000        ;764
0001d8  4658              MOV      r0,r11                ;764
0001da  f7fffffe          BL       TEXT_SetTextColor
0001de  7838              LDRB     r0,[r7,#0]            ;765  ; dot_flag
0001e0  b3c8              CBZ      r0,|L6.598|
0001e2  7838              LDRB     r0,[r7,#0]            ;767  ; dot_flag
0001e4  b1a0              CBZ      r0,|L6.528|
0001e6  9401              STR      r4,[sp,#4]            ;768
0001e8  9402              STR      r4,[sp,#8]            ;768
0001ea  783a              LDRB     r2,[r7,#0]            ;769  ; dot_flag
0001ec  4987              LDR      r1,|L6.1036|
0001ee  1d12              ADDS     r2,r2,#4              ;769
0001f0  a801              ADD      r0,sp,#4              ;769
0001f2  f7fffffe          BL       strncpy
0001f6  a801              ADD      r0,sp,#4              ;770
0001f8  f7fffffe          BL       __hardfp_atof
0001fc  ec532b18          VMOV     r2,r3,d8              ;770
000200  ec510b10          VMOV     r0,r1,d0              ;770
000204  f7fffffe          BL       __aeabi_dmul
000208  f7fffffe          BL       __aeabi_d2uiz
00020c  f8c60094          STR      r0,[r6,#0x94]         ;770  ; Run_Control
                  |L6.528|
000210  f8d60094          LDR      r0,[r6,#0x94]         ;772  ; Run_Control
000214  f2475130          MOV      r1,#0x7530            ;772
000218  4288              CMP      r0,r1                 ;772
00021a  d810              BHI      |L6.574|
00021c  f8d60094          LDR      r0,[r6,#0x94]         ;772  ; Run_Control
000220  ee000a10          VMOV     s0,r0                 ;772
000224  4880              LDR      r0,|L6.1064|
000226  eef80a40          VCVT.F32.U32 s1,s0                 ;772
00022a  ee800a89          VDIV.F32 s0,s1,s18             ;772
00022e  edd00a00          VLDR     s1,[r0,#0]            ;772
000232  ee200a20          VMUL.F32 s0,s0,s1              ;772
000236  ee100a10          VMOV     r0,s0                 ;772
00023a  4548              CMP      r0,r9                 ;772
00023c  dd01              BLE      |L6.578|
                  |L6.574|
00023e  f8c64094          STR      r4,[r6,#0x94]         ;773  ; Run_Control
                  |L6.578|
000242  f8d60094          LDR      r0,[r6,#0x94]         ;775  ; Run_Control
000246  f64011c4          MOV      r1,#0x9c4             ;775
00024a  4288              CMP      r0,r1                 ;775
00024c  d90d              BLS      |L6.618|
00024e  2001              MOVS     r0,#1                 ;777
000250  f7fffffe          BL       C_SW
000254  e00c              B        |L6.624|
                  |L6.598|
000256  e7ff              B        |L6.600|
                  |L6.600|
000258  486c              LDR      r0,|L6.1036|
00025a  f7fffffe          BL       atoi
00025e  f44f717a          MOV      r1,#0x3e8             ;766
000262  4348              MULS     r0,r1,r0              ;766
000264  f8c60094          STR      r0,[r6,#0x94]         ;766  ; Run_Control
000268  e7d2              B        |L6.528|
                  |L6.618|
00026a  2000              MOVS     r0,#0                 ;779
00026c  f7fffffe          BL       C_SW
                  |L6.624|
000270  f8d60094          LDR      r0,[r6,#0x94]         ;781  ; Run_Control
000274  6130              STR      r0,[r6,#0x10]         ;781  ; Run_Control
000276  6930              LDR      r0,[r6,#0x10]         ;788  ; Run_Control
000278  ee000a10          VMOV     s0,r0                 ;788
00027c  eef80a40          VCVT.F32.U32 s1,s0                 ;788
000280  ee800a89          VDIV.F32 s0,s1,s18             ;788
000284  ee100a10          VMOV     r0,s0                 ;789
000288  f7fffffe          BL       __aeabi_f2d
00028c  ec410b10          VMOV     d0,r0,r1              ;789
000290  a162              ADR      r1,|L6.1052|
000292  ec532b10          VMOV     r2,r3,d0              ;789
000296  a801              ADD      r0,sp,#4              ;789
000298  f7fffffe          BL       __2sprintf
00029c  a901              ADD      r1,sp,#4              ;790
00029e  4658              MOV      r0,r11                ;790
0002a0  f7fffffe          BL       TEXT_SetText
0002a4  f640016d          MOV      r1,#0x86d             ;792
0002a8  f8da0004          LDR      r0,[r10,#4]           ;792  ; load_wind
0002ac  f7fffffe          BL       WM_GetDialogItem
0002b0  4606              MOV      r6,r0                 ;792
0002b2  4958              LDR      r1,|L6.1044|
0002b4  4630              MOV      r0,r6                 ;793
0002b6  f7fffffe          BL       TEXT_SetBkColor
0002ba  2100              MOVS     r1,#0                 ;794
0002bc  4630              MOV      r0,r6                 ;794
0002be  f7fffffe          BL       TEXT_SetTextColor
0002c2  f7fffffe          BL       Write_Limits
0002c6  2017              MOVS     r0,#0x17              ;797
0002c8  7028              STRB     r0,[r5,#0]            ;797
0002ca  f8884000          STRB     r4,[r8,#0]            ;798
0002ce  703c              STRB     r4,[r7,#0]            ;799
0002d0  e73f              B        |L6.338|
                  |L6.722|
0002d2  f89d0000          LDRB     r0,[sp,#0]            ;815
0002d6  f80b4000          STRB     r4,[r11,r0]           ;815
0002da  f89d0000          LDRB     r0,[sp,#0]            ;813
0002de  1c40              ADDS     r0,r0,#1              ;813
0002e0  9000              STR      r0,[sp,#0]            ;813
                  |L6.738|
0002e2  f89d0000          LDRB     r0,[sp,#0]            ;813
0002e6  2806              CMP      r0,#6                 ;813
0002e8  d3f3              BCC      |L6.722|
0002ea  2043              MOVS     r0,#0x43              ;817
0002ec  7028              STRB     r0,[r5,#0]            ;817
0002ee  e730              B        |L6.338|
                  |L6.752|
0002f0  f6401111          MOV      r1,#0x911             ;823
0002f4  4692              MOV      r10,r2                ;823
0002f6  f7fffffe          BL       WM_GetDialogItem
0002fa  4683              MOV      r11,r0                ;823
0002fc  f06f4170          MVN      r1,#0xf0000000        ;824
000300  4658              MOV      r0,r11                ;824
000302  f7fffffe          BL       TEXT_SetBkColor
000306  f06f417f          MVN      r1,#0xff000000        ;825
00030a  4658              MOV      r0,r11                ;825
00030c  f7fffffe          BL       TEXT_SetTextColor
000310  7838              LDRB     r0,[r7,#0]            ;826  ; dot_flag
000312  b3e8              CBZ      r0,|L6.912|
000314  7838              LDRB     r0,[r7,#0]            ;828  ; dot_flag
000316  b1a0              CBZ      r0,|L6.834|
000318  9401              STR      r4,[sp,#4]            ;829
00031a  9402              STR      r4,[sp,#8]            ;829
00031c  783a              LDRB     r2,[r7,#0]            ;830  ; dot_flag
00031e  493b              LDR      r1,|L6.1036|
000320  1d12              ADDS     r2,r2,#4              ;830
000322  a801              ADD      r0,sp,#4              ;830
000324  f7fffffe          BL       strncpy
000328  a801              ADD      r0,sp,#4              ;831
00032a  f7fffffe          BL       __hardfp_atof
00032e  ec532b18          VMOV     r2,r3,d8              ;831
000332  ec510b10          VMOV     r0,r1,d0              ;831
000336  f7fffffe          BL       __aeabi_dmul
00033a  f7fffffe          BL       __aeabi_d2uiz
00033e  f8c600a4          STR      r0,[r6,#0xa4]         ;831  ; Run_Control
                  |L6.834|
000342  f8d600a4          LDR      r0,[r6,#0xa4]         ;833  ; Run_Control
000346  4939              LDR      r1,|L6.1068|
000348  4288              CMP      r0,r1                 ;833
00034a  d810              BHI      |L6.878|
00034c  f8d600a4          LDR      r0,[r6,#0xa4]         ;833  ; Run_Control
000350  ee000a10          VMOV     s0,r0                 ;833
000354  4836              LDR      r0,|L6.1072|
000356  eeb80a40          VCVT.F32.U32 s0,s0                 ;833
00035a  eec00a09          VDIV.F32 s1,s0,s18             ;833
00035e  ed900a00          VLDR     s0,[r0,#0]            ;833
000362  ee200a80          VMUL.F32 s0,s1,s0              ;833
000366  ee100a10          VMOV     r0,s0                 ;833
00036a  4548              CMP      r0,r9                 ;833
00036c  dd01              BLE      |L6.882|
                  |L6.878|
00036e  f8c640a4          STR      r4,[r6,#0xa4]         ;834  ; Run_Control
                  |L6.882|
000372  f8d600a4          LDR      r0,[r6,#0xa4]         ;836  ; Run_Control
000376  60f0              STR      r0,[r6,#0xc]          ;836  ; Run_Control
000378  68f0              LDR      r0,[r6,#0xc]          ;838  ; Run_Control
00037a  ee000a10          VMOV     s0,r0                 ;838
00037e  eef80a40          VCVT.F32.U32 s1,s0                 ;838
000382  ee800a89          VDIV.F32 s0,s1,s18             ;838
000386  ee100a10          VMOV     r0,s0                 ;839
00038a  f7fffffe          BL       __aeabi_f2d
00038e  e000              B        |L6.914|
                  |L6.912|
000390  e022              B        |L6.984|
                  |L6.914|
000392  ec410b10          VMOV     d0,r0,r1              ;839
000396  a121              ADR      r1,|L6.1052|
000398  ec532b10          VMOV     r2,r3,d0              ;839
00039c  a801              ADD      r0,sp,#4              ;839
00039e  f7fffffe          BL       __2sprintf
0003a2  a901              ADD      r1,sp,#4              ;840
0003a4  4658              MOV      r0,r11                ;840
0003a6  f7fffffe          BL       TEXT_SetText
0003aa  f44f6111          MOV      r1,#0x910             ;842
0003ae  f8da0004          LDR      r0,[r10,#4]           ;842  ; load_wind
0003b2  f7fffffe          BL       WM_GetDialogItem
0003b6  4606              MOV      r6,r0                 ;842
0003b8  4916              LDR      r1,|L6.1044|
0003ba  4630              MOV      r0,r6                 ;843
0003bc  f7fffffe          BL       TEXT_SetBkColor
0003c0  2100              MOVS     r1,#0                 ;844
0003c2  4630              MOV      r0,r6                 ;844
0003c4  f7fffffe          BL       TEXT_SetTextColor
0003c8  f7fffffe          BL       Write_Limits
0003cc  2041              MOVS     r0,#0x41              ;847
0003ce  7028              STRB     r0,[r5,#0]            ;847
0003d0  f8884000          STRB     r4,[r8,#0]            ;848
0003d4  703c              STRB     r4,[r7,#0]            ;849
                  |L6.982|
0003d6  e6bc              B        |L6.338|
                  |L6.984|
0003d8  480c              LDR      r0,|L6.1036|
0003da  f7fffffe          BL       atoi
0003de  f44f717a          MOV      r1,#0x3e8             ;827
0003e2  4348              MULS     r0,r1,r0              ;827
0003e4  f8c600a4          STR      r0,[r6,#0xa4]         ;827  ; Run_Control
0003e8  e7ab              B        |L6.834|
0003ea  0000              DCW      0x0000
                  |L6.1004|
                          DCD      set_sw
                  |L6.1008|
0003f0  00000000          DCFD     0x408f400000000000 ; 1000
0003f4  408f4000
                  |L6.1016|
                          DCD      0x43480000
                  |L6.1020|
                          DCD      bit
                  |L6.1024|
                          DCD      ||.data||
                  |L6.1028|
000404  447a0000          DCFS     0x447a0000 ; 1000
                  |L6.1032|
                          DCD      Run_Control
                  |L6.1036|
                          DCD      set_limit
                  |L6.1040|
                          DCD      dot_flag
                  |L6.1044|
                          DCD      0x00bfffff
                  |L6.1048|
                          DCD      InFlashSave
                  |L6.1052|
00041c  252e3366          DCB      "%.3f",0
000420  00      
000421  00                DCB      0
000422  00                DCB      0
000423  00                DCB      0
                  |L6.1060|
                          DCD      0x080e0000
                  |L6.1064|
                          DCD      DISS_Voltage
                  |L6.1068|
                          DCD      0x00013880
                  |L6.1072|
                          DCD      DISS_Current
                  |L6.1076|
000434  4d33              LDR      r5,|L6.1284|
000436  4f34              LDR      r7,|L6.1288|
000438  f44f6680          MOV      r6,#0x400             ;862
00043c  7829              LDRB     r1,[r5,#0]            ;854  ; flagD
00043e  f3c113c0          UBFX     r3,r1,#7,#1           ;854
000442  f640110f          MOV      r1,#0x90f             ;859
000446  b1a3              CBZ      r3,|L6.1138|
000448  2b01              CMP      r3,#1                 ;854
00044a  d1c4              BNE      |L6.982|
00044c  4690              MOV      r8,r2                 ;859
00044e  f7fffffe          BL       WM_GetDialogItem
000452  a12e              ADR      r1,|L6.1292|
000454  f7fffffe          BL       TEXT_SetText
000458  6828              LDR      r0,[r5,#0]            ;861  ; flagD
00045a  f0200080          BIC      r0,r0,#0x80           ;861
00045e  6028              STR      r0,[r5,#0]            ;861  ; flagD
000460  4631              MOV      r1,r6                 ;862
000462  4638              MOV      r0,r7                 ;862
000464  f7fffffe          BL       GPIO_ResetBits
000468  f8884002          STRB     r4,[r8,#2]            ;863
00046c  f7fffffe          BL       Write_LOAD
000470  e66f              B        |L6.338|
                  |L6.1138|
000472  4614              MOV      r4,r2                 ;870
000474  f7fffffe          BL       WM_GetDialogItem
000478  a125              ADR      r1,|L6.1296|
00047a  f7fffffe          BL       TEXT_SetText
00047e  6828              LDR      r0,[r5,#0]            ;872  ; flagD
000480  f0400080          ORR      r0,r0,#0x80           ;872
000484  6028              STR      r0,[r5,#0]            ;872  ; flagD
000486  4631              MOV      r1,r6                 ;873
000488  4638              MOV      r0,r7                 ;873
00048a  f7fffffe          BL       GPIO_SetBits
00048e  2001              MOVS     r0,#1                 ;874
000490  70a0              STRB     r0,[r4,#2]            ;874
000492  f7fffffe          BL       Write_LOAD
000496  e65c              B        |L6.338|
                  |L6.1176|
000498  4649              MOV      r1,r9                 ;884
00049a  4617              MOV      r7,r2                 ;884
00049c  f7fffffe          BL       WM_GetDialogItem
0004a0  4680              MOV      r8,r0                 ;884
0004a2  f06f4170          MVN      r1,#0xf0000000        ;885
0004a6  4640              MOV      r0,r8                 ;885
0004a8  f7fffffe          BL       TEXT_SetBkColor
0004ac  f06f417f          MVN      r1,#0xff000000        ;886
0004b0  4640              MOV      r0,r8                 ;886
0004b2  f7fffffe          BL       TEXT_SetTextColor
0004b6  4631              MOV      r1,r6                 ;888
0004b8  6878              LDR      r0,[r7,#4]            ;888  ; load_wind
0004ba  f7fffffe          BL       WM_GetDialogItem
0004be  4606              MOV      r6,r0                 ;888
0004c0  4914              LDR      r1,|L6.1300|
0004c2  4630              MOV      r0,r6                 ;889
0004c4  f7fffffe          BL       TEXT_SetBkColor
0004c8  2100              MOVS     r1,#0                 ;890
0004ca  4630              MOV      r0,r6                 ;890
0004cc  f7fffffe          BL       TEXT_SetTextColor
0004d0  9400              STR      r4,[sp,#0]            ;891
0004d2  e007              B        |L6.1252|
                  |L6.1236|
0004d4  f89d0000          LDRB     r0,[sp,#0]            ;893
0004d8  f80b4000          STRB     r4,[r11,r0]           ;893
0004dc  f89d0000          LDRB     r0,[sp,#0]            ;891
0004e0  1c40              ADDS     r0,r0,#1              ;891
0004e2  9000              STR      r0,[sp,#0]            ;891
                  |L6.1252|
0004e4  f89d0000          LDRB     r0,[sp,#0]            ;891
0004e8  2806              CMP      r0,#6                 ;891
0004ea  d3f3              BCC      |L6.1236|
0004ec  2056              MOVS     r0,#0x56              ;895
0004ee  7028              STRB     r0,[r5,#0]            ;895
0004f0  e62f              B        |L6.338|
                  |L6.1266|
0004f2  4809              LDR      r0,|L6.1304|
0004f4  f7fffffe          BL       atoi
0004f8  f44f717a          MOV      r1,#0x3e8             ;905
0004fc  4348              MULS     r0,r1,r0              ;905
0004fe  6130              STR      r0,[r6,#0x10]         ;905  ; InFlashSave
000500  e5f2              B        |L6.232|
;;;927    void DEL_LOAD(void)
                          ENDP

000502  0000              DCW      0x0000
                  |L6.1284|
                          DCD      flagD
                  |L6.1288|
                          DCD      0x40020800
                  |L6.1292|
00050c  435600            DCB      "CV",0
00050f  00                DCB      0
                  |L6.1296|
000510  434300            DCB      "CC",0
000513  00                DCB      0
                  |L6.1300|
                          DCD      0x00bfffff
                  |L6.1304|
                          DCD      set_limit

                          AREA ||i.ResetLoad||, CODE, READONLY, ALIGN=2

                  ResetLoad PROC
;;;625    
;;;626    WM_HWIN ResetLoad(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;627      load_wind = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_HBKWIN, 0, 0);
000002  f7fffffe          BL       WM_GetDesktopWindow
000006  4603              MOV      r3,r0
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
00000c  9001              STR      r0,[sp,#4]
00000e  4a04              LDR      r2,|L7.32|
000010  2118              MOVS     r1,#0x18
000012  4804              LDR      r0,|L7.36|
000014  f7fffffe          BL       GUI_CreateDialogBox
000018  4903              LDR      r1,|L7.40|
00001a  6048              STR      r0,[r1,#4]  ; load_wind
;;;628      return load_wind;
;;;629    }
00001c  bd1c              POP      {r2-r4,pc}
;;;630    
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      _cbDialog2
                  |L7.36|
                          DCD      ||.constdata||
                  |L7.40|
                          DCD      ||.data||

                          AREA ||i._cbDialog2||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  _cbDialog2 PROC
;;;100    
;;;101    static void _cbDialog2(WM_MESSAGE * pMsg) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b06          VPUSH    {d8-d10}
000008  b083              SUB      sp,sp,#0xc
00000a  4604              MOV      r4,r0
;;;102      WM_HWIN hItem;
;;;103      int     NCode;
;;;104      int     Id;
;;;105      char    buf[6];
;;;106      static vu8 status_flash;
;;;107      float   dis_load_c = (float)SET_Current_Laod/1000;
00000c  4dfe              LDR      r5,|L8.1032|
00000e  6928              LDR      r0,[r5,#0x10]  ; Run_Control
000010  ee000a10          VMOV     s0,r0
000014  eeb80a40          VCVT.F32.U32 s0,s0
000018  eddf9afc          VLDR     s19,|L8.1036|
00001c  ee80aa29          VDIV.F32 s20,s0,s19
;;;108      float   dis_load_v = (float)SET_Voltage_Laod/1000;
000020  68e8              LDR      r0,[r5,#0xc]  ; Run_Control
000022  ee000a10          VMOV     s0,r0
000026  eeb80a40          VCVT.F32.U32 s0,s0
00002a  ee809a29          VDIV.F32 s18,s0,s19
;;;109      static float olvbuff,oldv;
;;;110      static float testc1,testc2,testres;
;;;111      static vu8 testflag;
;;;112      // USER START (Optionally insert additional variables)
;;;113      // USER END
;;;114    
;;;115      switch (pMsg->MsgId) {
;;;116    
;;;117    	case WM_PAINT://无效化重绘
;;;118    		GUI_SetColor(GUI_WHITE);//设置画笔颜色
;;;119            GUI_FillRect(0,25,480,26);//画一条实线
;;;120            GUI_SetColor(GUI_ORANGE);
;;;121            GUI_SetFont(&GUI_Fontsymbol);
;;;122            GUI_UC_SetEncodeUTF8();
;;;123            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;124            GUI_DispStringAt("Jinko", 5, 1);//SET
;;;125            GUI_SetColor(GUI_WHITE);
;;;126            GUI_SetFont(&GUI_FontHZ20S);
;;;127            GUI_UC_SetEncodeUTF8();
;;;128            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;129            GUI_DispStringAt("测量显示", 130, 3);//SET
;;;130            GUI_SetColor(GUI_WHITE);//设置前景色为白色
;;;131    //         GUI_SetFont(&GUI_FontD24x32);//
;;;132    // 		GUI_GotoXY(95,72);//设置显示坐标
;;;133    // 		GUI_DispFloatFix(DISS_Voltage,5,2);//显示电压值
;;;134    // 		GUI_GotoXY(95,140);//设置显示坐标
;;;135    // 		GUI_DispFloatFix(DISS_Current,5,2);//显示电流值
;;;136            GUI_SetFont(&GUI_Font24_1);
;;;137            GUI_DispStringAt("A",450,75);
;;;138            GUI_DispStringAt("V",450,100.);
;;;139            GUI_DispStringAt("V",450,150);
;;;140        
;;;141            GUI_SetFont(&GUI_FontEN40);
;;;142            GUI_SetColor(GUI_LIGHTGRAY);
00002e  f8df83e0          LDR      r8,|L8.1040|
;;;143            GUI_DispStringAt("C:", 28, 190);
;;;144            GUI_SetColor(GUI_LIGHTGRAY);
;;;145            GUI_DispStringAt("m", 217, 196);
;;;146            GUI_DispStringAt("AH", 238, 187);
;;;147            
;;;148            GUI_SetColor(GUI_GREEN);
;;;149            GUI_SetFont(&GUI_Fontunit);
;;;150            GUI_DispStringAt("°",342, 2);
;;;151            GUI_SetFont(&GUI_Font24_1);
;;;152            GUI_DispStringAt("C",350, 2);
;;;153    //        DrawLock();
;;;154    //        GUI_SetColor(GUI_WHITE);
;;;155    //        GUI_SetFont(&GUI_Fontset_font);
;;;156    //        GUI_DispStringAt("过放电压",290, 150);
;;;157    		break;
;;;158    	case WM_KEY://接受按键消息来处理按键功能
;;;159    		switch (((WM_KEY_INFO*)(pMsg->Data.p))->Key) 
;;;160    		{ 
;;;161    			case GUI_KEY_TAB:
;;;162    
;;;163    			break;
;;;164    			
;;;165    			case GUI_KEY_ENTER:
;;;166    			break;
;;;167    		}
;;;168    	break;
;;;169    		
;;;170    	case WM_TIMER://定时模块消息
;;;171    	if(WM_GetTimerId(pMsg->Data.v) == ID_TimerTime1)
;;;172    	{
;;;173    //        lockstat2 = lockstat1;
;;;174    //        lockstat1 = lock;
;;;175    //        
;;;176    ////        if((vu32)(DISS_Current*1000) > SET_Current_Laod)
;;;177    ////        {
;;;178    ////            testflag = 1;
;;;179    ////        }else{
;;;180    ////            testflag = 0;
;;;181    ////            testc1 = testc2 = 0;
;;;182    ////        }
;;;183    ////        if(testflag == 1)
;;;184    ////        {
;;;185    ////            testc2 = testc1;
;;;186    ////            testc1 = DISS_Current;
;;;187    ////            if(testc1 < testc2)
;;;188    ////            {
;;;189    ////                testres = testc2;
;;;190    ////                testflag = 0;
;;;191    ////                testc1 = testc2 = 0;
;;;192    ////            }
;;;193    ////        }
;;;194    //        
;;;195    //        
;;;196    //        if(lockstat1 != lockstat2)
;;;197    //        {
;;;198    //            WM_InvalidateWindow(load_wind);
;;;199    //        }
;;;200    //         if(clear_flag3 == 1)
;;;201    //         {
;;;202    		if(lock == 1)
;;;203    		{
;;;204    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
;;;205    			TEXT_SetText(hItem,"锁");
;;;206    		}else{
;;;207    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
;;;208    			TEXT_SetText(hItem,"");
;;;209    		}
;;;210    		
;;;211                if(DISS_Voltage < 0.3)
;;;212                {
;;;213                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;214                    sprintf(buf,"%.3f",0.000);       
;;;215                    TEXT_SetText(hItem,buf);
;;;216                }else{hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;218                    sprintf(buf,"%.3f",disloadv);       
;;;219                    TEXT_SetText(hItem,buf);
;;;220                }
;;;221    //         }else{
;;;222    //             hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;223    //             sprintf(buf,"%.3f",DISS_Voltage);       
;;;224    //             TEXT_SetText(hItem,buf);
;;;225    //         }
;;;226            if((float)SET_Current_Laod/1000 * DISS_Voltage > 200){
;;;227                SET_Current_Laod = 0;
;;;228                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;229                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;230                TEXT_SetTextColor(hItem, GUI_WHITE);            
;;;231                if(SET_Current_Laod > 55000 || (float)SET_Current_Laod/1000 * DISS_Voltage > 200){
;;;232                    SET_Current_Laod = 0;
;;;233                }
;;;234                dis_load_c = (float)SET_Current_Laod/1000;
;;;235                sprintf(buf,"%.3f",dis_load_c);
;;;236                TEXT_SetText(hItem,buf);
;;;237            }
;;;238            
;;;239                
;;;240            
;;;241    //        test_load();
;;;242            
;;;243            if(load_sw == load_on)
;;;244            {
;;;245                if(/*DISS_Current >= 30*/SET_Current_Laod >= 30000)
;;;246                {
;;;247                    alert_flag = 1;
;;;248                }else{
;;;249                    alert_flag = 0;
;;;250                }
;;;251                battery_c = (int)bc_raw;
;;;252                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_116);
;;;253                sprintf(buf,"%05d",battery_c);    
;;;254                TEXT_SetText(hItem,buf);
;;;255                
;;;256                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;257                sprintf(buf,"%.3f",DISS_Current);        
;;;258                TEXT_SetText(hItem,buf);
;;;259                if(status_flash == 0){
;;;260                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;261                    TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;262                    TEXT_SetFont(hItem,&GUI_FontHZ16);//设定文本字体
;;;263                    GUI_UC_SetEncodeUTF8();        
;;;264                    TEXT_SetText(hItem,"放电中");
;;;265                    status_flash = 1;
;;;266                }else{
;;;267                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;268                    TEXT_SetText(hItem,"");
;;;269                    status_flash = 0;
;;;270                }
;;;271                if(load_cutoffv != 0 && DISS_Voltage < load_cutoffv)
;;;272    			{
;;;273    				Flag_Swtich_ON=0;
;;;274                    GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;275                    mode_sw = 0;
;;;276                    load_sw = load_off;
;;;277    			}
;;;278                
;;;279    //            if(olvbuff != 0 && olvbuff - DISS_Voltage > 0.3)
;;;280    //            {
;;;281    //                Flag_Swtich_ON=0;
;;;282    //                GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;283    //                mode_sw = 0;
;;;284    //                load_sw = load_off;
;;;285    //                overloadv = olvbuff;
;;;286    //                olvbuff= 0;
;;;287    //            }else{
;;;288    //                olvbuff = DISS_Voltage;
;;;289    //                overloadv = 0;
;;;290    //            }
;;;291                
;;;292            }else{
;;;293                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;294                TEXT_SetText(hItem,"");
;;;295                
;;;296                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;297                sprintf(buf,"%.3f",0.000);        
;;;298                TEXT_SetText(hItem,buf);
;;;299            }
;;;300    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_143);       
;;;301    //        sprintf(buf,"%.3f",overloadv);
;;;302    //        TEXT_SetText(hItem,buf);
;;;303            
;;;304            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_126);       
;;;305            sprintf(buf,"%.1f",temp);
000032  f8dfb3e0          LDR      r11,|L8.1044|
000036  f6401a3d          MOV      r10,#0x93d            ;204
00003a  ed9f8bf7          VLDR     d8,|L8.1048|
00003e  6820              LDR      r0,[r4,#0]            ;115
000040  4ff7              LDR      r7,|L8.1056|
000042  f44f467f          MOV      r6,#0xff00            ;148
000046  f06f497f          MVN      r9,#0xff000000        ;118
00004a  281d              CMP      r0,#0x1d              ;115
00004c  d07e              BEQ      |L8.332|
00004e  dc04              BGT      |L8.90|
000050  280e              CMP      r0,#0xe               ;115
000052  d00b              BEQ      |L8.108|
000054  280f              CMP      r0,#0xf               ;115
000056  d106              BNE      |L8.102|
000058  e00d              B        |L8.118|
                  |L8.90|
00005a  2826              CMP      r0,#0x26              ;115
00005c  d077              BEQ      |L8.334|
00005e  f5a07080          SUB      r0,r0,#0x100          ;115
000062  3813              SUBS     r0,r0,#0x13           ;115
000064  d07b              BEQ      |L8.350|
                  |L8.102|
;;;306            TEXT_SetText(hItem,buf);
;;;307            
;;;308    		WM_RestartTimer(pMsg->Data.v, 50);
;;;309    	}
;;;310    	break;
;;;311    	
;;;312        case WM_INIT_DIALOG://重绘外观
;;;313        //
;;;314        // Initialization of 'Window'
;;;315        //
;;;316            hItem = pMsg->hWin;
;;;317            WINDOW_SetBkColor(hItem, GUI_BLACK);
;;;318    		WM_CreateTimer(hItem,ID_TimerTime1,500,0);//创建本窗口定时器
;;;319        //
;;;320        // Initialization of 'Button'
;;;321        //
;;;322    //         hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_6);
;;;323    // 		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;324    // 		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;325    // 		GUI_UC_SetEncodeUTF8();
;;;326    // 		BUTTON_SetText(hItem,"充放电");
;;;327        //
;;;328        // Initialization of 'Button'
;;;329        //
;;;330    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
;;;331    		TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;332    		TEXT_SetFont(hItem,&GUI_FontHZ14);
;;;333    		TEXT_SetText(hItem,"");
;;;334    		
;;;335    		
;;;336            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_7);
;;;337    //		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;338    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;339    		GUI_UC_SetEncodeUTF8();
;;;340            BUTTON_SetText(hItem, "内阻测试");
;;;341        //
;;;342        // Initialization of 'Button'
;;;343        //
;;;344            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_8);
;;;345            BUTTON_SetPressed(hItem,1);
;;;346    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;347    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;348    		GUI_UC_SetEncodeUTF8();
;;;349            BUTTON_SetText(hItem, "程控负载");
;;;350        //
;;;351        // Initialization of 'Button'
;;;352        //
;;;353            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
;;;354    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;355    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;356    		GUI_UC_SetEncodeUTF8();
;;;357            BUTTON_SetText(hItem, "程控电源");
;;;358        //
;;;359        // Initialization of 'Button'
;;;360        //
;;;361            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_10);
;;;362    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;363    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;364    		GUI_UC_SetEncodeUTF8();
;;;365            BUTTON_SetText(hItem, "充放电");
;;;366        //
;;;367        // Initialization of 'Button'
;;;368        //
;;;369            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_11);
;;;370    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;371    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;372    		GUI_UC_SetEncodeUTF8();
;;;373            BUTTON_SetText(hItem, "曲线");
;;;374    		
;;;375    		
;;;376    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_11);
;;;377    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;378            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;379    		GUI_UC_SetEncodeUTF8();
;;;380    		TEXT_SetText(hItem,"V:");
;;;381    		
;;;382    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_12);
;;;383    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;384            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;385    		GUI_UC_SetEncodeUTF8();
;;;386    		TEXT_SetText(hItem,"I:");
;;;387            
;;;388            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_13);
;;;389    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;390            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;391    		GUI_UC_SetEncodeUTF8();
;;;392    		TEXT_SetText(hItem,"V");
;;;393    		
;;;394    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_14);
;;;395    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;396            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;397    		GUI_UC_SetEncodeUTF8();
;;;398    		TEXT_SetText(hItem,"A");
;;;399            
;;;400            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_48);
;;;401    		TEXT_SetTextColor(hItem, GUI_BLACK);//设置字体颜色
;;;402            TEXT_SetBkColor(hItem,0x00BFFFFF);
;;;403            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;404    		GUI_UC_SetEncodeUTF8();
;;;405    		TEXT_SetText(hItem,"负载电流");
;;;406            
;;;407            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_49);
;;;408            sprintf(buf,"%.3f",dis_load_c);
;;;409    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;410            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;411    		GUI_UC_SetEncodeUTF8();     
;;;412    		TEXT_SetText(hItem,buf);
;;;413            
;;;414            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_143);
;;;415            sprintf(buf,"%.3f",load_cutoffv);
;;;416    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;417            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;418    		GUI_UC_SetEncodeUTF8();     
;;;419    		TEXT_SetText(hItem,buf);
;;;420            
;;;421            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;422            sprintf(buf,"%.3f",0.000);
;;;423    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;424            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;425    		GUI_UC_SetEncodeUTF8();        
;;;426    		TEXT_SetText(hItem,buf);
;;;427            
;;;428            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;429            sprintf(buf,"%.3f",0.000);
;;;430    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;431            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;432    		GUI_UC_SetEncodeUTF8();        
;;;433    		TEXT_SetText(hItem,buf);
;;;434            
;;;435            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_116);
;;;436            sprintf(buf,"%05d",0);
;;;437            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;438            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;439            GUI_UC_SetEncodeUTF8();        
;;;440            TEXT_SetText(hItem,buf);
;;;441            
;;;442            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_120);
;;;443            TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;444            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;445            GUI_UC_SetEncodeUTF8();        
;;;446            TEXT_SetText(hItem,"负载模式");
;;;447    		
;;;448    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_158);
;;;449            TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;450            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;451            GUI_UC_SetEncodeUTF8();        
;;;452            TEXT_SetText(hItem,"截止电压");
;;;453            
;;;454            if(load_mode == 1)
;;;455            {
;;;456                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_121);
;;;457                TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;458                TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;459                GUI_UC_SetEncodeUTF8();
;;;460                GPIO_SetBits(GPIOC,GPIO_Pin_10);//CC
;;;461                TEXT_SetText(hItem,"CC");
;;;462                flag_Load_CC = 1;
;;;463            }else if(load_mode == 0){
;;;464                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_121);
;;;465                TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;466                TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;467                GUI_UC_SetEncodeUTF8();  
;;;468                GPIO_ResetBits(GPIOC,GPIO_Pin_10);//CV            
;;;469                TEXT_SetText(hItem,"CV");
;;;470                flag_Load_CC = 0;
;;;471            }
;;;472            
;;;473            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_122);
;;;474    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;475            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;476    		GUI_UC_SetEncodeUTF8();
;;;477    		TEXT_SetText(hItem,"负载电压");
;;;478            
;;;479            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_123);
;;;480            sprintf(buf,"%.3f",dis_load_v);
;;;481    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;482            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;483    		GUI_UC_SetEncodeUTF8();     
;;;484    		TEXT_SetText(hItem,buf);
;;;485            
;;;486            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_126);
;;;487            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;488            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体       
;;;489            sprintf(buf,"%.1f",temp);
;;;490            TEXT_SetText(hItem,buf);
;;;491            
;;;492    
;;;493        // USER START (Optionally insert additional code for further widget initialization)
;;;494        // USER END
;;;495        break;
;;;496      case WM_NOTIFY_PARENT:
;;;497        Id    = WM_GetId(pMsg->hWinSrc);
;;;498        NCode = pMsg->Data.v;
;;;499        switch(Id) {
;;;500        case ID_BUTTON_6: // Notifications sent by 'Button'
;;;501          switch(NCode) {
;;;502          case WM_NOTIFICATION_CLICKED:
;;;503            // USER START (Optionally insert code for reacting on notification message)
;;;504            // USER END
;;;505            break;
;;;506          case WM_NOTIFICATION_RELEASED:
;;;507            // USER START (Optionally insert code for reacting on notification message)
;;;508            // USER END
;;;509            break;
;;;510          // USER START (Optionally insert additional code for further notification handling)
;;;511          // USER END
;;;512          }
;;;513          break;
;;;514        case ID_BUTTON_7: // Notifications sent by 'Button'
;;;515          switch(NCode) {
;;;516          case WM_NOTIFICATION_CLICKED:
;;;517            // USER START (Optionally insert code for reacting on notification message)
;;;518            // USER END
;;;519            break;
;;;520          case WM_NOTIFICATION_RELEASED:
;;;521    				
;;;522            // USER START (Optionally insert code for reacting on notification message)
;;;523            // USER END
;;;524            break;
;;;525          // USER START (Optionally insert additional code for further notification handling)
;;;526          // USER END
;;;527          }
;;;528          break;
;;;529        case ID_BUTTON_8: // Notifications sent by 'Button'
;;;530          switch(NCode) {
;;;531          case WM_NOTIFICATION_CLICKED:
;;;532            // USER START (Optionally insert code for reacting on notification message)
;;;533            // USER END
;;;534            break;
;;;535          case WM_NOTIFICATION_RELEASED:
;;;536            // USER START (Optionally insert code for reacting on notification message)
;;;537            // USER END
;;;538            break;
;;;539          // USER START (Optionally insert additional code for further notification handling)
;;;540          // USER END
;;;541          }
;;;542          break;
;;;543        case ID_BUTTON_9: // Notifications sent by 'Button'
;;;544          switch(NCode) {
;;;545          case WM_NOTIFICATION_CLICKED:
;;;546            // USER START (Optionally insert code for reacting on notification message)
;;;547            // USER END
;;;548            break;
;;;549          case WM_NOTIFICATION_RELEASED:
;;;550            // USER START (Optionally insert code for reacting on notification message)
;;;551            // USER END
;;;552            break;
;;;553          // USER START (Optionally insert additional code for further notification handling)
;;;554          // USER END
;;;555          }
;;;556          break;
;;;557        case ID_BUTTON_10: // Notifications sent by 'Button'
;;;558          switch(NCode) {
;;;559          case WM_NOTIFICATION_CLICKED:
;;;560            // USER START (Optionally insert code for reacting on notification message)
;;;561            // USER END
;;;562            break;
;;;563          case WM_NOTIFICATION_RELEASED:
;;;564            // USER START (Optionally insert code for reacting on notification message)
;;;565            // USER END
;;;566            break;
;;;567          // USER START (Optionally insert additional code for further notification handling)
;;;568          // USER END
;;;569          }
;;;570          break;
;;;571        case ID_BUTTON_11: // Notifications sent by 'Button'
;;;572          switch(NCode) {
;;;573          case WM_NOTIFICATION_CLICKED:
;;;574            // USER START (Optionally insert code for reacting on notification message)
;;;575            // USER END
;;;576            break;
;;;577          case WM_NOTIFICATION_RELEASED:
;;;578            // USER START (Optionally insert code for reacting on notification message)
;;;579            // USER END
;;;580            break;
;;;581          // USER START (Optionally insert additional code for further notification handling)
;;;582          // USER END
;;;583          }
;;;584          break;
;;;585        // USER START (Optionally insert additional code for further Ids)
;;;586        // USER END
;;;587        }
;;;588        break;
;;;589      // USER START (Optionally insert additional message handling)
;;;590      // USER END
;;;591      default:
;;;592        WM_DefaultProc(pMsg);
000066  4620              MOV      r0,r4
000068  f7fffffe          BL       WM_DefaultProc
                  |L8.108|
;;;593        break;
;;;594      }
;;;595    }
00006c  b003              ADD      sp,sp,#0xc
00006e  ecbd8b06          VPOP     {d8-d10}
000072  e8bd8ff0          POP      {r4-r11,pc}
                  |L8.118|
000076  4648              MOV      r0,r9                 ;118
000078  f7fffffe          BL       GUI_SetColor
00007c  231a              MOVS     r3,#0x1a              ;119
00007e  f44f72f0          MOV      r2,#0x1e0             ;119
000082  2119              MOVS     r1,#0x19              ;119
000084  2000              MOVS     r0,#0                 ;119
000086  f7fffffe          BL       GUI_FillRect
00008a  f24a50ff          MOV      r0,#0xa5ff            ;120
00008e  f7fffffe          BL       GUI_SetColor
000092  48e4              LDR      r0,|L8.1060|
000094  f7fffffe          BL       GUI_SetFont
000098  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00009c  2002              MOVS     r0,#2                 ;123
00009e  f7fffffe          BL       GUI_SetTextMode
0000a2  2201              MOVS     r2,#1                 ;124
0000a4  2105              MOVS     r1,#5                 ;124
0000a6  a0e0              ADR      r0,|L8.1064|
0000a8  f7fffffe          BL       GUI_DispStringAt
0000ac  4648              MOV      r0,r9                 ;125
0000ae  f7fffffe          BL       GUI_SetColor
0000b2  48df              LDR      r0,|L8.1072|
0000b4  f7fffffe          BL       GUI_SetFont
0000b8  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0000bc  2002              MOVS     r0,#2                 ;128
0000be  f7fffffe          BL       GUI_SetTextMode
0000c2  2203              MOVS     r2,#3                 ;129
0000c4  2182              MOVS     r1,#0x82              ;129
0000c6  a0db              ADR      r0,|L8.1076|
0000c8  f7fffffe          BL       GUI_DispStringAt
0000cc  4648              MOV      r0,r9                 ;130
0000ce  f7fffffe          BL       GUI_SetColor
0000d2  48dc              LDR      r0,|L8.1092|
0000d4  f7fffffe          BL       GUI_SetFont
0000d8  f44f74e1          MOV      r4,#0x1c2             ;137
0000dc  224b              MOVS     r2,#0x4b              ;137
0000de  4621              MOV      r1,r4                 ;137
0000e0  a0d9              ADR      r0,|L8.1096|
0000e2  f7fffffe          BL       GUI_DispStringAt
0000e6  2264              MOVS     r2,#0x64              ;138
0000e8  4621              MOV      r1,r4                 ;138
0000ea  a0d8              ADR      r0,|L8.1100|
0000ec  f7fffffe          BL       GUI_DispStringAt
0000f0  2296              MOVS     r2,#0x96              ;139
0000f2  4621              MOV      r1,r4                 ;139
0000f4  a0d5              ADR      r0,|L8.1100|
0000f6  f7fffffe          BL       GUI_DispStringAt
0000fa  48d5              LDR      r0,|L8.1104|
0000fc  f7fffffe          BL       GUI_SetFont
000100  4640              MOV      r0,r8                 ;142
000102  f7fffffe          BL       GUI_SetColor
000106  22be              MOVS     r2,#0xbe              ;143
000108  211c              MOVS     r1,#0x1c              ;143
00010a  a0d2              ADR      r0,|L8.1108|
00010c  f7fffffe          BL       GUI_DispStringAt
000110  4640              MOV      r0,r8                 ;144
000112  f7fffffe          BL       GUI_SetColor
000116  22c4              MOVS     r2,#0xc4              ;145
000118  21d9              MOVS     r1,#0xd9              ;145
00011a  a0cf              ADR      r0,|L8.1112|
00011c  f7fffffe          BL       GUI_DispStringAt
000120  22bb              MOVS     r2,#0xbb              ;146
000122  21ee              MOVS     r1,#0xee              ;146
000124  a0cd              ADR      r0,|L8.1116|
000126  f7fffffe          BL       GUI_DispStringAt
00012a  4630              MOV      r0,r6                 ;148
00012c  f7fffffe          BL       GUI_SetColor
000130  48cb              LDR      r0,|L8.1120|
000132  f7fffffe          BL       GUI_SetFont
000136  2202              MOVS     r2,#2                 ;150
000138  f44f71ab          MOV      r1,#0x156             ;150
00013c  a0c9              ADR      r0,|L8.1124|
00013e  f7fffffe          BL       GUI_DispStringAt
000142  48c0              LDR      r0,|L8.1092|
000144  f7fffffe          BL       GUI_SetFont
000148  2202              MOVS     r2,#2                 ;152
00014a  e002              B        |L8.338|
                  |L8.332|
00014c  e149              B        |L8.994|
                  |L8.334|
00014e  e3b8              B        |L8.2242|
000150  e005              B        |L8.350|
                  |L8.338|
000152  f44f71af          MOV      r1,#0x15e             ;152
000156  a0c4              ADR      r0,|L8.1128|
000158  f7fffffe          BL       GUI_DispStringAt
00015c  e786              B        |L8.108|
                  |L8.350|
00015e  68e0              LDR      r0,[r4,#0xc]          ;171
000160  f7fffffe          BL       WM_GetTimerId
000164  2802              CMP      r0,#2                 ;171
000166  d181              BNE      |L8.108|
000168  48c0              LDR      r0,|L8.1132|
00016a  7800              LDRB     r0,[r0,#0]            ;202  ; lock
00016c  2801              CMP      r0,#1                 ;202
00016e  d01e              BEQ      |L8.430|
000170  4651              MOV      r1,r10                ;207
000172  6860              LDR      r0,[r4,#4]            ;207
000174  f7fffffe          BL       WM_GetDialogItem
000178  a1b1              ADR      r1,|L8.1088|
00017a  f7fffffe          BL       TEXT_SetText
                  |L8.382|
00017e  f8df82f0          LDR      r8,|L8.1136|
000182  49bc              LDR      r1,|L8.1140|
000184  f8d80000          LDR      r0,[r8,#0]            ;211  ; DISS_Voltage
000188  4288              CMP      r0,r1                 ;211
00018a  da18              BGE      |L8.446|
00018c  f6400191          MOV      r1,#0x891             ;213
000190  6860              LDR      r0,[r4,#4]            ;213
000192  f7fffffe          BL       WM_GetDialogItem
000196  4606              MOV      r6,r0                 ;213
000198  ec532b18          VMOV     r2,r3,d8              ;214
00019c  a1b6              ADR      r1,|L8.1144|
00019e  4668              MOV      r0,sp                 ;214
0001a0  f7fffffe          BL       __2sprintf
0001a4  4669              MOV      r1,sp                 ;215
0001a6  4630              MOV      r0,r6                 ;215
0001a8  f7fffffe          BL       TEXT_SetText
0001ac  e01d              B        |L8.490|
                  |L8.430|
0001ae  4651              MOV      r1,r10                ;204
0001b0  6860              LDR      r0,[r4,#4]            ;204
0001b2  f7fffffe          BL       WM_GetDialogItem
0001b6  a1b2              ADR      r1,|L8.1152|
0001b8  f7fffffe          BL       TEXT_SetText
0001bc  e7df              B        |L8.382|
                  |L8.446|
0001be  f6400191          MOV      r1,#0x891             ;217
0001c2  6860              LDR      r0,[r4,#4]            ;217
0001c4  f7fffffe          BL       WM_GetDialogItem
0001c8  4606              MOV      r6,r0                 ;217
0001ca  48ae              LDR      r0,|L8.1156|
0001cc  6800              LDR      r0,[r0,#0]            ;218  ; disloadv
0001ce  f7fffffe          BL       __aeabi_f2d
0001d2  ec410b10          VMOV     d0,r0,r1              ;218
0001d6  a1a8              ADR      r1,|L8.1144|
0001d8  ec532b10          VMOV     r2,r3,d0              ;218
0001dc  4668              MOV      r0,sp                 ;218
0001de  f7fffffe          BL       __2sprintf
0001e2  4669              MOV      r1,sp                 ;219
0001e4  4630              MOV      r0,r6                 ;219
0001e6  f7fffffe          BL       TEXT_SetText
                  |L8.490|
0001ea  6928              LDR      r0,[r5,#0x10]         ;226  ; Run_Control
0001ec  f8dfa298          LDR      r10,|L8.1160|
0001f0  ee000a10          VMOV     s0,r0                 ;226
0001f4  2600              MOVS     r6,#0                 ;226
0001f6  eeb80a40          VCVT.F32.U32 s0,s0                 ;226
0001fa  eec00a29          VDIV.F32 s1,s0,s19             ;226
0001fe  ed980a00          VLDR     s0,[r8,#0]            ;226
000202  ee200a80          VMUL.F32 s0,s1,s0              ;226
000206  ee100a10          VMOV     r0,s0                 ;226
00020a  4550              CMP      r0,r10                ;226
00020c  dd3b              BLE      |L8.646|
00020e  612e              STR      r6,[r5,#0x10]         ;227  ; Run_Control
000210  f640016e          MOV      r1,#0x86e             ;228
000214  6878              LDR      r0,[r7,#4]            ;228  ; load_wind
000216  f7fffffe          BL       WM_GetDialogItem
00021a  9002              STR      r0,[sp,#8]            ;228
00021c  f06f4170          MVN      r1,#0xf0000000        ;229
000220  9802              LDR      r0,[sp,#8]            ;229
000222  f7fffffe          BL       TEXT_SetBkColor
000226  4649              MOV      r1,r9                 ;230
000228  9802              LDR      r0,[sp,#8]            ;230
00022a  f7fffffe          BL       TEXT_SetTextColor
00022e  6928              LDR      r0,[r5,#0x10]         ;231  ; Run_Control
000230  f24d61d8          MOV      r1,#0xd6d8            ;231
000234  4288              CMP      r0,r1                 ;231
000236  d80e              BHI      |L8.598|
000238  6928              LDR      r0,[r5,#0x10]         ;231  ; Run_Control
00023a  ee000a10          VMOV     s0,r0                 ;231
00023e  eef80a40          VCVT.F32.U32 s1,s0                 ;231
000242  ee800aa9          VDIV.F32 s0,s1,s19             ;231
000246  edd80a00          VLDR     s1,[r8,#0]            ;231
00024a  ee200a20          VMUL.F32 s0,s0,s1              ;231
00024e  ee100a10          VMOV     r0,s0                 ;231
000252  4550              CMP      r0,r10                ;231
000254  dd00              BLE      |L8.600|
                  |L8.598|
000256  612e              STR      r6,[r5,#0x10]         ;232  ; Run_Control
                  |L8.600|
000258  6928              LDR      r0,[r5,#0x10]         ;234  ; Run_Control
00025a  ee000a10          VMOV     s0,r0                 ;234
00025e  eef80a40          VCVT.F32.U32 s1,s0                 ;234
000262  ee800aa9          VDIV.F32 s0,s1,s19             ;234
000266  ee100a10          VMOV     r0,s0                 ;235
00026a  f7fffffe          BL       __aeabi_f2d
00026e  ec410b10          VMOV     d0,r0,r1              ;235
000272  a181              ADR      r1,|L8.1144|
000274  ec532b10          VMOV     r2,r3,d0              ;235
000278  4668              MOV      r0,sp                 ;235
00027a  f7fffffe          BL       __2sprintf
00027e  4669              MOV      r1,sp                 ;236
000280  9802              LDR      r0,[sp,#8]            ;236
000282  f7fffffe          BL       TEXT_SetText
                  |L8.646|
000286  7838              LDRB     r0,[r7,#0]            ;243  ; load_sw
000288  2801              CMP      r0,#1                 ;243
00028a  d032              BEQ      |L8.754|
00028c  f6400196          MOV      r1,#0x896             ;293
000290  6860              LDR      r0,[r4,#4]            ;293
000292  f7fffffe          BL       WM_GetDialogItem
000296  a16a              ADR      r1,|L8.1088|
000298  f7fffffe          BL       TEXT_SetText
00029c  f6400192          MOV      r1,#0x892             ;296
0002a0  6860              LDR      r0,[r4,#4]            ;296
0002a2  f7fffffe          BL       WM_GetDialogItem
0002a6  4605              MOV      r5,r0                 ;296
0002a8  ec532b18          VMOV     r2,r3,d8              ;297
0002ac  a172              ADR      r1,|L8.1144|
0002ae  4668              MOV      r0,sp                 ;297
0002b0  f7fffffe          BL       __2sprintf
0002b4  4669              MOV      r1,sp                 ;298
0002b6  4628              MOV      r0,r5                 ;298
0002b8  f7fffffe          BL       TEXT_SetText
                  |L8.700|
0002bc  f6401112          MOV      r1,#0x912             ;304
0002c0  6860              LDR      r0,[r4,#4]            ;304
0002c2  f7fffffe          BL       WM_GetDialogItem
0002c6  4605              MOV      r5,r0                 ;304
0002c8  f8db0000          LDR      r0,[r11,#0]           ;305  ; temp
0002cc  f7fffffe          BL       __aeabi_f2d
0002d0  ec410b10          VMOV     d0,r0,r1              ;305
0002d4  a16d              ADR      r1,|L8.1164|
0002d6  ec532b10          VMOV     r2,r3,d0              ;305
0002da  4668              MOV      r0,sp                 ;305
0002dc  f7fffffe          BL       __2sprintf
0002e0  4669              MOV      r1,sp                 ;306
0002e2  4628              MOV      r0,r5                 ;306
0002e4  f7fffffe          BL       TEXT_SetText
0002e8  2132              MOVS     r1,#0x32              ;308
0002ea  68e0              LDR      r0,[r4,#0xc]          ;308
0002ec  f7fffffe          BL       WM_RestartTimer
                  |L8.752|
0002f0  e6bc              B        |L8.108|
                  |L8.754|
0002f2  6929              LDR      r1,[r5,#0x10]         ;245  ; Run_Control
0002f4  f2475230          MOV      r2,#0x7530            ;245
0002f8  4866              LDR      r0,|L8.1172|
0002fa  2501              MOVS     r5,#1                 ;124
0002fc  4291              CMP      r1,r2                 ;245
0002fe  d301              BCC      |L8.772|
000300  7005              STRB     r5,[r0,#0]            ;247
000302  e000              B        |L8.774|
                  |L8.772|
000304  7006              STRB     r6,[r0,#0]            ;249
                  |L8.774|
000306  4864              LDR      r0,|L8.1176|
000308  f8df9190          LDR      r9,|L8.1180|
00030c  ed900a00          VLDR     s0,[r0,#0]            ;251
000310  eebd0ac0          VCVT.S32.F32 s0,s0                 ;251
000314  ee100a10          VMOV     r0,s0                 ;251
000318  f8c90000          STR      r0,[r9,#0]            ;251  ; battery_c
00031c  f640110d          MOV      r1,#0x90d             ;252
000320  6860              LDR      r0,[r4,#4]            ;252
000322  f7fffffe          BL       WM_GetDialogItem
000326  4682              MOV      r10,r0                ;252
000328  f8d92000          LDR      r2,[r9,#0]            ;253  ; battery_c
00032c  a15c              ADR      r1,|L8.1184|
00032e  4668              MOV      r0,sp                 ;253
000330  f7fffffe          BL       __2sprintf
000334  4669              MOV      r1,sp                 ;254
000336  4650              MOV      r0,r10                ;254
000338  f7fffffe          BL       TEXT_SetText
00033c  f6400192          MOV      r1,#0x892             ;256
000340  6860              LDR      r0,[r4,#4]            ;256
000342  f7fffffe          BL       WM_GetDialogItem
000346  4681              MOV      r9,r0                 ;256
000348  4857              LDR      r0,|L8.1192|
00034a  6800              LDR      r0,[r0,#0]            ;257  ; DISS_Current
00034c  f7fffffe          BL       __aeabi_f2d
000350  ec410b10          VMOV     d0,r0,r1              ;257
000354  a148              ADR      r1,|L8.1144|
000356  ec532b10          VMOV     r2,r3,d0              ;257
00035a  4668              MOV      r0,sp                 ;257
00035c  f7fffffe          BL       __2sprintf
000360  4669              MOV      r1,sp                 ;258
000362  4648              MOV      r0,r9                 ;258
000364  f7fffffe          BL       TEXT_SetText
000368  7878              LDRB     r0,[r7,#1]            ;259  ; status_flash
00036a  b320              CBZ      r0,|L8.950|
00036c  f6400196          MOV      r1,#0x896             ;267
000370  6860              LDR      r0,[r4,#4]            ;267
000372  f7fffffe          BL       WM_GetDialogItem
000376  a132              ADR      r1,|L8.1088|
000378  f7fffffe          BL       TEXT_SetText
00037c  707e              STRB     r6,[r7,#1]            ;269
                  |L8.894|
00037e  ed970a02          VLDR     s0,[r7,#8]            ;271
000382  eeb50ac0          VCMPE.F32 s0,#0.0               ;271
000386  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;271
00038a  d097              BEQ      |L8.700|
00038c  edd80a00          VLDR     s1,[r8,#0]            ;271
000390  eef40ac0          VCMPE.F32 s1,s0                 ;271
000394  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;271
000398  d290              BCS      |L8.700|
00039a  4844              LDR      r0,|L8.1196|
00039c  6801              LDR      r1,[r0,#0]            ;273  ; flagA
00039e  f0210140          BIC      r1,r1,#0x40           ;273
0003a2  6001              STR      r1,[r0,#0]            ;273  ; flagA
0003a4  f44f4100          MOV      r1,#0x8000            ;274
0003a8  4841              LDR      r0,|L8.1200|
0003aa  f7fffffe          BL       GPIO_SetBits
0003ae  4841              LDR      r0,|L8.1204|
0003b0  7006              STRB     r6,[r0,#0]            ;275
0003b2  703e              STRB     r6,[r7,#0]            ;276
0003b4  e782              B        |L8.700|
                  |L8.950|
0003b6  f6400196          MOV      r1,#0x896             ;260
0003ba  6860              LDR      r0,[r4,#4]            ;260
0003bc  f7fffffe          BL       WM_GetDialogItem
0003c0  4681              MOV      r9,r0                 ;260
0003c2  21ff              MOVS     r1,#0xff              ;261
0003c4  4648              MOV      r0,r9                 ;261
0003c6  f7fffffe          BL       TEXT_SetTextColor
0003ca  493b              LDR      r1,|L8.1208|
0003cc  4648              MOV      r0,r9                 ;262
0003ce  f7fffffe          BL       TEXT_SetFont
0003d2  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0003d6  a139              ADR      r1,|L8.1212|
0003d8  4648              MOV      r0,r9                 ;264
0003da  f7fffffe          BL       TEXT_SetText
0003de  707d              STRB     r5,[r7,#1]            ;265
0003e0  e7cd              B        |L8.894|
                  |L8.994|
0003e2  6865              LDR      r5,[r4,#4]            ;316
0003e4  2100              MOVS     r1,#0                 ;317
0003e6  4628              MOV      r0,r5                 ;317
0003e8  f7fffffe          BL       WINDOW_SetBkColor
0003ec  2300              MOVS     r3,#0                 ;318
0003ee  f44f72fa          MOV      r2,#0x1f4             ;318
0003f2  2102              MOVS     r1,#2                 ;318
0003f4  4628              MOV      r0,r5                 ;318
0003f6  f7fffffe          BL       WM_CreateTimer
0003fa  4651              MOV      r1,r10                ;330
0003fc  6860              LDR      r0,[r4,#4]            ;330
0003fe  f7fffffe          BL       WM_GetDialogItem
000402  4605              MOV      r5,r0                 ;330
000404  21ff              MOVS     r1,#0xff              ;331
000406  e05f              B        |L8.1224|
                  |L8.1032|
                          DCD      Run_Control
                  |L8.1036|
00040c  447a0000          DCFS     0x447a0000 ; 1000
                  |L8.1040|
                          DCD      0x00d3d3d3
                  |L8.1044|
                          DCD      temp
                  |L8.1048|
000418  00000000          DCFD     0x0000000000000000 ; 0
00041c  00000000
                  |L8.1056|
                          DCD      ||.data||
                  |L8.1060|
                          DCD      GUI_Fontsymbol
                  |L8.1064|
000428  4a696e6b          DCB      "Jinko",0
00042c  6f00    
00042e  00                DCB      0
00042f  00                DCB      0
                  |L8.1072|
                          DCD      GUI_FontHZ20S
                  |L8.1076|
000434  e6b58be9          DCB      230,181,139,233,135,143,230,152,190,231,164,186
000438  878fe698
00043c  bee7a4ba
                  |L8.1088|
000440  00                DCB      0
000441  00                DCB      0
000442  00                DCB      0
000443  00                DCB      0
                  |L8.1092|
                          DCD      GUI_Font24_1
                  |L8.1096|
000448  4100              DCB      "A",0
00044a  00                DCB      0
00044b  00                DCB      0
                  |L8.1100|
00044c  5600              DCB      "V",0
00044e  00                DCB      0
00044f  00                DCB      0
                  |L8.1104|
                          DCD      GUI_FontEN40
                  |L8.1108|
000454  433a00            DCB      "C:",0
000457  00                DCB      0
                  |L8.1112|
000458  6d00              DCB      "m",0
00045a  00                DCB      0
00045b  00                DCB      0
                  |L8.1116|
00045c  414800            DCB      "AH",0
00045f  00                DCB      0
                  |L8.1120|
                          DCD      GUI_Fontunit
                  |L8.1124|
000464  c2b000            DCB      194,176,0
000467  00                DCB      0
                  |L8.1128|
000468  4300              DCB      "C",0
00046a  00                DCB      0
00046b  00                DCB      0
                  |L8.1132|
                          DCD      lock
                  |L8.1136|
                          DCD      DISS_Voltage
                  |L8.1140|
                          DCD      0x3e99999a
                  |L8.1144|
000478  252e3366          DCB      "%.3f",0
00047c  00      
00047d  00                DCB      0
00047e  00                DCB      0
00047f  00                DCB      0
                  |L8.1152|
000480  e9948100          DCB      233,148,129,0
                  |L8.1156|
                          DCD      disloadv
                  |L8.1160|
                          DCD      0x43480000
                  |L8.1164|
00048c  252e3166          DCB      "%.1f",0
000490  00      
000491  00                DCB      0
000492  00                DCB      0
000493  00                DCB      0
                  |L8.1172|
                          DCD      alert_flag
                  |L8.1176|
                          DCD      bc_raw
                  |L8.1180|
                          DCD      battery_c
                  |L8.1184|
0004a0  25303564          DCB      "%05d",0
0004a4  00      
0004a5  00                DCB      0
0004a6  00                DCB      0
0004a7  00                DCB      0
                  |L8.1192|
                          DCD      DISS_Current
                  |L8.1196|
                          DCD      flagA
                  |L8.1200|
                          DCD      0x40020000
                  |L8.1204|
                          DCD      mode_sw
                  |L8.1208|
                          DCD      GUI_FontHZ16
                  |L8.1212|
0004bc  e694bee7          DCB      230,148,190,231,148,181,228,184,173,0
0004c0  94b5e4b8
0004c4  ad00    
0004c6  00                DCB      0
0004c7  00                DCB      0
                  |L8.1224|
0004c8  4628              MOV      r0,r5                 ;331
0004ca  f7fffffe          BL       TEXT_SetTextColor
0004ce  49fd              LDR      r1,|L8.2244|
0004d0  4628              MOV      r0,r5                 ;332
0004d2  f7fffffe          BL       TEXT_SetFont
0004d6  f2af0198          ADR      r1,|L8.1088|
0004da  4628              MOV      r0,r5                 ;333
0004dc  f7fffffe          BL       TEXT_SetText
0004e0  f640010b          MOV      r1,#0x80b             ;336
0004e4  6860              LDR      r0,[r4,#4]            ;336
0004e6  f7fffffe          BL       WM_GetDialogItem
0004ea  4605              MOV      r5,r0                 ;336
0004ec  49f6              LDR      r1,|L8.2248|
0004ee  4628              MOV      r0,r5                 ;338
0004f0  f7fffffe          BL       BUTTON_SetFont
0004f4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0004f8  a1f4              ADR      r1,|L8.2252|
0004fa  4628              MOV      r0,r5                 ;340
0004fc  f7fffffe          BL       BUTTON_SetText
000500  f640010c          MOV      r1,#0x80c             ;344
000504  6860              LDR      r0,[r4,#4]            ;344
000506  f7fffffe          BL       WM_GetDialogItem
00050a  4605              MOV      r5,r0                 ;344
00050c  2101              MOVS     r1,#1                 ;345
00050e  4628              MOV      r0,r5                 ;345
000510  f7fffffe          BL       BUTTON_SetPressed
000514  49ec              LDR      r1,|L8.2248|
000516  4628              MOV      r0,r5                 ;347
000518  f7fffffe          BL       BUTTON_SetFont
00051c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000520  a1ee              ADR      r1,|L8.2268|
000522  4628              MOV      r0,r5                 ;349
000524  f7fffffe          BL       BUTTON_SetText
000528  f640010d          MOV      r1,#0x80d             ;353
00052c  6860              LDR      r0,[r4,#4]            ;353
00052e  f7fffffe          BL       WM_GetDialogItem
000532  4605              MOV      r5,r0                 ;353
000534  49e4              LDR      r1,|L8.2248|
000536  4628              MOV      r0,r5                 ;355
000538  f7fffffe          BL       BUTTON_SetFont
00053c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000540  a1ea              ADR      r1,|L8.2284|
000542  4628              MOV      r0,r5                 ;357
000544  f7fffffe          BL       BUTTON_SetText
000548  f640010e          MOV      r1,#0x80e             ;361
00054c  6860              LDR      r0,[r4,#4]            ;361
00054e  f7fffffe          BL       WM_GetDialogItem
000552  4605              MOV      r5,r0                 ;361
000554  49dc              LDR      r1,|L8.2248|
000556  4628              MOV      r0,r5                 ;363
000558  f7fffffe          BL       BUTTON_SetFont
00055c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000560  a1e6              ADR      r1,|L8.2300|
000562  4628              MOV      r0,r5                 ;365
000564  f7fffffe          BL       BUTTON_SetText
000568  f640010f          MOV      r1,#0x80f             ;369
00056c  6860              LDR      r0,[r4,#4]            ;369
00056e  f7fffffe          BL       WM_GetDialogItem
000572  4605              MOV      r5,r0                 ;369
000574  49d4              LDR      r1,|L8.2248|
000576  4628              MOV      r0,r5                 ;371
000578  f7fffffe          BL       BUTTON_SetFont
00057c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000580  a1e1              ADR      r1,|L8.2312|
000582  4628              MOV      r0,r5                 ;373
000584  f7fffffe          BL       BUTTON_SetText
000588  f44f6101          MOV      r1,#0x810             ;376
00058c  6860              LDR      r0,[r4,#4]            ;376
00058e  f7fffffe          BL       WM_GetDialogItem
000592  4605              MOV      r5,r0                 ;376
000594  4641              MOV      r1,r8                 ;377
000596  4628              MOV      r0,r5                 ;377
000598  f7fffffe          BL       TEXT_SetTextColor
00059c  49dc              LDR      r1,|L8.2320|
00059e  4628              MOV      r0,r5                 ;378
0005a0  f7fffffe          BL       TEXT_SetFont
0005a4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005a8  a1da              ADR      r1,|L8.2324|
0005aa  4628              MOV      r0,r5                 ;380
0005ac  f7fffffe          BL       TEXT_SetText
0005b0  f6400111          MOV      r1,#0x811             ;382
0005b4  6860              LDR      r0,[r4,#4]            ;382
0005b6  f7fffffe          BL       WM_GetDialogItem
0005ba  4605              MOV      r5,r0                 ;382
0005bc  4641              MOV      r1,r8                 ;383
0005be  4628              MOV      r0,r5                 ;383
0005c0  f7fffffe          BL       TEXT_SetTextColor
0005c4  49d2              LDR      r1,|L8.2320|
0005c6  4628              MOV      r0,r5                 ;384
0005c8  f7fffffe          BL       TEXT_SetFont
0005cc  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005d0  a1d1              ADR      r1,|L8.2328|
0005d2  4628              MOV      r0,r5                 ;386
0005d4  f7fffffe          BL       TEXT_SetText
0005d8  f640011e          MOV      r1,#0x81e             ;388
0005dc  6860              LDR      r0,[r4,#4]            ;388
0005de  f7fffffe          BL       WM_GetDialogItem
0005e2  4605              MOV      r5,r0                 ;388
0005e4  4641              MOV      r1,r8                 ;389
0005e6  4628              MOV      r0,r5                 ;389
0005e8  f7fffffe          BL       TEXT_SetTextColor
0005ec  49c8              LDR      r1,|L8.2320|
0005ee  4628              MOV      r0,r5                 ;390
0005f0  f7fffffe          BL       TEXT_SetFont
0005f4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005f8  f2af11b0          ADR      r1,|L8.1100|
0005fc  4628              MOV      r0,r5                 ;392
0005fe  f7fffffe          BL       TEXT_SetText
000602  f640011f          MOV      r1,#0x81f             ;394
000606  6860              LDR      r0,[r4,#4]            ;394
000608  f7fffffe          BL       WM_GetDialogItem
00060c  4605              MOV      r5,r0                 ;394
00060e  4641              MOV      r1,r8                 ;395
000610  4628              MOV      r0,r5                 ;395
000612  f7fffffe          BL       TEXT_SetTextColor
000616  49be              LDR      r1,|L8.2320|
000618  4628              MOV      r0,r5                 ;396
00061a  f7fffffe          BL       TEXT_SetFont
00061e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000622  f2af11dc          ADR      r1,|L8.1096|
000626  4628              MOV      r0,r5                 ;398
000628  f7fffffe          BL       TEXT_SetText
00062c  f640016d          MOV      r1,#0x86d             ;400
000630  6860              LDR      r0,[r4,#4]            ;400
000632  f7fffffe          BL       WM_GetDialogItem
000636  4605              MOV      r5,r0                 ;400
000638  2100              MOVS     r1,#0                 ;401
00063a  4628              MOV      r0,r5                 ;401
00063c  f7fffffe          BL       TEXT_SetTextColor
000640  49b6              LDR      r1,|L8.2332|
000642  4628              MOV      r0,r5                 ;402
000644  f7fffffe          BL       TEXT_SetBkColor
000648  49b5              LDR      r1,|L8.2336|
00064a  4628              MOV      r0,r5                 ;403
00064c  f7fffffe          BL       TEXT_SetFont
000650  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000654  a1b3              ADR      r1,|L8.2340|
000656  4628              MOV      r0,r5                 ;405
000658  f7fffffe          BL       TEXT_SetText
00065c  f640016e          MOV      r1,#0x86e             ;407
000660  6860              LDR      r0,[r4,#4]            ;407
000662  f7fffffe          BL       WM_GetDialogItem
000666  4605              MOV      r5,r0                 ;407
000668  ee1a0a10          VMOV     r0,s20                ;408
00066c  f7fffffe          BL       __aeabi_f2d
000670  ec410b10          VMOV     d0,r0,r1              ;408
000674  ec532b10          VMOV     r2,r3,d0              ;408
000678  f2af2104          ADR      r1,|L8.1144|
00067c  4668              MOV      r0,sp                 ;408
00067e  f7fffffe          BL       __2sprintf
000682  4649              MOV      r1,r9                 ;409
000684  4628              MOV      r0,r5                 ;409
000686  f7fffffe          BL       TEXT_SetTextColor
00068a  49aa              LDR      r1,|L8.2356|
00068c  4628              MOV      r0,r5                 ;410
00068e  f7fffffe          BL       TEXT_SetFont
000692  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000696  4669              MOV      r1,sp                 ;412
000698  4628              MOV      r0,r5                 ;412
00069a  f7fffffe          BL       TEXT_SetText
00069e  f640112d          MOV      r1,#0x92d             ;414
0006a2  6860              LDR      r0,[r4,#4]            ;414
0006a4  f7fffffe          BL       WM_GetDialogItem
0006a8  4605              MOV      r5,r0                 ;414
0006aa  68b8              LDR      r0,[r7,#8]            ;415  ; load_cutoffv
0006ac  f7fffffe          BL       __aeabi_f2d
0006b0  ec410b10          VMOV     d0,r0,r1              ;415
0006b4  ec532b10          VMOV     r2,r3,d0              ;415
0006b8  f2af2144          ADR      r1,|L8.1144|
0006bc  4668              MOV      r0,sp                 ;415
0006be  f7fffffe          BL       __2sprintf
0006c2  4649              MOV      r1,r9                 ;416
0006c4  4628              MOV      r0,r5                 ;416
0006c6  f7fffffe          BL       TEXT_SetTextColor
0006ca  499a              LDR      r1,|L8.2356|
0006cc  4628              MOV      r0,r5                 ;417
0006ce  f7fffffe          BL       TEXT_SetFont
0006d2  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006d6  4669              MOV      r1,sp                 ;419
0006d8  4628              MOV      r0,r5                 ;419
0006da  f7fffffe          BL       TEXT_SetText
0006de  f6400191          MOV      r1,#0x891             ;421
0006e2  6860              LDR      r0,[r4,#4]            ;421
0006e4  f7fffffe          BL       WM_GetDialogItem
0006e8  4605              MOV      r5,r0                 ;421
0006ea  ec532b18          VMOV     r2,r3,d8              ;422
0006ee  f2af2178          ADR      r1,|L8.1144|
0006f2  4668              MOV      r0,sp                 ;422
0006f4  f7fffffe          BL       __2sprintf
0006f8  4631              MOV      r1,r6                 ;423
0006fa  4628              MOV      r0,r5                 ;423
0006fc  f7fffffe          BL       TEXT_SetTextColor
000700  498d              LDR      r1,|L8.2360|
000702  4628              MOV      r0,r5                 ;424
000704  f7fffffe          BL       TEXT_SetFont
000708  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00070c  4669              MOV      r1,sp                 ;426
00070e  4628              MOV      r0,r5                 ;426
000710  f7fffffe          BL       TEXT_SetText
000714  f6400192          MOV      r1,#0x892             ;428
000718  6860              LDR      r0,[r4,#4]            ;428
00071a  f7fffffe          BL       WM_GetDialogItem
00071e  4605              MOV      r5,r0                 ;428
000720  ec532b18          VMOV     r2,r3,d8              ;429
000724  f2af21b0          ADR      r1,|L8.1144|
000728  4668              MOV      r0,sp                 ;429
00072a  f7fffffe          BL       __2sprintf
00072e  4631              MOV      r1,r6                 ;430
000730  4628              MOV      r0,r5                 ;430
000732  f7fffffe          BL       TEXT_SetTextColor
000736  4980              LDR      r1,|L8.2360|
000738  4628              MOV      r0,r5                 ;431
00073a  f7fffffe          BL       TEXT_SetFont
00073e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000742  4669              MOV      r1,sp                 ;433
000744  4628              MOV      r0,r5                 ;433
000746  f7fffffe          BL       TEXT_SetText
00074a  f640110d          MOV      r1,#0x90d             ;435
00074e  6860              LDR      r0,[r4,#4]            ;435
000750  f7fffffe          BL       WM_GetDialogItem
000754  4605              MOV      r5,r0                 ;435
000756  2200              MOVS     r2,#0                 ;436
000758  f2af21bc          ADR      r1,|L8.1184|
00075c  4668              MOV      r0,sp                 ;436
00075e  f7fffffe          BL       __2sprintf
000762  4631              MOV      r1,r6                 ;437
000764  4628              MOV      r0,r5                 ;437
000766  f7fffffe          BL       TEXT_SetTextColor
00076a  4973              LDR      r1,|L8.2360|
00076c  4628              MOV      r0,r5                 ;438
00076e  f7fffffe          BL       TEXT_SetFont
000772  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000776  4669              MOV      r1,sp                 ;440
000778  4628              MOV      r0,r5                 ;440
00077a  f7fffffe          BL       TEXT_SetText
00077e  f640110e          MOV      r1,#0x90e             ;442
000782  6860              LDR      r0,[r4,#4]            ;442
000784  f7fffffe          BL       WM_GetDialogItem
000788  4605              MOV      r5,r0                 ;442
00078a  4649              MOV      r1,r9                 ;443
00078c  4628              MOV      r0,r5                 ;443
00078e  f7fffffe          BL       TEXT_SetTextColor
000792  4963              LDR      r1,|L8.2336|
000794  4628              MOV      r0,r5                 ;444
000796  f7fffffe          BL       TEXT_SetFont
00079a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00079e  a167              ADR      r1,|L8.2364|
0007a0  4628              MOV      r0,r5                 ;446
0007a2  f7fffffe          BL       TEXT_SetText
0007a6  f6401139          MOV      r1,#0x939             ;448
0007aa  6860              LDR      r0,[r4,#4]            ;448
0007ac  f7fffffe          BL       WM_GetDialogItem
0007b0  4605              MOV      r5,r0                 ;448
0007b2  4649              MOV      r1,r9                 ;449
0007b4  4628              MOV      r0,r5                 ;449
0007b6  f7fffffe          BL       TEXT_SetTextColor
0007ba  4959              LDR      r1,|L8.2336|
0007bc  4628              MOV      r0,r5                 ;450
0007be  f7fffffe          BL       TEXT_SetFont
0007c2  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0007c6  a161              ADR      r1,|L8.2380|
0007c8  4628              MOV      r0,r5                 ;452
0007ca  f7fffffe          BL       TEXT_SetText
0007ce  78b8              LDRB     r0,[r7,#2]            ;454  ; load_mode
0007d0  f8df8188          LDR      r8,|L8.2396|
0007d4  4d62              LDR      r5,|L8.2400|
0007d6  f640110f          MOV      r1,#0x90f             ;456
0007da  f44f6780          MOV      r7,#0x400             ;460
0007de  2801              CMP      r0,#1                 ;454
0007e0  d001              BEQ      |L8.2022|
0007e2  b1d8              CBZ      r0,|L8.2076|
0007e4  e034              B        |L8.2128|
                  |L8.2022|
0007e6  6860              LDR      r0,[r4,#4]            ;456
0007e8  f7fffffe          BL       WM_GetDialogItem
0007ec  4682              MOV      r10,r0                ;456
0007ee  4649              MOV      r1,r9                 ;457
0007f0  4650              MOV      r0,r10                ;457
0007f2  f7fffffe          BL       TEXT_SetTextColor
0007f6  494f              LDR      r1,|L8.2356|
0007f8  4650              MOV      r0,r10                ;458
0007fa  f7fffffe          BL       TEXT_SetFont
0007fe  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000802  4639              MOV      r1,r7                 ;460
000804  4640              MOV      r0,r8                 ;460
000806  f7fffffe          BL       GPIO_SetBits
00080a  a156              ADR      r1,|L8.2404|
00080c  4650              MOV      r0,r10                ;461
00080e  f7fffffe          BL       TEXT_SetText
000812  6828              LDR      r0,[r5,#0]            ;462  ; flagD
000814  f0400080          ORR      r0,r0,#0x80           ;462
000818  6028              STR      r0,[r5,#0]            ;462  ; flagD
00081a  e019              B        |L8.2128|
                  |L8.2076|
00081c  6860              LDR      r0,[r4,#4]            ;464
00081e  f7fffffe          BL       WM_GetDialogItem
000822  4682              MOV      r10,r0                ;464
000824  4649              MOV      r1,r9                 ;465
000826  4650              MOV      r0,r10                ;465
000828  f7fffffe          BL       TEXT_SetTextColor
00082c  4941              LDR      r1,|L8.2356|
00082e  4650              MOV      r0,r10                ;466
000830  f7fffffe          BL       TEXT_SetFont
000834  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000838  4639              MOV      r1,r7                 ;468
00083a  4640              MOV      r0,r8                 ;468
00083c  f7fffffe          BL       GPIO_ResetBits
000840  a149              ADR      r1,|L8.2408|
000842  4650              MOV      r0,r10                ;469
000844  f7fffffe          BL       TEXT_SetText
000848  6828              LDR      r0,[r5,#0]            ;470  ; flagD
00084a  f0200080          BIC      r0,r0,#0x80           ;470
00084e  6028              STR      r0,[r5,#0]            ;470  ; flagD
                  |L8.2128|
000850  f44f6111          MOV      r1,#0x910             ;473
000854  6860              LDR      r0,[r4,#4]            ;473
000856  f7fffffe          BL       WM_GetDialogItem
00085a  4605              MOV      r5,r0                 ;473
00085c  4649              MOV      r1,r9                 ;474
00085e  4628              MOV      r0,r5                 ;474
000860  f7fffffe          BL       TEXT_SetTextColor
000864  492e              LDR      r1,|L8.2336|
000866  4628              MOV      r0,r5                 ;475
000868  f7fffffe          BL       TEXT_SetFont
00086c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000870  a13e              ADR      r1,|L8.2412|
000872  4628              MOV      r0,r5                 ;477
000874  f7fffffe          BL       TEXT_SetText
000878  f6401111          MOV      r1,#0x911             ;479
00087c  6860              LDR      r0,[r4,#4]            ;479
00087e  f7fffffe          BL       WM_GetDialogItem
000882  4605              MOV      r5,r0                 ;479
000884  ee190a10          VMOV     r0,s18                ;480
000888  f7fffffe          BL       __aeabi_f2d
00088c  ec410b10          VMOV     d0,r0,r1              ;480
000890  ec532b10          VMOV     r2,r3,d0              ;480
000894  f2af4120          ADR      r1,|L8.1144|
000898  4668              MOV      r0,sp                 ;480
00089a  f7fffffe          BL       __2sprintf
00089e  4649              MOV      r1,r9                 ;481
0008a0  4628              MOV      r0,r5                 ;481
0008a2  f7fffffe          BL       TEXT_SetTextColor
0008a6  4923              LDR      r1,|L8.2356|
0008a8  4628              MOV      r0,r5                 ;482
0008aa  f7fffffe          BL       TEXT_SetFont
0008ae  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0008b2  4669              MOV      r1,sp                 ;484
0008b4  4628              MOV      r0,r5                 ;484
0008b6  f7fffffe          BL       TEXT_SetText
0008ba  f6401112          MOV      r1,#0x912             ;486
0008be  6860              LDR      r0,[r4,#4]            ;486
0008c0  e05c              B        |L8.2428|
                  |L8.2242|
0008c2  e078              B        |L8.2486|
                  |L8.2244|
                          DCD      GUI_FontHZ14
                  |L8.2248|
                          DCD      GUI_FontHZ16
                  |L8.2252|
0008cc  e58685e9          DCB      229,134,133,233,152,187,230,181,139,232,175,149,0
0008d0  98bbe6b5
0008d4  8be8af95
0008d8  00      
0008d9  00                DCB      0
0008da  00                DCB      0
0008db  00                DCB      0
                  |L8.2268|
0008dc  e7a88be6          DCB      231,168,139,230,142,167,232,180,159,232,189,189,0
0008e0  8ea7e8b4
0008e4  9fe8bdbd
0008e8  00      
0008e9  00                DCB      0
0008ea  00                DCB      0
0008eb  00                DCB      0
                  |L8.2284|
0008ec  e7a88be6          DCB      231,168,139,230,142,167,231,148,181,230,186,144,0
0008f0  8ea7e794
0008f4  b5e6ba90
0008f8  00      
0008f9  00                DCB      0
0008fa  00                DCB      0
0008fb  00                DCB      0
                  |L8.2300|
0008fc  e58585e6          DCB      229,133,133,230,148,190,231,148,181,0
000900  94bee794
000904  b500    
000906  00                DCB      0
000907  00                DCB      0
                  |L8.2312|
000908  e69bb2e7          DCB      230,155,178,231,186,191,0
00090c  babf00  
00090f  00                DCB      0
                  |L8.2320|
                          DCD      GUI_FontEN40
                  |L8.2324|
000914  563a00            DCB      "V:",0
000917  00                DCB      0
                  |L8.2328|
000918  493a00            DCB      "I:",0
00091b  00                DCB      0
                  |L8.2332|
                          DCD      0x00bfffff
                  |L8.2336|
                          DCD      GUI_Fontset_font
                  |L8.2340|
000924  e8b49fe8          DCB      232,180,159,232,189,189,231,148,181,230,181,129,0
000928  bdbde794
00092c  b5e6b581
000930  00      
000931  00                DCB      0
000932  00                DCB      0
000933  00                DCB      0
                  |L8.2356|
                          DCD      GUI_Font24_1
                  |L8.2360|
                          DCD      GUI_FontD24x32
                  |L8.2364|
00093c  e8b49fe8          DCB      232,180,159,232,189,189,230,168,161,229,188,143,0
000940  bdbde6a8
000944  a1e5bc8f
000948  00      
000949  00                DCB      0
00094a  00                DCB      0
00094b  00                DCB      0
                  |L8.2380|
00094c  e688aae6          DCB      230,136,170,230,173,162,231,148,181,229,142,139,0
000950  ada2e794
000954  b5e58e8b
000958  00      
000959  00                DCB      0
00095a  00                DCB      0
00095b  00                DCB      0
                  |L8.2396|
                          DCD      0x40020800
                  |L8.2400|
                          DCD      flagD
                  |L8.2404|
000964  434300            DCB      "CC",0
000967  00                DCB      0
                  |L8.2408|
000968  435600            DCB      "CV",0
00096b  00                DCB      0
                  |L8.2412|
00096c  e8b49fe8          DCB      232,180,159,232,189,189,231,148,181,229,142,139,0
000970  bdbde794
000974  b5e58e8b
000978  00      
000979  00                DCB      0
00097a  00                DCB      0
00097b  00                DCB      0
                  |L8.2428|
00097c  f7fffffe          BL       WM_GetDialogItem
000980  4604              MOV      r4,r0                 ;486
000982  4631              MOV      r1,r6                 ;487
000984  4620              MOV      r0,r4                 ;487
000986  f7fffffe          BL       TEXT_SetTextColor
00098a  490d              LDR      r1,|L8.2496|
00098c  4620              MOV      r0,r4                 ;488
00098e  f7fffffe          BL       TEXT_SetFont
000992  f8db0000          LDR      r0,[r11,#0]           ;489  ; temp
000996  f7fffffe          BL       __aeabi_f2d
00099a  ec410b10          VMOV     d0,r0,r1              ;489
00099e  ec532b10          VMOV     r2,r3,d0              ;489
0009a2  f2af5118          ADR      r1,|L8.1164|
0009a6  4668              MOV      r0,sp                 ;489
0009a8  f7fffffe          BL       __2sprintf
0009ac  4669              MOV      r1,sp                 ;490
0009ae  4620              MOV      r0,r4                 ;490
0009b0  f7fffffe          BL       TEXT_SetText
0009b4  e49c              B        |L8.752|
                  |L8.2486|
0009b6  68a0              LDR      r0,[r4,#8]            ;497
0009b8  f7fffffe          BL       WM_GetId
0009bc  e498              B        |L8.752|
;;;596    
                          ENDP

0009be  0000              DCW      0x0000
                  |L8.2496|
                          DCD      GUI_Font24_1

                          AREA ||i.test_load||, CODE, READONLY, ALIGN=2

                  test_load PROC
;;;1342   
;;;1343   void test_load(void)
000000  b570              PUSH     {r4-r6,lr}
;;;1344   {
;;;1345   
;;;1346       if(load_sw == load_on && para_set1 == set_1_on)
000002  4827              LDR      r0,|L9.160|
000004  7802              LDRB     r2,[r0,#0]  ; load_sw
;;;1347       {
;;;1348           if(DISS_Voltage*100 > set_max_v || DISS_Voltage*100 < set_min_v)
;;;1349           {
;;;1350              if(para_set4 == set_4_on){
;;;1351                   BEEP_Tiggr();
;;;1352               }
;;;1353               TM1650_SET_LED(0x68,0x70);//FAIL灯
;;;1354               GPIO_SetBits(GPIOD,GPIO_Pin_12);//            
000006  4d27              LDR      r5,|L9.164|
000008  f44f5480          MOV      r4,#0x1000
00000c  2a01              CMP      r2,#1                 ;1346
00000e  d103              BNE      |L9.24|
000010  4825              LDR      r0,|L9.168|
000012  7800              LDRB     r0,[r0,#0]            ;1346  ; para_set1
000014  28ff              CMP      r0,#0xff              ;1346
000016  d009              BEQ      |L9.44|
                  |L9.24|
;;;1355           }else{
;;;1356               GPIO_ResetBits(GPIOD,GPIO_Pin_12);
;;;1357               TM1650_SET_LED(0x48,0x71);
;;;1358               TM1650_SET_LED(0x68,0xF2);//PASS灯
;;;1359           }        
;;;1360       }else
;;;1361       {
;;;1362           TM1650_SET_LED(0x68,0x70);
000018  2170              MOVS     r1,#0x70
00001a  2068              MOVS     r0,#0x68
00001c  f7fffffe          BL       TM1650_SET_LED
;;;1363           GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
000020  4621              MOV      r1,r4
000022  4628              MOV      r0,r5
000024  e8bd4070          POP      {r4-r6,lr}
000028  f7ffbffe          B.W      GPIO_ResetBits
                  |L9.44|
00002c  4a1f              LDR      r2,|L9.172|
00002e  ed9f0a20          VLDR     s0,|L9.176|
000032  edd20a00          VLDR     s1,[r2,#0]            ;1348
000036  4a1f              LDR      r2,|L9.180|
000038  ee200a80          VMUL.F32 s0,s1,s0              ;1348
00003c  6b93              LDR      r3,[r2,#0x38]         ;1348  ; Run_Control
00003e  ee003a90          VMOV     s1,r3                 ;1348
000042  eef80a60          VCVT.F32.U32 s1,s1                 ;1348
000046  eeb40ae0          VCMPE.F32 s0,s1                 ;1348
00004a  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1348
00004e  dc09              BGT      |L9.100|
000050  6bd2              LDR      r2,[r2,#0x3c]         ;1348  ; Run_Control
000052  ee002a90          VMOV     s1,r2                 ;1348
000056  eef80a60          VCVT.F32.U32 s1,s1                 ;1348
00005a  eeb40ae0          VCMPE.F32 s0,s1                 ;1348
00005e  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1348
000062  d20f              BCS      |L9.132|
                  |L9.100|
000064  4814              LDR      r0,|L9.184|
000066  7800              LDRB     r0,[r0,#0]            ;1350  ; para_set4
000068  28ff              CMP      r0,#0xff              ;1350
00006a  d101              BNE      |L9.112|
00006c  f7fffffe          BL       BEEP_Tiggr
                  |L9.112|
000070  2170              MOVS     r1,#0x70              ;1353
000072  2068              MOVS     r0,#0x68              ;1353
000074  f7fffffe          BL       TM1650_SET_LED
000078  4621              MOV      r1,r4                 ;1354
00007a  4628              MOV      r0,r5                 ;1354
00007c  e8bd4070          POP      {r4-r6,lr}            ;1354
000080  f7ffbffe          B.W      GPIO_SetBits
                  |L9.132|
000084  4621              MOV      r1,r4                 ;1356
000086  4628              MOV      r0,r5                 ;1356
000088  f7fffffe          BL       GPIO_ResetBits
00008c  2171              MOVS     r1,#0x71              ;1357
00008e  2048              MOVS     r0,#0x48              ;1357
000090  f7fffffe          BL       TM1650_SET_LED
000094  e8bd4070          POP      {r4-r6,lr}            ;1358
000098  21f2              MOVS     r1,#0xf2              ;1358
00009a  2068              MOVS     r0,#0x68              ;1358
00009c  f7ffbffe          B.W      TM1650_SET_LED
;;;1364       }
;;;1365   }
                          ENDP

                  |L9.160|
                          DCD      ||.data||
                  |L9.164|
                          DCD      0x40020c00
                  |L9.168|
                          DCD      para_set1
                  |L9.172|
                          DCD      DISS_Voltage
                  |L9.176|
0000b0  42c80000          DCFS     0x42c80000 ; 100
                  |L9.180|
                          DCD      Run_Control
                  |L9.184|
                          DCD      para_set4

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aDialogCreate2
                          DCD      WINDOW_CreateIndirect
                          DCD      ||.conststring||
000008  08090000          DCW      0x0809,0x0000
00000c  000001e0          DCW      0x0000,0x01e0
000010  01100000          DCW      0x0110,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  080b0053          DCW      0x080b,0x0053
000028  00e2004d          DCW      0x00e2,0x004d
00002c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000040  080c00a3          DCW      0x080c,0x00a3
000044  00e2004d          DCW      0x00e2,0x004d
000048  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
00005c  080d00f3          DCW      0x080d,0x00f3
000060  00e2004d          DCW      0x00e2,0x004d
000064  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000078  080e0143          DCW      0x080e,0x0143
00007c  00e2004d          DCW      0x00e2,0x004d
000080  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000094  080f0193          DCW      0x080f,0x0193
000098  00e2004d          DCW      0x00e2,0x004d
00009c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000b0  0810001c          DCW      0x0810,0x001c
0000b4  00320040          DCW      0x0032,0x0040
0000b8  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000cc  0811001c          DCW      0x0811,0x001c
0000d0  00780040          DCW      0x0078,0x0040
0000d4  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000e8  081e00f0          DCW      0x081e,0x00f0
0000ec  00320020          DCW      0x0032,0x0020
0000f0  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000104  081f00f0          DCW      0x081f,0x00f0
000108  00790020          DCW      0x0079,0x0020
00010c  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000120  086d0122          DCW      0x086d,0x0122
000124  004b0050          DCW      0x004b,0x0050
000128  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00013c  086e017c          DCW      0x086e,0x017c
000140  004b0041          DCW      0x004b,0x0041
000144  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000158  090e0122          DCW      0x090e,0x0122
00015c  007d0050          DCW      0x007d,0x0050
000160  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000174  09390122          DCW      0x0939,0x0122
000178  00960050          DCW      0x0096,0x0050
00017c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000190  090f017c          DCW      0x090f,0x017c
000194  007d0041          DCW      0x007d,0x0041
000198  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001ac  09100122          DCW      0x0910,0x0122
0001b0  00640050          DCW      0x0064,0x0050
0001b4  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001c8  0911017c          DCW      0x0911,0x017c
0001cc  00640041          DCW      0x0064,0x0041
0001d0  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001e4  0891005f          DCW      0x0891,0x005f
0001e8  00300096          DCW      0x0030,0x0096
0001ec  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000200  0892005f          DCW      0x0892,0x005f
000204  00740096          DCW      0x0074,0x0096
000208  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00021c  08960190          DCW      0x0896,0x0190
000220  00040032          DCW      0x0004,0x0032
000224  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000238  090d005f          DCW      0x090d,0x005f
00023c  00b80096          DCW      0x00b8,0x0096
000240  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000254  0912012c          DCW      0x0912,0x012c
000258  00020050          DCW      0x0002,0x0050
00025c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000270  092d017c          DCW      0x092d,0x017c
000274  00960041          DCW      0x0096,0x0041
000278  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00028c  093d017c          DCW      0x093d,0x017c
000290  00080014          DCW      0x0008,0x0014
000294  000f0000          DCW      0x000f,0x0000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  57696e64          DCB      "Window",0
000004  6f7700  
000007  00                DCB      0
000008  42757474          DCB      "Button",0
00000c  6f6e00  
00000f  00                DCB      0
000010  54657874          DCB      "Text",0
000014  00      

                          AREA ||.data||, DATA, ALIGN=2

                  load_sw
000000  00                DCB      0x00
                  status_flash
000001  00                DCB      0x00
                  load_mode
000002  0000              DCB      0x00,0x00
                  load_wind
                          DCD      0x00000000
                  load_cutoffv
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\APP\\load_Face.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_load_Face_c_load_sw____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_load_Face_c_load_sw____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_load_Face_c_load_sw____REVSH|
#line 144
|__asm___11_load_Face_c_load_sw____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
