; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\load_face.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\load_face.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\load_face.crf --no_multibyte_chars ..\APP\load_Face.c]
                          THUMB

                          AREA ||i.CreateWindow2||, CODE, READONLY, ALIGN=2

                  CreateWindow2 PROC
;;;699    
;;;700    WM_HWIN CreateWindow2(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;701      if(page_sw == face_graph)
000002  4c1f              LDR      r4,|L1.128|
000004  7820              LDRB     r0,[r4,#0]  ; page_sw
000006  2800              CMP      r0,#0
000008  d001              BEQ      |L1.14|
;;;702      {      
;;;703      }else{
;;;704          IO_OFF();
00000a  f7fffffe          BL       IO_OFF
                  |L1.14|
;;;705      }
;;;706      page_sw = face_load;
00000e  2004              MOVS     r0,#4
000010  7020              STRB     r0,[r4,#0]
;;;707      track = face_load;
000012  491c              LDR      r1,|L1.132|
000014  7008              STRB     r0,[r1,#0]
;;;708      set_sw = set_24;
000016  491c              LDR      r1,|L1.136|
000018  2017              MOVS     r0,#0x17
00001a  7008              STRB     r0,[r1,#0]
;;;709      load_cutoffv = (float)set_load_cutoffv/1000;
00001c  481b              LDR      r0,|L1.140|
00001e  eddf0a1c          VLDR     s1,|L1.144|
000022  4e1c              LDR      r6,|L1.148|
000024  ed900a04          VLDR     s0,[r0,#0x10]
000028  eeb80ac0          VCVT.F32.S32 s0,s0
00002c  ee801a20          VDIV.F32 s2,s0,s1
000030  ed861a02          VSTR     s2,[r6,#8]
;;;710      SET_Current_Laod = load_c;
000034  4c18              LDR      r4,|L1.152|
000036  f8d40094          LDR      r0,[r4,#0x94]  ; Run_Control
00003a  6120              STR      r0,[r4,#0x10]  ; Run_Control
;;;711       C_SW(0);
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       C_SW
;;;712    //  if(SET_Current_Laod > 2500)
;;;713    //  {
;;;714    //	  C_SW(1);
;;;715    //  }else{
;;;716    //	  C_SW(0);
;;;717    //  }
;;;718      pass = 0;  
000042  4816              LDR      r0,|L1.156|
000044  2500              MOVS     r5,#0
000046  7005              STRB     r5,[r0,#0]
;;;719      mode_sw = mode_load;
000048  4915              LDR      r1,|L1.160|
00004a  2002              MOVS     r0,#2
00004c  7008              STRB     r0,[r1,#0]
;;;720      SET_Voltage_Laod = load_v; 
00004e  f8d400a4          LDR      r0,[r4,#0xa4]  ; Run_Control
000052  60e0              STR      r0,[r4,#0xc]  ; Run_Control
;;;721    //   GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;722    //   GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
;;;723    //   GPIO_SetBits(GPIOC,GPIO_Pin_13);//关闭电源输出继电器
;;;724      TM1650_SET_LED(0x68,0x70);
000054  2170              MOVS     r1,#0x70
000056  2068              MOVS     r0,#0x68
000058  f7fffffe          BL       TM1650_SET_LED
;;;725      GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
00005c  f44f5180          MOV      r1,#0x1000
000060  4810              LDR      r0,|L1.164|
000062  f7fffffe          BL       GPIO_ResetBits
;;;726      load_wind = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_HBKWIN, 0, 0);
000066  f7fffffe          BL       WM_GetDesktopWindow
00006a  4603              MOV      r3,r0
00006c  9500              STR      r5,[sp,#0]
00006e  4a0e              LDR      r2,|L1.168|
000070  2118              MOVS     r1,#0x18
000072  480e              LDR      r0,|L1.172|
000074  9501              STR      r5,[sp,#4]
000076  f7fffffe          BL       GUI_CreateDialogBox
00007a  6070              STR      r0,[r6,#4]  ; load_wind
;;;727      return load_wind;
;;;728    }
00007c  bd7c              POP      {r2-r6,pc}
;;;729    
                          ENDP

00007e  0000              DCW      0x0000
                  |L1.128|
                          DCD      page_sw
                  |L1.132|
                          DCD      track
                  |L1.136|
                          DCD      set_sw
                  |L1.140|
                          DCD      InFlashSave
                  |L1.144|
000090  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.148|
                          DCD      ||.data||
                  |L1.152|
                          DCD      Run_Control
                  |L1.156|
                          DCD      pass
                  |L1.160|
                          DCD      mode_sw
                  |L1.164|
                          DCD      0x40020c00
                  |L1.168|
                          DCD      _cbDialog2
                  |L1.172|
                          DCD      ||.constdata||

                          AREA ||i.DEL_LOAD||, CODE, READONLY, ALIGN=2

                  DEL_LOAD PROC
;;;1030   }
;;;1031   void DEL_LOAD(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1032   {
;;;1033   	switch(set_sw){
000004  4827              LDR      r0,|L2.164|
000006  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;1034   		case set_25:
;;;1035           {
;;;1036   			WM_HWIN hItem;
;;;1037   //            WM_InvalidateWindow(hWinWind);
;;;1038               hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
000008  4827              LDR      r0,|L2.168|
;;;1039   			if(bit > 0)
;;;1040   			{
;;;1041   				bit --;
;;;1042   				set_limit[bit] = '\0';
00000a  4f28              LDR      r7,|L2.172|
00000c  2400              MOVS     r4,#0                 ;1038
00000e  6840              LDR      r0,[r0,#4]            ;1038
000010  4d27              LDR      r5,|L2.176|
;;;1043   			}
;;;1044   			if(bit == dot_flag)
000012  4e28              LDR      r6,|L2.180|
000014  2918              CMP      r1,#0x18              ;1033
000016  d018              BEQ      |L2.74|
000018  2943              CMP      r1,#0x43              ;1033
00001a  d02b              BEQ      |L2.116|
00001c  2956              CMP      r1,#0x56              ;1033
00001e  d13e              BNE      |L2.158|
;;;1045   			{
;;;1046   				dot_flag = 0;
;;;1047   			}
;;;1048   			TEXT_SetText(hItem,set_limit);
;;;1049   		}break;
;;;1050   		case set_68:
;;;1051           {
;;;1052   			WM_HWIN hItem;
;;;1053   //            WM_InvalidateWindow(hWinWind);
;;;1054               hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;1055   			if(bit > 0)
;;;1056   			{
;;;1057   				bit --;
;;;1058   				set_limit[bit] = '\0';
;;;1059   			}
;;;1060   			if(bit == dot_flag)
;;;1061   			{
;;;1062   				dot_flag = 0;
;;;1063   			}
;;;1064   			TEXT_SetText(hItem,set_limit);
;;;1065   		}break;
;;;1066   		case set_87:
;;;1067           {
;;;1068               WM_HWIN hItem;
;;;1069   //            WM_InvalidateWindow(hWinWind);
;;;1070               hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000020  f640112d          MOV      r1,#0x92d
000024  f7fffffe          BL       WM_GetDialogItem
;;;1071   			if(bit > 0)
000028  7829              LDRB     r1,[r5,#0]  ; bit
00002a  b121              CBZ      r1,|L2.54|
;;;1072   			{
;;;1073   				bit --;
00002c  7829              LDRB     r1,[r5,#0]  ; bit
00002e  1e49              SUBS     r1,r1,#1
000030  7029              STRB     r1,[r5,#0]
;;;1074   				set_limit[bit] = '\0';
000032  7829              LDRB     r1,[r5,#0]  ; bit
000034  547c              STRB     r4,[r7,r1]
                  |L2.54|
;;;1075   			}
;;;1076   			if(bit == dot_flag)
000036  7829              LDRB     r1,[r5,#0]  ; bit
000038  7832              LDRB     r2,[r6,#0]  ; dot_flag
00003a  4291              CMP      r1,r2
00003c  d100              BNE      |L2.64|
;;;1077   			{
;;;1078   				dot_flag = 0;
00003e  7034              STRB     r4,[r6,#0]
                  |L2.64|
;;;1079   			}
;;;1080   			TEXT_SetText(hItem,set_limit);
000040  e8bd41f0          POP      {r4-r8,lr}
000044  4919              LDR      r1,|L2.172|
000046  f7ffbffe          B.W      TEXT_SetText
                  |L2.74|
00004a  f640016e          MOV      r1,#0x86e             ;1038
00004e  f7fffffe          BL       WM_GetDialogItem
000052  7829              LDRB     r1,[r5,#0]            ;1039  ; bit
000054  b121              CBZ      r1,|L2.96|
000056  7829              LDRB     r1,[r5,#0]            ;1041  ; bit
000058  1e49              SUBS     r1,r1,#1              ;1041
00005a  7029              STRB     r1,[r5,#0]            ;1041
00005c  7829              LDRB     r1,[r5,#0]            ;1042  ; bit
00005e  547c              STRB     r4,[r7,r1]            ;1042
                  |L2.96|
000060  7829              LDRB     r1,[r5,#0]            ;1044  ; bit
000062  7832              LDRB     r2,[r6,#0]            ;1044  ; dot_flag
000064  4291              CMP      r1,r2                 ;1044
000066  d100              BNE      |L2.106|
000068  7034              STRB     r4,[r6,#0]            ;1046
                  |L2.106|
00006a  e8bd41f0          POP      {r4-r8,lr}            ;1048
00006e  490f              LDR      r1,|L2.172|
000070  f7ffbffe          B.W      TEXT_SetText
                  |L2.116|
000074  f6401111          MOV      r1,#0x911             ;1054
000078  f7fffffe          BL       WM_GetDialogItem
00007c  7829              LDRB     r1,[r5,#0]            ;1055  ; bit
00007e  b121              CBZ      r1,|L2.138|
000080  7829              LDRB     r1,[r5,#0]            ;1057  ; bit
000082  1e49              SUBS     r1,r1,#1              ;1057
000084  7029              STRB     r1,[r5,#0]            ;1057
000086  7829              LDRB     r1,[r5,#0]            ;1058  ; bit
000088  547c              STRB     r4,[r7,r1]            ;1058
                  |L2.138|
00008a  7829              LDRB     r1,[r5,#0]            ;1060  ; bit
00008c  7832              LDRB     r2,[r6,#0]            ;1060  ; dot_flag
00008e  4291              CMP      r1,r2                 ;1060
000090  d100              BNE      |L2.148|
000092  7034              STRB     r4,[r6,#0]            ;1062
                  |L2.148|
000094  e8bd41f0          POP      {r4-r8,lr}            ;1064
000098  4904              LDR      r1,|L2.172|
00009a  f7ffbffe          B.W      TEXT_SetText
                  |L2.158|
;;;1081   		}break;
;;;1082   	}
;;;1083   }
00009e  e8bd81f0          POP      {r4-r8,pc}
;;;1084   
                          ENDP

0000a2  0000              DCW      0x0000
                  |L2.164|
                          DCD      set_sw
                  |L2.168|
                          DCD      ||.data||
                  |L2.172|
                          DCD      set_limit
                  |L2.176|
                          DCD      bit
                  |L2.180|
                          DCD      dot_flag

                          AREA ||i.INPUT_LOAD||, CODE, READONLY, ALIGN=2

                  INPUT_LOAD PROC
;;;1085   void INPUT_LOAD(char* num);            
;;;1086   void INPUT_LOAD(char* num){
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4681              MOV      r9,r0
;;;1087   	u8 i;    
;;;1088       switch(set_sw)
000006  484f              LDR      r0,|L3.324|
000008  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;1089       {
;;;1090           case set_25:
;;;1091           {
;;;1092               WM_HWIN hItem;
;;;1093    //           WM_InvalidateWindow(load_wind);
;;;1094               hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
00000a  484f              LDR      r0,|L3.328|
00000c  2400              MOVS     r4,#0
;;;1095   			if(bit < 6)
;;;1096   			{
;;;1097   				strcat(set_limit,num);
00000e  4d4f              LDR      r5,|L3.332|
000010  6840              LDR      r0,[r0,#4]            ;1094
;;;1098   				if(dot_flag != 0 && strcmp(num,".") == 0)
000012  f8df813c          LDR      r8,|L3.336|
000016  4f4f              LDR      r7,|L3.340|
000018  2918              CMP      r1,#0x18              ;1088
00001a  d01d              BEQ      |L3.88|
00001c  2943              CMP      r1,#0x43              ;1088
00001e  d04b              BEQ      |L3.184|
000020  2956              CMP      r1,#0x56              ;1088
000022  d17c              BNE      |L3.286|
;;;1099   				{
;;;1100   					
;;;1101   				}else{			
;;;1102   					
;;;1103   					if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1104   					{
;;;1105   						dot_flag = bit;
;;;1106   					}
;;;1107   					bit ++;
;;;1108   				}
;;;1109   			}else{
;;;1110   				bit = 0;
;;;1111   				for(i=0;i<6;i++)
;;;1112   				{
;;;1113   					set_limit[i] = '\0';
;;;1114   				}
;;;1115   			}
;;;1116   			
;;;1117   			TEXT_SetText(hItem,set_limit);
;;;1118   //            switch(bit){
;;;1119   //                case 1:
;;;1120   //                {
;;;1121   //					for(i=0;i<6;i++)
;;;1122   //					{
;;;1123   //						set_limit[i] = '\0';
;;;1124   //					}
;;;1125   //                    load_c = atoi(num) * 1000;
;;;1126   //                    strcat(set_limit,num);            
;;;1127   //                    TEXT_SetText(hItem,set_limit);
;;;1128   //                    
;;;1129   //                    bit = 2;
;;;1130   //                    break;
;;;1131   //                }
;;;1132   //                case 2:
;;;1133   //                {
;;;1134   //                    strcat(set_limit,num);            
;;;1135   //                    TEXT_SetText(hItem,set_limit);
;;;1136   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1137   //                    {
;;;1138   //                        dot_flag = 1;
;;;1139   //                    }else{
;;;1140   //                        load_c = load_c * 10 + atoi(num) * 1000;
;;;1141   //                    }
;;;1142   //                    bit = 3;
;;;1143   //                    break;
;;;1144   //                }
;;;1145   //                case 3:
;;;1146   //                {
;;;1147   //                    strcat(set_limit,num);
;;;1148   //                    TEXT_SetText(hItem,set_limit);
;;;1149   //                    if(dot_flag == 0)
;;;1150   //                    {
;;;1151   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1152   //                        {                            
;;;1153   //                            dot_flag = 2;
;;;1154   //                        }else{
;;;1155   //                            load_c = 0;
;;;1156   //                        }
;;;1157   //                    }else{
;;;1158   //                        load_c = load_c + atoi(num) * 100;
;;;1159   //                    }                  
;;;1160   //                    bit = 4;
;;;1161   //                    break;
;;;1162   //                }
;;;1163   //                case 4:
;;;1164   //                {
;;;1165   //                    strcat(set_limit,num);
;;;1166   //                    TEXT_SetText(hItem,set_limit);
;;;1167   //                    if(dot_flag == 0)
;;;1168   //                    {
;;;1169   //                        load_c = 0;
;;;1170   //                    }else if(dot_flag == 2){
;;;1171   //                        load_c = load_c + atoi(num) * 100;
;;;1172   //                    }else{
;;;1173   //                        load_c = load_c + atoi(num) * 10;
;;;1174   //                    }                  
;;;1175   //                    bit = 5;
;;;1176   //                    break;
;;;1177   //                }
;;;1178   //                case 5:
;;;1179   //                {
;;;1180   //                    strcat(set_limit,num);
;;;1181   //                    TEXT_SetText(hItem,set_limit);
;;;1182   //                    if(dot_flag == 0)
;;;1183   //                    {
;;;1184   //                        load_c = 0;
;;;1185   //                    }else if(dot_flag == 1){
;;;1186   //                        load_c = load_c + atoi(num);
;;;1187   //                    }else{
;;;1188   //                        load_c = load_c + atoi(num) * 10;
;;;1189   //                    }                 
;;;1190   //                    bit = 6;
;;;1191   //                    break;
;;;1192   //                }
;;;1193   //                case 6:
;;;1194   //                {
;;;1195   //                    strcat(set_limit,num);
;;;1196   //                    TEXT_SetText(hItem,set_limit);
;;;1197   //                    if(dot_flag == 0)
;;;1198   //                    {
;;;1199   //                        load_c = 0;
;;;1200   //                    }else if(dot_flag == 2){
;;;1201   //                        load_c = load_c + atoi(num);
;;;1202   //                    }                 
;;;1203   //                    bit = 0;
;;;1204   //                    break;
;;;1205   //                }
;;;1206   //            }
;;;1207               break;
;;;1208               
;;;1209           }
;;;1210           case set_68:
;;;1211           {
;;;1212               WM_HWIN hItem;
;;;1213    //           WM_InvalidateWindow(load_wind);
;;;1214               hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;1215   			if(bit < 6)
;;;1216   			{
;;;1217   				strcat(set_limit,num);
;;;1218   				if(dot_flag != 0 && strcmp(num,".") == 0)
;;;1219   				{
;;;1220   					
;;;1221   				}else{			
;;;1222   					
;;;1223   					if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1224   					{
;;;1225   						dot_flag = bit;
;;;1226   					}
;;;1227   					bit ++;
;;;1228   				}
;;;1229   			}else{
;;;1230   				bit = 0;
;;;1231   				for(i=0;i<6;i++)
;;;1232   				{
;;;1233   					set_limit[i] = '\0';
;;;1234   				}
;;;1235   			}
;;;1236   			
;;;1237   			TEXT_SetText(hItem,set_limit);
;;;1238   //            switch(bit){
;;;1239   //                case 1:
;;;1240   //                {
;;;1241   //					for(i=0;i<6;i++)
;;;1242   //					{
;;;1243   //						set_limit[i] = '\0';
;;;1244   //					}
;;;1245   //                    load_v = atoi(num) * 1000;
;;;1246   //                    strcat(set_limit,num);            
;;;1247   //                    TEXT_SetText(hItem,set_limit);
;;;1248   //                    
;;;1249   //                    bit = 2;
;;;1250   //                    break;
;;;1251   //                }
;;;1252   //                case 2:
;;;1253   //                {
;;;1254   //                    strcat(set_limit,num);            
;;;1255   //                    TEXT_SetText(hItem,set_limit);
;;;1256   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1257   //                    {
;;;1258   //                        dot_flag = 1;
;;;1259   //                    }else{
;;;1260   //                        load_v = load_v * 10 + atoi(num) * 1000;
;;;1261   //                    }
;;;1262   //                    bit = 3;
;;;1263   //                    break;
;;;1264   //                }
;;;1265   //                case 3:
;;;1266   //                {
;;;1267   //                    strcat(set_limit,num);
;;;1268   //                    TEXT_SetText(hItem,set_limit);
;;;1269   //                    if(dot_flag == 0)
;;;1270   //                    {
;;;1271   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1272   //                        {                            
;;;1273   //                            dot_flag = 2;
;;;1274   //                        }else{
;;;1275   //                            load_v = 0;
;;;1276   //                        }
;;;1277   //                    }else{
;;;1278   //                        load_v = load_v + atoi(num) * 100;
;;;1279   //                    }                  
;;;1280   //                    bit = 4;
;;;1281   //                    break;
;;;1282   //                }
;;;1283   //                case 4:
;;;1284   //                {
;;;1285   //                    strcat(set_limit,num);
;;;1286   //                    TEXT_SetText(hItem,set_limit);
;;;1287   //                    if(dot_flag == 0)
;;;1288   //                    {
;;;1289   //                        load_v = 0;
;;;1290   //                    }else if(dot_flag == 2){
;;;1291   //                        load_v = load_v + atoi(num) * 100;
;;;1292   //                    }else{
;;;1293   //                        load_v = load_v + atoi(num) * 10;
;;;1294   //                    }                  
;;;1295   //                    bit = 5;
;;;1296   //                    break;
;;;1297   //                }
;;;1298   //                case 5:
;;;1299   //                {
;;;1300   //                    strcat(set_limit,num);
;;;1301   //                    TEXT_SetText(hItem,set_limit);
;;;1302   //                    if(dot_flag == 0)
;;;1303   //                    {
;;;1304   //                        load_v = 0;
;;;1305   //                    }else if(dot_flag == 1){
;;;1306   //                        load_v = load_v + atoi(num);
;;;1307   //                    }else{
;;;1308   //                        load_v = load_v + atoi(num) * 10;
;;;1309   //                    }                 
;;;1310   //                    bit = 6;
;;;1311   //                    break;
;;;1312   //                }
;;;1313   //                case 6:
;;;1314   //                {
;;;1315   //                    strcat(set_limit,num);
;;;1316   //                    TEXT_SetText(hItem,set_limit);
;;;1317   //                    if(dot_flag == 0)
;;;1318   //                    {
;;;1319   //                        load_v = 0;
;;;1320   //                    }else if(dot_flag == 2){
;;;1321   //                        load_v = load_v + atoi(num);
;;;1322   //                    }                 
;;;1323   //                    bit = 0;
;;;1324   //                    break;
;;;1325   //                }
;;;1326   //            }
;;;1327               break;
;;;1328               
;;;1329           }
;;;1330   		case set_87:
;;;1331           {
;;;1332               WM_HWIN hItem;
;;;1333    //           WM_InvalidateWindow(load_wind);
;;;1334               hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000024  f640112d          MOV      r1,#0x92d
000028  f7fffffe          BL       WM_GetDialogItem
00002c  4604              MOV      r4,r0
;;;1335   			if(bit < 7)
00002e  7838              LDRB     r0,[r7,#0]  ; bit
000030  2807              CMP      r0,#7
000032  d203              BCS      |L3.60|
;;;1336   			{
;;;1337   				strcat(set_limit,num);
000034  4649              MOV      r1,r9
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       strcat
                  |L3.60|
;;;1338   			}
;;;1339   			if(dot_flag != 0 && strcmp(num,".") == 0)
00003c  f8980000          LDRB     r0,[r8,#0]  ; dot_flag
000040  b128              CBZ      r0,|L3.78|
000042  a145              ADR      r1,|L3.344|
000044  4648              MOV      r0,r9
000046  f7fffffe          BL       strcmp
00004a  2800              CMP      r0,#0
00004c  d072              BEQ      |L3.308|
                  |L3.78|
;;;1340   			{
;;;1341   				
;;;1342   			}else{			
;;;1343   				
;;;1344   				if(dot_flag == 0 && strcmp(num,".") == 0)
00004e  f8980000          LDRB     r0,[r8,#0]  ; dot_flag
000052  2800              CMP      r0,#0
000054  d060              BEQ      |L3.280|
000056  e06a              B        |L3.302|
                  |L3.88|
000058  f640016e          MOV      r1,#0x86e             ;1094
00005c  f7fffffe          BL       WM_GetDialogItem
000060  4606              MOV      r6,r0                 ;1094
000062  7838              LDRB     r0,[r7,#0]            ;1095  ; bit
000064  2806              CMP      r0,#6                 ;1095
000066  d21a              BCS      |L3.158|
000068  4649              MOV      r1,r9                 ;1097
00006a  4838              LDR      r0,|L3.332|
00006c  f7fffffe          BL       strcat
000070  f8980000          LDRB     r0,[r8,#0]            ;1098  ; dot_flag
000074  b120              CBZ      r0,|L3.128|
000076  a138              ADR      r1,|L3.344|
000078  4648              MOV      r0,r9                 ;1098
00007a  f7fffffe          BL       strcmp
00007e  b1a8              CBZ      r0,|L3.172|
                  |L3.128|
000080  f8980000          LDRB     r0,[r8,#0]            ;1103  ; dot_flag
000084  b938              CBNZ     r0,|L3.150|
000086  a134              ADR      r1,|L3.344|
000088  4648              MOV      r0,r9                 ;1103
00008a  f7fffffe          BL       strcmp
00008e  b910              CBNZ     r0,|L3.150|
000090  7838              LDRB     r0,[r7,#0]            ;1105  ; bit
000092  f8880000          STRB     r0,[r8,#0]            ;1105
                  |L3.150|
000096  7838              LDRB     r0,[r7,#0]            ;1107  ; bit
000098  1c40              ADDS     r0,r0,#1              ;1107
00009a  7038              STRB     r0,[r7,#0]            ;1107
00009c  e006              B        |L3.172|
                  |L3.158|
00009e  703c              STRB     r4,[r7,#0]            ;1110
0000a0  2000              MOVS     r0,#0                 ;1111
                  |L3.162|
0000a2  542c              STRB     r4,[r5,r0]            ;1113
0000a4  1c40              ADDS     r0,r0,#1              ;1111
0000a6  b2c0              UXTB     r0,r0                 ;1111
0000a8  2806              CMP      r0,#6                 ;1111
0000aa  d3fa              BCC      |L3.162|
                  |L3.172|
0000ac  4630              MOV      r0,r6                 ;1117
0000ae  e8bd47f0          POP      {r4-r10,lr}           ;1117
0000b2  4926              LDR      r1,|L3.332|
0000b4  f7ffbffe          B.W      TEXT_SetText
                  |L3.184|
0000b8  f6401111          MOV      r1,#0x911             ;1214
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4606              MOV      r6,r0                 ;1214
0000c2  7838              LDRB     r0,[r7,#0]            ;1215  ; bit
0000c4  2806              CMP      r0,#6                 ;1215
0000c6  d21a              BCS      |L3.254|
0000c8  4649              MOV      r1,r9                 ;1217
0000ca  4820              LDR      r0,|L3.332|
0000cc  f7fffffe          BL       strcat
0000d0  f8980000          LDRB     r0,[r8,#0]            ;1218  ; dot_flag
0000d4  b120              CBZ      r0,|L3.224|
0000d6  a120              ADR      r1,|L3.344|
0000d8  4648              MOV      r0,r9                 ;1218
0000da  f7fffffe          BL       strcmp
0000de  b1a8              CBZ      r0,|L3.268|
                  |L3.224|
0000e0  f8980000          LDRB     r0,[r8,#0]            ;1223  ; dot_flag
0000e4  b938              CBNZ     r0,|L3.246|
0000e6  a11c              ADR      r1,|L3.344|
0000e8  4648              MOV      r0,r9                 ;1223
0000ea  f7fffffe          BL       strcmp
0000ee  b910              CBNZ     r0,|L3.246|
0000f0  7838              LDRB     r0,[r7,#0]            ;1225  ; bit
0000f2  f8880000          STRB     r0,[r8,#0]            ;1225
                  |L3.246|
0000f6  7838              LDRB     r0,[r7,#0]            ;1227  ; bit
0000f8  1c40              ADDS     r0,r0,#1              ;1227
0000fa  7038              STRB     r0,[r7,#0]            ;1227
0000fc  e006              B        |L3.268|
                  |L3.254|
0000fe  703c              STRB     r4,[r7,#0]            ;1230
000100  2000              MOVS     r0,#0                 ;1231
                  |L3.258|
000102  542c              STRB     r4,[r5,r0]            ;1233
000104  1c40              ADDS     r0,r0,#1              ;1231
000106  b2c0              UXTB     r0,r0                 ;1231
000108  2806              CMP      r0,#6                 ;1231
00010a  d3fa              BCC      |L3.258|
                  |L3.268|
00010c  4630              MOV      r0,r6                 ;1237
00010e  e8bd47f0          POP      {r4-r10,lr}           ;1237
000112  490e              LDR      r1,|L3.332|
000114  f7ffbffe          B.W      TEXT_SetText
                  |L3.280|
000118  a10f              ADR      r1,|L3.344|
00011a  4648              MOV      r0,r9
00011c  e001              B        |L3.290|
                  |L3.286|
00011e  e00f              B        |L3.320|
000120  e008              B        |L3.308|
                  |L3.290|
000122  f7fffffe          BL       strcmp
000126  b910              CBNZ     r0,|L3.302|
;;;1345   				{
;;;1346   					dot_flag = bit;
000128  7838              LDRB     r0,[r7,#0]  ; bit
00012a  f8880000          STRB     r0,[r8,#0]
                  |L3.302|
;;;1347   				}
;;;1348   				bit ++;
00012e  7838              LDRB     r0,[r7,#0]  ; bit
000130  1c40              ADDS     r0,r0,#1
000132  7038              STRB     r0,[r7,#0]
                  |L3.308|
;;;1349   			}
;;;1350   			TEXT_SetText(hItem,set_limit);
000134  4620              MOV      r0,r4
000136  e8bd47f0          POP      {r4-r10,lr}
00013a  4904              LDR      r1,|L3.332|
00013c  f7ffbffe          B.W      TEXT_SetText
                  |L3.320|
;;;1351   //            switch(bit){
;;;1352   //                case 1:
;;;1353   //                {
;;;1354   //					for(i=0;i<6;i++)
;;;1355   //					{
;;;1356   //						set_limit[i] = '\0';
;;;1357   //					}
;;;1358   //                    set_load_cutoffv = atoi(num) * 1000;
;;;1359   //                    strcat(set_limit,num);            
;;;1360   //                    TEXT_SetText(hItem,set_limit);
;;;1361   //                    
;;;1362   //                    bit = 2;
;;;1363   //                    break;
;;;1364   //                }
;;;1365   //                case 2:
;;;1366   //                {
;;;1367   //                    strcat(set_limit,num);            
;;;1368   //                    TEXT_SetText(hItem,set_limit);
;;;1369   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1370   //                    {
;;;1371   //                        dot_flag = 1;
;;;1372   //                    }else{
;;;1373   //                        set_load_cutoffv = set_load_cutoffv * 10 + atoi(num) * 1000;
;;;1374   //                    }
;;;1375   //                    bit = 3;
;;;1376   //                    break;
;;;1377   //                }
;;;1378   //                case 3:
;;;1379   //                {
;;;1380   //                    strcat(set_limit,num);
;;;1381   //                    TEXT_SetText(hItem,set_limit);
;;;1382   //                    if(dot_flag == 0)
;;;1383   //                    {
;;;1384   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1385   //                        {                            
;;;1386   //                            dot_flag = 2;
;;;1387   //                        }else{
;;;1388   //                            set_load_cutoffv = 0;
;;;1389   //                        }
;;;1390   //                    }else{
;;;1391   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 100;
;;;1392   //                    }                  
;;;1393   //                    bit = 4;
;;;1394   //                    break;
;;;1395   //                }
;;;1396   //                case 4:
;;;1397   //                {
;;;1398   //                    strcat(set_limit,num);
;;;1399   //                    TEXT_SetText(hItem,set_limit);
;;;1400   //                    if(dot_flag == 0)
;;;1401   //                    {
;;;1402   //                        set_load_cutoffv = 0;
;;;1403   //                    }else if(dot_flag == 2){
;;;1404   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 100;
;;;1405   //                    }else{
;;;1406   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 10;
;;;1407   //                    }                  
;;;1408   //                    bit = 5;
;;;1409   //                    break;
;;;1410   //                }
;;;1411   //                case 5:
;;;1412   //                {
;;;1413   //                    strcat(set_limit,num);
;;;1414   //                    TEXT_SetText(hItem,set_limit);
;;;1415   //                    if(dot_flag == 0)
;;;1416   //                    {
;;;1417   //                        set_load_cutoffv = 0;
;;;1418   //                    }else if(dot_flag == 1){
;;;1419   //                        set_load_cutoffv = set_load_cutoffv + atoi(num);
;;;1420   //                    }else{
;;;1421   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 10;
;;;1422   //                    }                 
;;;1423   //                    bit = 6;
;;;1424   //                    break;
;;;1425   //                }
;;;1426   //                case 6:
;;;1427   //                {
;;;1428   //                    strcat(set_limit,num);
;;;1429   //                    TEXT_SetText(hItem,set_limit);
;;;1430   //                    if(dot_flag == 0)
;;;1431   //                    {
;;;1432   //                        set_load_cutoffv = 0;
;;;1433   //                    }else if(dot_flag == 2){
;;;1434   //                        set_load_cutoffv = set_load_cutoffv + atoi(num);
;;;1435   //                    }                 
;;;1436   //                    bit = 0;
;;;1437   //                    break;
;;;1438   //                }
;;;1439   //            }
;;;1440               break;
;;;1441               
;;;1442           }
;;;1443           default:break;
;;;1444       }
;;;1445   }
000140  e8bd87f0          POP      {r4-r10,pc}
;;;1446   
                          ENDP

                  |L3.324|
                          DCD      set_sw
                  |L3.328|
                          DCD      ||.data||
                  |L3.332|
                          DCD      set_limit
                  |L3.336|
                          DCD      dot_flag
                  |L3.340|
                          DCD      bit
                  |L3.344|
000158  2e00              DCB      ".",0
00015a  00                DCB      0
00015b  00                DCB      0

                          AREA ||i.LOAD_OP_DOWN||, CODE, READONLY, ALIGN=2

                  LOAD_OP_DOWN PROC
;;;735    void LOAD_OP_DOWN(void);
;;;736    void LOAD_OP_DOWN(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;737    {
;;;738        switch(set_sw)
000004  4d34              LDR      r5,|L4.216|
000006  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;739        {
;;;740            case set_24:
;;;741            {
;;;742                WM_HWIN hItem;
;;;743                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
000008  4c34              LDR      r4,|L4.220|
;;;744                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00000a  f06f4670          MVN      r6,#0xf0000000
;;;745                TEXT_SetTextColor(hItem, GUI_WHITE);
00000e  1137              ASRS     r7,r6,#4
;;;746                
;;;747                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;748                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000010  f8df90cc          LDR      r9,|L4.224|
000014  6860              LDR      r0,[r4,#4]            ;738
000016  f44f6811          MOV      r8,#0x910             ;747
00001a  2917              CMP      r1,#0x17              ;738
00001c  d023              BEQ      |L4.102|
;;;749                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;750    
;;;751                set_sw = set_66;
;;;752                break;
;;;753            }
;;;754            case set_66:
;;;755            {
;;;756                WM_HWIN hItem;
;;;757                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;758                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;759                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;760                
;;;761                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
00001e  f6401a0e          MOV      r10,#0x90e
000022  2941              CMP      r1,#0x41              ;738
000024  d03c              BEQ      |L4.160|
000026  2942              CMP      r1,#0x42              ;738
000028  d11b              BNE      |L4.98|
;;;762                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;763                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;764    
;;;765                set_sw = set_67;
;;;766                break;
;;;767            }
;;;768    		 case set_67:
;;;769            {
;;;770                WM_HWIN hItem;
;;;771                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
00002a  4651              MOV      r1,r10
00002c  f7fffffe          BL       WM_GetDialogItem
000030  4680              MOV      r8,r0
;;;772                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
000032  4631              MOV      r1,r6
000034  4640              MOV      r0,r8
000036  f7fffffe          BL       TEXT_SetBkColor
;;;773                TEXT_SetTextColor(hItem, GUI_WHITE);
00003a  4639              MOV      r1,r7
00003c  4640              MOV      r0,r8
00003e  f7fffffe          BL       TEXT_SetTextColor
;;;774                
;;;775                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000042  f6401139          MOV      r1,#0x939
000046  6860              LDR      r0,[r4,#4]  ; load_wind
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4604              MOV      r4,r0
;;;776                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00004e  4649              MOV      r1,r9
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TEXT_SetBkColor
;;;777                TEXT_SetTextColor(hItem, GUI_BLACK);
000056  2100              MOVS     r1,#0
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       TEXT_SetTextColor
;;;778    
;;;779                set_sw = set_86;
00005e  2055              MOVS     r0,#0x55
000060  7028              STRB     r0,[r5,#0]
                  |L4.98|
;;;780                break;
;;;781            }
;;;782        }   
;;;783    }
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L4.102|
000066  f640016d          MOV      r1,#0x86d             ;743
00006a  f7fffffe          BL       WM_GetDialogItem
00006e  4682              MOV      r10,r0                ;743
000070  4631              MOV      r1,r6                 ;744
000072  4650              MOV      r0,r10                ;744
000074  f7fffffe          BL       TEXT_SetBkColor
000078  4639              MOV      r1,r7                 ;745
00007a  4650              MOV      r0,r10                ;745
00007c  f7fffffe          BL       TEXT_SetTextColor
000080  4641              MOV      r1,r8                 ;747
000082  6860              LDR      r0,[r4,#4]            ;747  ; load_wind
000084  f7fffffe          BL       WM_GetDialogItem
000088  4604              MOV      r4,r0                 ;747
00008a  4649              MOV      r1,r9                 ;748
00008c  4620              MOV      r0,r4                 ;748
00008e  f7fffffe          BL       TEXT_SetBkColor
000092  2100              MOVS     r1,#0                 ;749
000094  4620              MOV      r0,r4                 ;749
000096  f7fffffe          BL       TEXT_SetTextColor
00009a  2041              MOVS     r0,#0x41              ;751
00009c  7028              STRB     r0,[r5,#0]            ;751
00009e  e7e0              B        |L4.98|
                  |L4.160|
0000a0  4641              MOV      r1,r8                 ;757
0000a2  f7fffffe          BL       WM_GetDialogItem
0000a6  4680              MOV      r8,r0                 ;757
0000a8  4631              MOV      r1,r6                 ;758
0000aa  4640              MOV      r0,r8                 ;758
0000ac  f7fffffe          BL       TEXT_SetBkColor
0000b0  4639              MOV      r1,r7                 ;759
0000b2  4640              MOV      r0,r8                 ;759
0000b4  f7fffffe          BL       TEXT_SetTextColor
0000b8  4651              MOV      r1,r10                ;761
0000ba  6860              LDR      r0,[r4,#4]            ;761  ; load_wind
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4604              MOV      r4,r0                 ;761
0000c2  4649              MOV      r1,r9                 ;762
0000c4  4620              MOV      r0,r4                 ;762
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  2100              MOVS     r1,#0                 ;763
0000cc  4620              MOV      r0,r4                 ;763
0000ce  f7fffffe          BL       TEXT_SetTextColor
0000d2  2042              MOVS     r0,#0x42              ;765
0000d4  7028              STRB     r0,[r5,#0]            ;765
0000d6  e7c4              B        |L4.98|
;;;784    
                          ENDP

                  |L4.216|
                          DCD      set_sw
                  |L4.220|
                          DCD      ||.data||
                  |L4.224|
                          DCD      0x00bfffff

                          AREA ||i.LOAD_OP_UP||, CODE, READONLY, ALIGN=2

                  LOAD_OP_UP PROC
;;;785    void LOAD_OP_UP(void);
;;;786    void LOAD_OP_UP(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;787    {
;;;788        switch(set_sw)
000004  4d34              LDR      r5,|L5.216|
000006  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;789        {
;;;790            case set_66:
;;;791            {
;;;792                WM_HWIN hItem;
;;;793                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
000008  4c34              LDR      r4,|L5.220|
;;;794                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;795                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;796                
;;;797                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;798                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00000a  f8dfa0d4          LDR      r10,|L5.224|
00000e  f44f6611          MOV      r6,#0x910             ;793
000012  6860              LDR      r0,[r4,#4]            ;788
000014  f06f4870          MVN      r8,#0xf0000000        ;794
000018  f06f497f          MVN      r9,#0xff000000        ;795
00001c  2941              CMP      r1,#0x41              ;788
00001e  d022              BEQ      |L5.102|
;;;799                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;800    
;;;801                set_sw = set_24;
;;;802                break;
;;;803            }
;;;804            case set_67:
;;;805            {
;;;806                WM_HWIN hItem;
;;;807                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
000020  1eb7              SUBS     r7,r6,#2
000022  2942              CMP      r1,#0x42              ;788
000024  d03c              BEQ      |L5.160|
000026  2955              CMP      r1,#0x55              ;788
000028  d11b              BNE      |L5.98|
;;;808                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;809                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;810                
;;;811                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;812                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;813                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;814    
;;;815                set_sw = set_66;
;;;816                break;
;;;817            }
;;;818    		case set_86:
;;;819            {
;;;820                WM_HWIN hItem;
;;;821                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
00002a  f6401139          MOV      r1,#0x939
00002e  f7fffffe          BL       WM_GetDialogItem
000032  4606              MOV      r6,r0
;;;822                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
000034  4641              MOV      r1,r8
000036  4630              MOV      r0,r6
000038  f7fffffe          BL       TEXT_SetBkColor
;;;823                TEXT_SetTextColor(hItem, GUI_WHITE);
00003c  4649              MOV      r1,r9
00003e  4630              MOV      r0,r6
000040  f7fffffe          BL       TEXT_SetTextColor
;;;824                
;;;825                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
000044  4639              MOV      r1,r7
000046  6860              LDR      r0,[r4,#4]  ; load_wind
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4604              MOV      r4,r0
;;;826                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00004e  4651              MOV      r1,r10
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TEXT_SetBkColor
;;;827                TEXT_SetTextColor(hItem, GUI_BLACK);
000056  2100              MOVS     r1,#0
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       TEXT_SetTextColor
;;;828    
;;;829                set_sw = set_67;
00005e  2042              MOVS     r0,#0x42
000060  7028              STRB     r0,[r5,#0]
                  |L5.98|
;;;830                break;
;;;831            }
;;;832        }   
;;;833    }
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L5.102|
000066  4631              MOV      r1,r6                 ;793
000068  f7fffffe          BL       WM_GetDialogItem
00006c  4606              MOV      r6,r0                 ;793
00006e  4641              MOV      r1,r8                 ;794
000070  4630              MOV      r0,r6                 ;794
000072  f7fffffe          BL       TEXT_SetBkColor
000076  4649              MOV      r1,r9                 ;795
000078  4630              MOV      r0,r6                 ;795
00007a  f7fffffe          BL       TEXT_SetTextColor
00007e  f640016d          MOV      r1,#0x86d             ;797
000082  6860              LDR      r0,[r4,#4]            ;797  ; load_wind
000084  f7fffffe          BL       WM_GetDialogItem
000088  4604              MOV      r4,r0                 ;797
00008a  4651              MOV      r1,r10                ;798
00008c  4620              MOV      r0,r4                 ;798
00008e  f7fffffe          BL       TEXT_SetBkColor
000092  2100              MOVS     r1,#0                 ;799
000094  4620              MOV      r0,r4                 ;799
000096  f7fffffe          BL       TEXT_SetTextColor
00009a  2017              MOVS     r0,#0x17              ;801
00009c  7028              STRB     r0,[r5,#0]            ;801
00009e  e7e0              B        |L5.98|
                  |L5.160|
0000a0  4639              MOV      r1,r7                 ;807
0000a2  f7fffffe          BL       WM_GetDialogItem
0000a6  4607              MOV      r7,r0                 ;807
0000a8  4641              MOV      r1,r8                 ;808
0000aa  4638              MOV      r0,r7                 ;808
0000ac  f7fffffe          BL       TEXT_SetBkColor
0000b0  4649              MOV      r1,r9                 ;809
0000b2  4638              MOV      r0,r7                 ;809
0000b4  f7fffffe          BL       TEXT_SetTextColor
0000b8  4631              MOV      r1,r6                 ;811
0000ba  6860              LDR      r0,[r4,#4]            ;811  ; load_wind
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4604              MOV      r4,r0                 ;811
0000c2  4651              MOV      r1,r10                ;812
0000c4  4620              MOV      r0,r4                 ;812
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  2100              MOVS     r1,#0                 ;813
0000cc  4620              MOV      r0,r4                 ;813
0000ce  f7fffffe          BL       TEXT_SetTextColor
0000d2  2041              MOVS     r0,#0x41              ;815
0000d4  7028              STRB     r0,[r5,#0]            ;815
0000d6  e7c4              B        |L5.98|
;;;834    
                          ENDP

                  |L5.216|
                          DCD      set_sw
                  |L5.220|
                          DCD      ||.data||
                  |L5.224|
                          DCD      0x00bfffff

                          AREA ||i.LOAD_SET||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  LOAD_SET PROC
;;;836    void LOAD_SET(void);
;;;837    void LOAD_SET(void) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b083              SUB      sp,sp,#0xc
;;;838        char    buf[6];
;;;839        float   dis_load_c;
;;;840        float   dis_load_v;
;;;841        vu8 i;
;;;842        switch(set_sw)
00000a  4dfd              LDR      r5,|L6.1024|
00000c  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;843        {
;;;844            case set_24:
;;;845            {
;;;846                WM_HWIN hItem;
;;;847    //            WM_InvalidateWindow(load_wind);
;;;848                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;849                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;850                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;851                       
;;;852                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;853                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;854                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;855                for(i=0;i<6;i++)
;;;856                {
;;;857                    set_limit[i] = '\0';
;;;858                }
;;;859                set_sw = set_25;
;;;860                break;
;;;861            }
;;;862            case set_25:
;;;863            {
;;;864                WM_HWIN hItem;
;;;865    //            WM_InvalidateWindow(lo\\JK_BTSET\../drive/AD7689.c\AD7689_Bufferad_wind);
;;;866                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;867                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;868                TEXT_SetTextColor(hItem, GUI_WHITE);  
;;;869    			if(dot_flag == 0){
;;;870    				load_c = atoi(set_limit)*1000;					
;;;871    			}else if(dot_flag != 0){
;;;872    				memset(buf, '\0', sizeof(buf));
;;;873    				strncpy(buf,set_limit,dot_flag + 4);
;;;874    				load_c = atof(buf)*1000;
00000e  ed9f8bfd          VLDR     d8,|L6.1028|
;;;875    			}
;;;876    			if(load_c > 30000 || (float)load_c/1000 * DISS_Voltage > 200){
000012  f8df93f8          LDR      r9,|L6.1036|
;;;877                    load_c = 0;
;;;878                }
;;;879    //			if(load_c > 2500)
;;;880    //			{
;;;881    //				C_SW(1);
;;;882    //			}else{
;;;883    //				C_SW(0);
;;;884    //			}
;;;885                SET_Current_Laod = load_c;            
;;;886    //            if(load_c > 3000)
;;;887    //			{
;;;888    //				C_SW(1);
;;;889    //			}else{
;;;890    //				C_SW(0);
;;;891    //			}
;;;892                dis_load_c = (float)SET_Current_Laod/1000;
;;;893                sprintf(buf,"%.3f",dis_load_c);
;;;894                TEXT_SetText(hItem,buf);
;;;895                
;;;896                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;897                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;898                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;899                Write_Limits();
;;;900                
;;;901                set_sw = set_24;
;;;902                bit = 0;
000016  f8df83f8          LDR      r8,|L6.1040|
00001a  4afe              LDR      r2,|L6.1044|
00001c  ed9f9afe          VLDR     s18,|L6.1048|
000020  4efe              LDR      r6,|L6.1052|
000022  f8dfb3fc          LDR      r11,|L6.1056|
000026  2400              MOVS     r4,#0                 ;857
000028  4ffe              LDR      r7,|L6.1060|
00002a  6850              LDR      r0,[r2,#4]            ;842
00002c  2942              CMP      r1,#0x42              ;842
00002e  d07c              BEQ      |L6.298|
000030  dc27              BGT      |L6.130|
000032  f6400a6e          MOV      r10,#0x86e            ;852
000036  2917              CMP      r1,#0x17              ;842
000038  d078              BEQ      |L6.300|
00003a  2918              CMP      r1,#0x18              ;842
00003c  d077              BEQ      |L6.302|
00003e  2941              CMP      r1,#0x41              ;842
000040  d176              BNE      |L6.304|
;;;903                dot_flag = 0;
;;;904                break;
;;;905            }
;;;906            case set_66:
;;;907            {
;;;908                WM_HWIN hItem;
;;;909    //            WM_InvalidateWindow(load_wind);
;;;910                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
000042  f44f6111          MOV      r1,#0x910
000046  4616              MOV      r6,r2
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4607              MOV      r7,r0
;;;911                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00004e  f06f4170          MVN      r1,#0xf0000000
000052  4638              MOV      r0,r7
000054  f7fffffe          BL       TEXT_SetBkColor
;;;912                TEXT_SetTextColor(hItem, GUI_WHITE);
000058  f06f417f          MVN      r1,#0xff000000
00005c  4638              MOV      r0,r7
00005e  f7fffffe          BL       TEXT_SetTextColor
;;;913                       
;;;914                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
000062  f6401111          MOV      r1,#0x911
000066  6870              LDR      r0,[r6,#4]  ; load_wind
000068  f7fffffe          BL       WM_GetDialogItem
00006c  4606              MOV      r6,r0
;;;915                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00006e  49ee              LDR      r1,|L6.1064|
000070  4630              MOV      r0,r6
000072  f7fffffe          BL       TEXT_SetBkColor
;;;916                TEXT_SetTextColor(hItem, GUI_BLACK);
000076  2100              MOVS     r1,#0
000078  4630              MOV      r0,r6
00007a  f7fffffe          BL       TEXT_SetTextColor
;;;917                for(i=0;i<6;i++)
00007e  9400              STR      r4,[sp,#0]
000080  e123              B        |L6.714|
                  |L6.130|
000082  2943              CMP      r1,#0x43              ;842
000084  d07d              BEQ      |L6.386|
;;;918                {
;;;919                    set_limit[i] = '\0';
;;;920                }
;;;921                set_sw = set_68;
;;;922                break;
;;;923            }
;;;924            case set_68:
;;;925            {
;;;926                WM_HWIN hItem;
;;;927                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;928                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;929                TEXT_SetTextColor(hItem, GUI_WHITE); 
;;;930    			if(dot_flag == 0){
;;;931    				load_v = atoi(set_limit)*1000;					
;;;932    			}else if(dot_flag != 0){
;;;933    				memset(buf, '\0', sizeof(buf));
;;;934    				strncpy(buf,set_limit,dot_flag + 4);
;;;935    				load_v = atof(buf)*1000;
;;;936    			}
;;;937    			if(load_v > 80000 || (float)load_v/1000 * DISS_Current > 200){
;;;938                    load_v = 0;
;;;939                }
;;;940                SET_Voltage_Laod = load_v;          
;;;941                
;;;942                dis_load_v = (float)SET_Voltage_Laod/1000;
;;;943                sprintf(buf,"%.3f",dis_load_v);
;;;944                TEXT_SetText(hItem,buf);
;;;945                
;;;946                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;947                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;948                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;949                Write_Limits();
;;;950                
;;;951                set_sw = set_66;
;;;952                bit = 0;
;;;953                dot_flag = 0;
;;;954                break;
;;;955            }
;;;956            case set_67:
;;;957            {
;;;958                switch(flag_Load_CC)
;;;959                {
;;;960                    case 1:
;;;961                    {
;;;962                        WM_HWIN hItem;
;;;963                        hItem = WM_GetDialogItem(load_wind, ID_TEXT_121);
;;;964                        TEXT_SetText(hItem,"CV");
;;;965    					flag_Load_CC = 0;
;;;966                        GPIO_ResetBits(GPIOC,GPIO_Pin_10);//CV                  
;;;967                        load_mode = 0;
;;;968                        Write_LOAD();
;;;969                        break;
;;;970                    }
;;;971                    case 0:
;;;972                    {
;;;973                         WM_HWIN hItem;
;;;974                         hItem = WM_GetDialogItem(load_wind, ID_TEXT_121);
;;;975                         TEXT_SetText(hItem,"CC");
;;;976    					 flag_Load_CC = 1;
;;;977                         GPIO_SetBits(GPIOC,GPIO_Pin_10);//CC                   
;;;978                         load_mode =1;
;;;979                         Write_LOAD();
;;;980                         break;
;;;981                    }
;;;982                }   
;;;983            }break;
;;;984    		case set_86:
;;;985            {
;;;986                WM_HWIN hItem;
;;;987    //            WM_InvalidateWindow(load_wind);
;;;988                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000086  f6401939          MOV      r9,#0x939
;;;989                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;990                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;991                       
;;;992                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
00008a  f640162d          MOV      r6,#0x92d
00008e  2955              CMP      r1,#0x55              ;842
000090  d078              BEQ      |L6.388|
000092  2956              CMP      r1,#0x56              ;842
000094  d15d              BNE      |L6.338|
;;;993                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;994                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;995                for(i=0;i<6;i++)
;;;996                {
;;;997                    set_limit[i] = '\0';
;;;998                }
;;;999                set_sw = set_87;
;;;1000               break;
;;;1001           }
;;;1002           case set_87:
;;;1003           {
;;;1004               WM_HWIN hItem;
;;;1005               hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000096  4631              MOV      r1,r6
000098  4692              MOV      r10,r2
00009a  f7fffffe          BL       WM_GetDialogItem
00009e  4683              MOV      r11,r0
;;;1006               TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
0000a0  f06f4170          MVN      r1,#0xf0000000
0000a4  4658              MOV      r0,r11
0000a6  f7fffffe          BL       TEXT_SetBkColor
;;;1007               TEXT_SetTextColor(hItem, GUI_WHITE); 
0000aa  f06f417f          MVN      r1,#0xff000000
0000ae  4658              MOV      r0,r11
0000b0  f7fffffe          BL       TEXT_SetTextColor
;;;1008   			if(dot_flag == 0){
0000b4  7838              LDRB     r0,[r7,#0]  ; dot_flag
;;;1009   				set_load_cutoffv = atoi(set_limit)*1000;					
0000b6  4edd              LDR      r6,|L6.1068|
0000b8  2800              CMP      r0,#0                 ;1008
0000ba  d071              BEQ      |L6.416|
;;;1010   			}else if(dot_flag != 0){
0000bc  7838              LDRB     r0,[r7,#0]  ; dot_flag
0000be  b198              CBZ      r0,|L6.232|
;;;1011   				memset(buf, '\0', sizeof(buf));
0000c0  9401              STR      r4,[sp,#4]
0000c2  9402              STR      r4,[sp,#8]
;;;1012   				strncpy(buf,set_limit,dot_flag + 4);
0000c4  783a              LDRB     r2,[r7,#0]  ; dot_flag
0000c6  49d6              LDR      r1,|L6.1056|
0000c8  1d12              ADDS     r2,r2,#4
0000ca  a801              ADD      r0,sp,#4
0000cc  f7fffffe          BL       strncpy
;;;1013   				set_load_cutoffv = atof(buf)*1000;
0000d0  a801              ADD      r0,sp,#4
0000d2  f7fffffe          BL       __hardfp_atof
0000d6  ec532b18          VMOV     r2,r3,d8
0000da  ec510b10          VMOV     r0,r1,d0
0000de  f7fffffe          BL       __aeabi_dmul
0000e2  f7fffffe          BL       __aeabi_d2iz
0000e6  6130              STR      r0,[r6,#0x10]  ; InFlashSave
                  |L6.232|
;;;1014   			}
;;;1015               load_cutoffv = (float)set_load_cutoffv/1000;
0000e8  ed960a04          VLDR     s0,[r6,#0x10]
0000ec  eef80ac0          VCVT.F32.S32 s1,s0
0000f0  ee800a89          VDIV.F32 s0,s1,s18
0000f4  ed8a0a02          VSTR     s0,[r10,#8]
;;;1016               sprintf(buf,"%.3f",load_cutoffv);
0000f8  ee100a10          VMOV     r0,s0
0000fc  f7fffffe          BL       __aeabi_f2d
000100  ec410b10          VMOV     d0,r0,r1
000104  a1ca              ADR      r1,|L6.1072|
000106  ec532b10          VMOV     r2,r3,d0
00010a  a801              ADD      r0,sp,#4
00010c  f7fffffe          BL       __2sprintf
;;;1017               TEXT_SetText(hItem,buf);
000110  a901              ADD      r1,sp,#4
000112  4658              MOV      r0,r11
000114  f7fffffe          BL       TEXT_SetText
;;;1018               
;;;1019               hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000118  4649              MOV      r1,r9
00011a  f8da0004          LDR      r0,[r10,#4]  ; load_wind
00011e  f7fffffe          BL       WM_GetDialogItem
000122  4606              MOV      r6,r0
;;;1020               TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000124  49c0              LDR      r1,|L6.1064|
000126  4630              MOV      r0,r6
000128  e003              B        |L6.306|
                  |L6.298|
00012a  e152              B        |L6.978|
                  |L6.300|
00012c  e016              B        |L6.348|
                  |L6.302|
00012e  e047              B        |L6.448|
                  |L6.304|
000130  e00f              B        |L6.338|
                  |L6.306|
000132  f7fffffe          BL       TEXT_SetBkColor
;;;1021               TEXT_SetTextColor(hItem, GUI_BLACK);
000136  2100              MOVS     r1,#0
000138  4630              MOV      r0,r6
00013a  f7fffffe          BL       TEXT_SetTextColor
;;;1022               Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
00013e  4abb              LDR      r2,|L6.1068|
000140  2128              MOVS     r1,#0x28
000142  48bd              LDR      r0,|L6.1080|
000144  f7fffffe          BL       Flash_Write32BitDatas
;;;1023               
;;;1024               set_sw = set_86;
000148  2055              MOVS     r0,#0x55
00014a  7028              STRB     r0,[r5,#0]
;;;1025               bit = 0;
00014c  f8884000          STRB     r4,[r8,#0]
;;;1026               dot_flag = 0;
000150  703c              STRB     r4,[r7,#0]
                  |L6.338|
;;;1027               break;
;;;1028           }
;;;1029       }
;;;1030   }
000152  b003              ADD      sp,sp,#0xc
000154  ecbd8b04          VPOP     {d8-d9}
000158  e8bd8ff0          POP      {r4-r11,pc}
                  |L6.348|
00015c  f640016d          MOV      r1,#0x86d             ;848
000160  4616              MOV      r6,r2                 ;848
000162  f7fffffe          BL       WM_GetDialogItem
000166  4607              MOV      r7,r0                 ;848
000168  f06f4170          MVN      r1,#0xf0000000        ;849
00016c  4638              MOV      r0,r7                 ;849
00016e  f7fffffe          BL       TEXT_SetBkColor
000172  f06f417f          MVN      r1,#0xff000000        ;850
000176  4638              MOV      r0,r7                 ;850
000178  f7fffffe          BL       TEXT_SetTextColor
00017c  4651              MOV      r1,r10                ;852
00017e  6870              LDR      r0,[r6,#4]            ;852  ; load_wind
000180  e001              B        |L6.390|
                  |L6.386|
000182  e0a9              B        |L6.728|
                  |L6.388|
000184  e183              B        |L6.1166|
                  |L6.390|
000186  f7fffffe          BL       WM_GetDialogItem
00018a  4606              MOV      r6,r0                 ;852
00018c  49a6              LDR      r1,|L6.1064|
00018e  4630              MOV      r0,r6                 ;853
000190  f7fffffe          BL       TEXT_SetBkColor
000194  2100              MOVS     r1,#0                 ;854
000196  4630              MOV      r0,r6                 ;854
000198  f7fffffe          BL       TEXT_SetTextColor
00019c  9400              STR      r4,[sp,#0]            ;855
00019e  e008              B        |L6.434|
                  |L6.416|
0001a0  e1a2              B        |L6.1256|
                  |L6.418|
0001a2  f89d0000          LDRB     r0,[sp,#0]            ;857
0001a6  f80b4000          STRB     r4,[r11,r0]           ;857
0001aa  f89d0000          LDRB     r0,[sp,#0]            ;855
0001ae  1c40              ADDS     r0,r0,#1              ;855
0001b0  9000              STR      r0,[sp,#0]            ;855
                  |L6.434|
0001b2  f89d0000          LDRB     r0,[sp,#0]            ;855
0001b6  2806              CMP      r0,#6                 ;855
0001b8  d3f3              BCC      |L6.418|
0001ba  2018              MOVS     r0,#0x18              ;859
0001bc  7028              STRB     r0,[r5,#0]            ;859
0001be  e7c8              B        |L6.338|
                  |L6.448|
0001c0  4651              MOV      r1,r10                ;866
0001c2  4692              MOV      r10,r2                ;866
0001c4  f7fffffe          BL       WM_GetDialogItem
0001c8  4683              MOV      r11,r0                ;866
0001ca  f06f4170          MVN      r1,#0xf0000000        ;867
0001ce  4658              MOV      r0,r11                ;867
0001d0  f7fffffe          BL       TEXT_SetBkColor
0001d4  f06f417f          MVN      r1,#0xff000000        ;868
0001d8  4658              MOV      r0,r11                ;868
0001da  f7fffffe          BL       TEXT_SetTextColor
0001de  7838              LDRB     r0,[r7,#0]            ;869  ; dot_flag
0001e0  b3f0              CBZ      r0,|L6.608|
0001e2  7838              LDRB     r0,[r7,#0]            ;871  ; dot_flag
0001e4  b1a0              CBZ      r0,|L6.528|
0001e6  9401              STR      r4,[sp,#4]            ;872
0001e8  9402              STR      r4,[sp,#8]            ;872
0001ea  783a              LDRB     r2,[r7,#0]            ;873  ; dot_flag
0001ec  498c              LDR      r1,|L6.1056|
0001ee  1d12              ADDS     r2,r2,#4              ;873
0001f0  a801              ADD      r0,sp,#4              ;873
0001f2  f7fffffe          BL       strncpy
0001f6  a801              ADD      r0,sp,#4              ;874
0001f8  f7fffffe          BL       __hardfp_atof
0001fc  ec532b18          VMOV     r2,r3,d8              ;874
000200  ec510b10          VMOV     r0,r1,d0              ;874
000204  f7fffffe          BL       __aeabi_dmul
000208  f7fffffe          BL       __aeabi_d2uiz
00020c  f8c60094          STR      r0,[r6,#0x94]         ;874  ; Run_Control
                  |L6.528|
000210  f8d60094          LDR      r0,[r6,#0x94]         ;876  ; Run_Control
000214  f2475130          MOV      r1,#0x7530            ;876
000218  4288              CMP      r0,r1                 ;876
00021a  d810              BHI      |L6.574|
00021c  f8d60094          LDR      r0,[r6,#0x94]         ;876  ; Run_Control
000220  ee000a10          VMOV     s0,r0                 ;876
000224  4885              LDR      r0,|L6.1084|
000226  eef80a40          VCVT.F32.U32 s1,s0                 ;876
00022a  ee800a89          VDIV.F32 s0,s1,s18             ;876
00022e  edd00a00          VLDR     s1,[r0,#0]            ;876
000232  ee200a20          VMUL.F32 s0,s0,s1              ;876
000236  ee100a10          VMOV     r0,s0                 ;876
00023a  4548              CMP      r0,r9                 ;876
00023c  dd01              BLE      |L6.578|
                  |L6.574|
00023e  f8c64094          STR      r4,[r6,#0x94]         ;877  ; Run_Control
                  |L6.578|
000242  f8d60094          LDR      r0,[r6,#0x94]         ;885  ; Run_Control
000246  6130              STR      r0,[r6,#0x10]         ;885  ; Run_Control
000248  6930              LDR      r0,[r6,#0x10]         ;892  ; Run_Control
00024a  ee000a10          VMOV     s0,r0                 ;892
00024e  eef80a40          VCVT.F32.U32 s1,s0                 ;892
000252  ee800a89          VDIV.F32 s0,s1,s18             ;892
000256  ee100a10          VMOV     r0,s0                 ;893
00025a  f7fffffe          BL       __aeabi_f2d
00025e  e000              B        |L6.610|
                  |L6.608|
000260  e022              B        |L6.680|
                  |L6.610|
000262  ec410b10          VMOV     d0,r0,r1              ;893
000266  a172              ADR      r1,|L6.1072|
000268  ec532b10          VMOV     r2,r3,d0              ;893
00026c  a801              ADD      r0,sp,#4              ;893
00026e  f7fffffe          BL       __2sprintf
000272  a901              ADD      r1,sp,#4              ;894
000274  4658              MOV      r0,r11                ;894
000276  f7fffffe          BL       TEXT_SetText
00027a  f640016d          MOV      r1,#0x86d             ;896
00027e  f8da0004          LDR      r0,[r10,#4]           ;896  ; load_wind
000282  f7fffffe          BL       WM_GetDialogItem
000286  4606              MOV      r6,r0                 ;896
000288  4967              LDR      r1,|L6.1064|
00028a  4630              MOV      r0,r6                 ;897
00028c  f7fffffe          BL       TEXT_SetBkColor
000290  2100              MOVS     r1,#0                 ;898
000292  4630              MOV      r0,r6                 ;898
000294  f7fffffe          BL       TEXT_SetTextColor
000298  f7fffffe          BL       Write_Limits
00029c  2017              MOVS     r0,#0x17              ;901
00029e  7028              STRB     r0,[r5,#0]            ;901
0002a0  f8884000          STRB     r4,[r8,#0]            ;902
0002a4  703c              STRB     r4,[r7,#0]            ;903
0002a6  e754              B        |L6.338|
                  |L6.680|
0002a8  485d              LDR      r0,|L6.1056|
0002aa  f7fffffe          BL       atoi
0002ae  f44f717a          MOV      r1,#0x3e8             ;870
0002b2  4348              MULS     r0,r1,r0              ;870
0002b4  f8c60094          STR      r0,[r6,#0x94]         ;870  ; Run_Control
0002b8  e7aa              B        |L6.528|
                  |L6.698|
0002ba  f89d0000          LDRB     r0,[sp,#0]            ;919
0002be  f80b4000          STRB     r4,[r11,r0]           ;919
0002c2  f89d0000          LDRB     r0,[sp,#0]            ;917
0002c6  1c40              ADDS     r0,r0,#1              ;917
0002c8  9000              STR      r0,[sp,#0]            ;917
                  |L6.714|
0002ca  f89d0000          LDRB     r0,[sp,#0]            ;917
0002ce  2806              CMP      r0,#6                 ;917
0002d0  d3f3              BCC      |L6.698|
0002d2  2043              MOVS     r0,#0x43              ;921
0002d4  7028              STRB     r0,[r5,#0]            ;921
0002d6  e73c              B        |L6.338|
                  |L6.728|
0002d8  f6401111          MOV      r1,#0x911             ;927
0002dc  4692              MOV      r10,r2                ;927
0002de  f7fffffe          BL       WM_GetDialogItem
0002e2  4683              MOV      r11,r0                ;927
0002e4  f06f4170          MVN      r1,#0xf0000000        ;928
0002e8  4658              MOV      r0,r11                ;928
0002ea  f7fffffe          BL       TEXT_SetBkColor
0002ee  f06f417f          MVN      r1,#0xff000000        ;929
0002f2  4658              MOV      r0,r11                ;929
0002f4  f7fffffe          BL       TEXT_SetTextColor
0002f8  7838              LDRB     r0,[r7,#0]            ;930  ; dot_flag
0002fa  b3e8              CBZ      r0,|L6.888|
0002fc  7838              LDRB     r0,[r7,#0]            ;932  ; dot_flag
0002fe  b1a0              CBZ      r0,|L6.810|
000300  9401              STR      r4,[sp,#4]            ;933
000302  9402              STR      r4,[sp,#8]            ;933
000304  783a              LDRB     r2,[r7,#0]            ;934  ; dot_flag
000306  4946              LDR      r1,|L6.1056|
000308  1d12              ADDS     r2,r2,#4              ;934
00030a  a801              ADD      r0,sp,#4              ;934
00030c  f7fffffe          BL       strncpy
000310  a801              ADD      r0,sp,#4              ;935
000312  f7fffffe          BL       __hardfp_atof
000316  ec532b18          VMOV     r2,r3,d8              ;935
00031a  ec510b10          VMOV     r0,r1,d0              ;935
00031e  f7fffffe          BL       __aeabi_dmul
000322  f7fffffe          BL       __aeabi_d2uiz
000326  f8c600a4          STR      r0,[r6,#0xa4]         ;935  ; Run_Control
                  |L6.810|
00032a  f8d600a4          LDR      r0,[r6,#0xa4]         ;937  ; Run_Control
00032e  4944              LDR      r1,|L6.1088|
000330  4288              CMP      r0,r1                 ;937
000332  d810              BHI      |L6.854|
000334  f8d600a4          LDR      r0,[r6,#0xa4]         ;937  ; Run_Control
000338  ee000a10          VMOV     s0,r0                 ;937
00033c  4841              LDR      r0,|L6.1092|
00033e  eef80a40          VCVT.F32.U32 s1,s0                 ;937
000342  ee800a89          VDIV.F32 s0,s1,s18             ;937
000346  edd00a00          VLDR     s1,[r0,#0]            ;937
00034a  ee200a20          VMUL.F32 s0,s0,s1              ;937
00034e  ee100a10          VMOV     r0,s0                 ;937
000352  4548              CMP      r0,r9                 ;937
000354  dd01              BLE      |L6.858|
                  |L6.854|
000356  f8c640a4          STR      r4,[r6,#0xa4]         ;938  ; Run_Control
                  |L6.858|
00035a  f8d600a4          LDR      r0,[r6,#0xa4]         ;940  ; Run_Control
00035e  60f0              STR      r0,[r6,#0xc]          ;940  ; Run_Control
000360  68f0              LDR      r0,[r6,#0xc]          ;942  ; Run_Control
000362  ee000a10          VMOV     s0,r0                 ;942
000366  eef80a40          VCVT.F32.U32 s1,s0                 ;942
00036a  ee800a89          VDIV.F32 s0,s1,s18             ;942
00036e  ee100a10          VMOV     r0,s0                 ;943
000372  f7fffffe          BL       __aeabi_f2d
000376  e000              B        |L6.890|
                  |L6.888|
000378  e022              B        |L6.960|
                  |L6.890|
00037a  ec410b10          VMOV     d0,r0,r1              ;943
00037e  a12c              ADR      r1,|L6.1072|
000380  ec532b10          VMOV     r2,r3,d0              ;943
000384  a801              ADD      r0,sp,#4              ;943
000386  f7fffffe          BL       __2sprintf
00038a  a901              ADD      r1,sp,#4              ;944
00038c  4658              MOV      r0,r11                ;944
00038e  f7fffffe          BL       TEXT_SetText
000392  f44f6111          MOV      r1,#0x910             ;946
000396  f8da0004          LDR      r0,[r10,#4]           ;946  ; load_wind
00039a  f7fffffe          BL       WM_GetDialogItem
00039e  4606              MOV      r6,r0                 ;946
0003a0  4921              LDR      r1,|L6.1064|
0003a2  4630              MOV      r0,r6                 ;947
0003a4  f7fffffe          BL       TEXT_SetBkColor
0003a8  2100              MOVS     r1,#0                 ;948
0003aa  4630              MOV      r0,r6                 ;948
0003ac  f7fffffe          BL       TEXT_SetTextColor
0003b0  f7fffffe          BL       Write_Limits
0003b4  2041              MOVS     r0,#0x41              ;951
0003b6  7028              STRB     r0,[r5,#0]            ;951
0003b8  f8884000          STRB     r4,[r8,#0]            ;952
0003bc  703c              STRB     r4,[r7,#0]            ;953
                  |L6.958|
0003be  e6c8              B        |L6.338|
                  |L6.960|
0003c0  4817              LDR      r0,|L6.1056|
0003c2  f7fffffe          BL       atoi
0003c6  f44f717a          MOV      r1,#0x3e8             ;931
0003ca  4348              MULS     r0,r1,r0              ;931
0003cc  f8c600a4          STR      r0,[r6,#0xa4]         ;931  ; Run_Control
0003d0  e7ab              B        |L6.810|
                  |L6.978|
0003d2  4d1d              LDR      r5,|L6.1096|
0003d4  4f1d              LDR      r7,|L6.1100|
0003d6  f44f6680          MOV      r6,#0x400             ;966
0003da  7829              LDRB     r1,[r5,#0]            ;958  ; flagD
0003dc  f3c113c0          UBFX     r3,r1,#7,#1           ;958
0003e0  f640110f          MOV      r1,#0x90f             ;963
0003e4  b3b3              CBZ      r3,|L6.1108|
0003e6  2b01              CMP      r3,#1                 ;958
0003e8  d1e9              BNE      |L6.958|
0003ea  4690              MOV      r8,r2                 ;963
0003ec  f7fffffe          BL       WM_GetDialogItem
0003f0  a117              ADR      r1,|L6.1104|
0003f2  f7fffffe          BL       TEXT_SetText
0003f6  6828              LDR      r0,[r5,#0]            ;965  ; flagD
0003f8  f0200080          BIC      r0,r0,#0x80           ;965
0003fc  6028              STR      r0,[r5,#0]            ;965  ; flagD
0003fe  e02a              B        |L6.1110|
                  |L6.1024|
                          DCD      set_sw
                  |L6.1028|
000404  00000000          DCFD     0x408f400000000000 ; 1000
000408  408f4000
                  |L6.1036|
                          DCD      0x43480000
                  |L6.1040|
                          DCD      bit
                  |L6.1044|
                          DCD      ||.data||
                  |L6.1048|
000418  447a0000          DCFS     0x447a0000 ; 1000
                  |L6.1052|
                          DCD      Run_Control
                  |L6.1056|
                          DCD      set_limit
                  |L6.1060|
                          DCD      dot_flag
                  |L6.1064|
                          DCD      0x00bfffff
                  |L6.1068|
                          DCD      InFlashSave
                  |L6.1072|
000430  252e3366          DCB      "%.3f",0
000434  00      
000435  00                DCB      0
000436  00                DCB      0
000437  00                DCB      0
                  |L6.1080|
                          DCD      0x080e0000
                  |L6.1084|
                          DCD      DISS_Voltage
                  |L6.1088|
                          DCD      0x00013880
                  |L6.1092|
                          DCD      DISS_Current
                  |L6.1096|
                          DCD      flagD
                  |L6.1100|
                          DCD      0x40020800
                  |L6.1104|
000450  435600            DCB      "CV",0
000453  00                DCB      0
                  |L6.1108|
000454  e008              B        |L6.1128|
                  |L6.1110|
000456  4631              MOV      r1,r6                 ;966
000458  4638              MOV      r0,r7                 ;966
00045a  f7fffffe          BL       GPIO_ResetBits
00045e  f8884002          STRB     r4,[r8,#2]            ;967
000462  f7fffffe          BL       Write_LOAD
000466  e674              B        |L6.338|
                  |L6.1128|
000468  4614              MOV      r4,r2                 ;974
00046a  f7fffffe          BL       WM_GetDialogItem
00046e  a122              ADR      r1,|L6.1272|
000470  f7fffffe          BL       TEXT_SetText
000474  6828              LDR      r0,[r5,#0]            ;976  ; flagD
000476  f0400080          ORR      r0,r0,#0x80           ;976
00047a  6028              STR      r0,[r5,#0]            ;976  ; flagD
00047c  4631              MOV      r1,r6                 ;977
00047e  4638              MOV      r0,r7                 ;977
000480  f7fffffe          BL       GPIO_SetBits
000484  2001              MOVS     r0,#1                 ;978
000486  70a0              STRB     r0,[r4,#2]            ;978
000488  f7fffffe          BL       Write_LOAD
00048c  e661              B        |L6.338|
                  |L6.1166|
00048e  4649              MOV      r1,r9                 ;988
000490  4617              MOV      r7,r2                 ;988
000492  f7fffffe          BL       WM_GetDialogItem
000496  4680              MOV      r8,r0                 ;988
000498  f06f4170          MVN      r1,#0xf0000000        ;989
00049c  4640              MOV      r0,r8                 ;989
00049e  f7fffffe          BL       TEXT_SetBkColor
0004a2  f06f417f          MVN      r1,#0xff000000        ;990
0004a6  4640              MOV      r0,r8                 ;990
0004a8  f7fffffe          BL       TEXT_SetTextColor
0004ac  4631              MOV      r1,r6                 ;992
0004ae  6878              LDR      r0,[r7,#4]            ;992  ; load_wind
0004b0  f7fffffe          BL       WM_GetDialogItem
0004b4  4606              MOV      r6,r0                 ;992
0004b6  4911              LDR      r1,|L6.1276|
0004b8  4630              MOV      r0,r6                 ;993
0004ba  f7fffffe          BL       TEXT_SetBkColor
0004be  2100              MOVS     r1,#0                 ;994
0004c0  4630              MOV      r0,r6                 ;994
0004c2  f7fffffe          BL       TEXT_SetTextColor
0004c6  9400              STR      r4,[sp,#0]            ;995
0004c8  e007              B        |L6.1242|
                  |L6.1226|
0004ca  f89d0000          LDRB     r0,[sp,#0]            ;997
0004ce  f80b4000          STRB     r4,[r11,r0]           ;997
0004d2  f89d0000          LDRB     r0,[sp,#0]            ;995
0004d6  1c40              ADDS     r0,r0,#1              ;995
0004d8  9000              STR      r0,[sp,#0]            ;995
                  |L6.1242|
0004da  f89d0000          LDRB     r0,[sp,#0]            ;995
0004de  2806              CMP      r0,#6                 ;995
0004e0  d3f3              BCC      |L6.1226|
0004e2  2056              MOVS     r0,#0x56              ;999
0004e4  7028              STRB     r0,[r5,#0]            ;999
0004e6  e634              B        |L6.338|
                  |L6.1256|
0004e8  4805              LDR      r0,|L6.1280|
0004ea  f7fffffe          BL       atoi
0004ee  f44f717a          MOV      r1,#0x3e8             ;1009
0004f2  4348              MULS     r0,r1,r0              ;1009
0004f4  6130              STR      r0,[r6,#0x10]         ;1009  ; InFlashSave
0004f6  e5f7              B        |L6.232|
;;;1031   void DEL_LOAD(void)
                          ENDP

                  |L6.1272|
0004f8  434300            DCB      "CC",0
0004fb  00                DCB      0
                  |L6.1276|
                          DCD      0x00bfffff
                  |L6.1280|
                          DCD      set_limit

                          AREA ||i.ResetLoad||, CODE, READONLY, ALIGN=2

                  ResetLoad PROC
;;;729    
;;;730    WM_HWIN ResetLoad(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;731      load_wind = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_HBKWIN, 0, 0);
000002  f7fffffe          BL       WM_GetDesktopWindow
000006  4603              MOV      r3,r0
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
00000c  9001              STR      r0,[sp,#4]
00000e  4a04              LDR      r2,|L7.32|
000010  2118              MOVS     r1,#0x18
000012  4804              LDR      r0,|L7.36|
000014  f7fffffe          BL       GUI_CreateDialogBox
000018  4903              LDR      r1,|L7.40|
00001a  6048              STR      r0,[r1,#4]  ; load_wind
;;;732      return load_wind;
;;;733    }
00001c  bd1c              POP      {r2-r4,pc}
;;;734    
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      _cbDialog2
                  |L7.36|
                          DCD      ||.constdata||
                  |L7.40|
                          DCD      ||.data||

                          AREA ||i._cbDialog2||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  _cbDialog2 PROC
;;;101    
;;;102    static void _cbDialog2(WM_MESSAGE * pMsg) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b06          VPUSH    {d8-d10}
000008  b083              SUB      sp,sp,#0xc
00000a  4604              MOV      r4,r0
;;;103      WM_HWIN hItem;
;;;104      int     NCode;
;;;105      int     Id;
;;;106      char    buf[6];
;;;107      static vu8 status_flash;
;;;108      static u16 swcount;
;;;109      float   dis_load_c = (float)SET_Current_Laod/1000;
00000c  4dfd              LDR      r5,|L8.1028|
00000e  6928              LDR      r0,[r5,#0x10]  ; Run_Control
000010  ee000a10          VMOV     s0,r0
000014  eeb80a40          VCVT.F32.U32 s0,s0
000018  eddf9afb          VLDR     s19,|L8.1032|
00001c  ee80aa29          VDIV.F32 s20,s0,s19
;;;110      float   dis_load_v = (float)SET_Voltage_Laod/1000;
000020  4628              MOV      r0,r5
000022  68c0              LDR      r0,[r0,#0xc]  ; Run_Control
000024  ee000a10          VMOV     s0,r0
000028  eeb80a40          VCVT.F32.U32 s0,s0
00002c  ee809a29          VDIV.F32 s18,s0,s19
;;;111      static float olvbuff,oldv;
;;;112      static float testc1,testc2,testres;
;;;113      static vu8 testflag;
;;;114      // USER START (Optionally insert additional variables)
;;;115      // USER END
;;;116    
;;;117      switch (pMsg->MsgId) {
;;;118    
;;;119    	case WM_PAINT://无效化重绘
;;;120    		GUI_SetColor(GUI_WHITE);//设置画笔颜色
;;;121            GUI_FillRect(0,25,480,26);//画一条实线
;;;122            GUI_SetColor(GUI_ORANGE);
;;;123            GUI_SetFont(&GUI_Fontsymbol);
;;;124            GUI_UC_SetEncodeUTF8();
;;;125            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;126            if(jkflag == 1)
;;;127    		{
;;;128    			GUI_DispStringAt("Jinko", 5, 1);//SET
;;;129    		}
;;;130            if(lang == 0)
;;;131    		{
;;;132    			GUI_SetColor(GUI_WHITE);
;;;133    			GUI_SetFont(&GUI_FontHZ20S);
;;;134    			GUI_UC_SetEncodeUTF8();
;;;135    			GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;136    			GUI_DispStringAt("测量显示", 130, 3);//SET
;;;137    		}else{
;;;138    			GUI_SetColor(GUI_WHITE);
;;;139    			GUI_SetFont(&GUI_Font20_ASCII);
;;;140    			GUI_DispStringAt("DISPLAY", 130, 3);
;;;141    		}
;;;142    //         GUI_SetFont(&GUI_FontD24x32);//
;;;143    // 		GUI_GotoXY(95,72);//设置显示坐标
;;;144    // 		GUI_DispFloatFix(DISS_Voltage,5,2);//显示电压值
;;;145    // 		GUI_GotoXY(95,140);//设置显示坐标
;;;146    // 		GUI_DispFloatFix(DISS_Current,5,2);//显示电流值
;;;147            GUI_SetFont(&GUI_Font24_1);
;;;148            GUI_DispStringAt("A",450,75);
;;;149            GUI_DispStringAt("V",450,100.);
;;;150            GUI_DispStringAt("V",450,150);
;;;151        
;;;152            GUI_SetFont(&GUI_FontEN40);
;;;153            GUI_SetColor(GUI_LIGHTGRAY);
000030  f8df93d8          LDR      r9,|L8.1036|
;;;154            GUI_DispStringAt("C:", 28, 190);
;;;155            GUI_SetColor(GUI_LIGHTGRAY);
;;;156            GUI_DispStringAt("m", 217, 196);
;;;157            GUI_DispStringAt("AH", 238, 187);
;;;158            
;;;159            GUI_SetColor(GUI_GREEN);
;;;160            GUI_SetFont(&GUI_Fontunit);
;;;161            GUI_DispStringAt("°",342, 2);
;;;162            GUI_SetFont(&GUI_Font24_1);
;;;163            GUI_DispStringAt("C",350, 2);
;;;164    //        DrawLock();
;;;165    //        GUI_SetColor(GUI_WHITE);
;;;166    //        GUI_SetFont(&GUI_Fontset_font);
;;;167    //        GUI_DispStringAt("过放电压",290, 150);
;;;168    		break;
;;;169    	case WM_KEY://接受按键消息来处理按键功能
;;;170    		switch (((WM_KEY_INFO*)(pMsg->Data.p))->Key) 
;;;171    		{ 
;;;172    			case GUI_KEY_TAB:
;;;173    
;;;174    			break;
;;;175    			
;;;176    			case GUI_KEY_ENTER:
;;;177    			break;
;;;178    		}
;;;179    	break;
;;;180    		
;;;181    	case WM_TIMER://定时模块消息
;;;182    	if(WM_GetTimerId(pMsg->Data.v) == ID_TimerTime1)
;;;183    	{
;;;184    //        lockstat2 = lockstat1;
;;;185    //        lockstat1 = lock;
;;;186    //        
;;;187    ////        if((vu32)(DISS_Current*1000) > SET_Current_Laod)
;;;188    ////        {
;;;189    ////            testflag = 1;
;;;190    ////        }else{
;;;191    ////            testflag = 0;
;;;192    ////            testc1 = testc2 = 0;
;;;193    ////        }
;;;194    ////        if(testflag == 1)
;;;195    ////        {
;;;196    ////            testc2 = testc1;
;;;197    ////            testc1 = DISS_Current;
;;;198    ////            if(testc1 < testc2)
;;;199    ////            {
;;;200    ////                testres = testc2;
;;;201    ////                testflag = 0;
;;;202    ////                testc1 = testc2 = 0;
;;;203    ////            }
;;;204    ////        }
;;;205    //        
;;;206    //        
;;;207    //        if(lockstat1 != lockstat2)
;;;208    //        {
;;;209    //            WM_InvalidateWindow(load_wind);
;;;210    //        }
;;;211    //         if(clear_flag3 == 1)
;;;212    //         {
;;;213    //		if(cswflag == 1)
;;;214    //		{
;;;215    //			swcount ++;
;;;216    //			if(swcount == 1)
;;;217    //			{
;;;218    //				GPIO_ResetBits(GPIOA,GPIO_Pin_11);//电流切换为低档
;;;219    //			}else if(swcount == 30){
;;;220    //				GPIO_SetBits(GPIOA,GPIO_Pin_11);//电流切换为高档
;;;221    //			}else if(swcount == 60){
;;;222    //				cswflag = 0;
;;;223    //				swcount = 0;
;;;224    //			}
;;;225    //		}
;;;226    		if(lock == 1)
;;;227    		{
;;;228    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
000034  f6401b3d          MOV      r11,#0x93d
;;;229    			TEXT_SetText(hItem,"锁");
;;;230    		}else{
;;;231    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
;;;232    			TEXT_SetText(hItem,"");
;;;233    		}
;;;234    		
;;;235                if(DISS_Voltage < 0.3)
;;;236                {
;;;237                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;238                    sprintf(buf,"%.3f",0.000);       
000038  ed9f8bf5          VLDR     d8,|L8.1040|
00003c  6820              LDR      r0,[r4,#0]            ;117
00003e  f8df83d8          LDR      r8,|L8.1048|
;;;239                    TEXT_SetText(hItem,buf);
;;;240                }else{hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;242                    sprintf(buf,"%.3f",disloadv);       
;;;243                    TEXT_SetText(hItem,buf);
;;;244                }
;;;245    //         }else{
;;;246    //             hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;247    //             sprintf(buf,"%.3f",DISS_Voltage);       
;;;248    //             TEXT_SetText(hItem,buf);
;;;249    //         }
;;;250            if((float)SET_Current_Laod/1000 * DISS_Voltage > 200){
;;;251                SET_Current_Laod = 0;
;;;252                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
000042  4ff6              LDR      r7,|L8.1052|
000044  f44f467f          MOV      r6,#0xff00            ;159
000048  f06f4a7f          MVN      r10,#0xff000000       ;120
00004c  281d              CMP      r0,#0x1d              ;117
00004e  d07d              BEQ      |L8.332|
000050  dc04              BGT      |L8.92|
000052  280e              CMP      r0,#0xe               ;117
000054  d00b              BEQ      |L8.110|
000056  280f              CMP      r0,#0xf               ;117
000058  d106              BNE      |L8.104|
00005a  e00d              B        |L8.120|
                  |L8.92|
00005c  2826              CMP      r0,#0x26              ;117
00005e  d076              BEQ      |L8.334|
000060  f5a07080          SUB      r0,r0,#0x100          ;117
000064  3813              SUBS     r0,r0,#0x13           ;117
000066  d073              BEQ      |L8.336|
                  |L8.104|
;;;253                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;254                TEXT_SetTextColor(hItem, GUI_WHITE);            
;;;255                if(SET_Current_Laod > 55000 || (float)SET_Current_Laod/1000 * DISS_Voltage > 200){
;;;256                    SET_Current_Laod = 0;
;;;257                }
;;;258                dis_load_c = (float)SET_Current_Laod/1000;
;;;259                sprintf(buf,"%.3f",dis_load_c);
;;;260                TEXT_SetText(hItem,buf);
;;;261            }
;;;262            
;;;263                
;;;264            
;;;265    //        test_load();
;;;266            
;;;267            if(load_sw == load_on)
;;;268            {
;;;269                if(/*DISS_Current >= 30*/SET_Current_Laod >= 30000)
;;;270                {
;;;271                    alert_flag = 1;
;;;272                }else{
;;;273                    alert_flag = 0;
;;;274                }
;;;275                battery_c = (int)bc_raw;
;;;276                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_116);
;;;277                sprintf(buf,"%05d",battery_c);    
;;;278                TEXT_SetText(hItem,buf);
;;;279                
;;;280                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;281                sprintf(buf,"%.3f",DISS_Current);        
;;;282                TEXT_SetText(hItem,buf);
;;;283                if(status_flash == 0){
;;;284                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;285                    TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;286                    if(lang == 0)
;;;287                    {
;;;288                        TEXT_SetFont(hItem,&GUI_FontHZ16);//设定文本字体
;;;289                        GUI_UC_SetEncodeUTF8();        
;;;290                        TEXT_SetText(hItem,"放电中");
;;;291                    }else{
;;;292                        TEXT_SetFont(hItem,&GUI_Font20_ASCII);//设定文本字体
;;;293                        GUI_UC_SetEncodeUTF8();        
;;;294                        TEXT_SetText(hItem,"Discharging");
;;;295                    }
;;;296                    status_flash = 1;
;;;297                }else{
;;;298                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;299                    TEXT_SetText(hItem,"");
;;;300                    status_flash = 0;
;;;301                }
;;;302                if(load_cutoffv != 0 && DISS_Voltage < load_cutoffv)
;;;303    			{
;;;304    				Flag_Swtich_ON=0;
;;;305                    GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;306                    mode_sw = 0;
;;;307                    load_sw = load_off;
;;;308    			}
;;;309                
;;;310    //            if(olvbuff != 0 && olvbuff - DISS_Voltage > 0.3)
;;;311    //            {
;;;312    //                Flag_Swtich_ON=0;
;;;313    //                GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;314    //                mode_sw = 0;
;;;315    //                load_sw = load_off;
;;;316    //                overloadv = olvbuff;
;;;317    //                olvbuff= 0;
;;;318    //            }else{
;;;319    //                olvbuff = DISS_Voltage;
;;;320    //                overloadv = 0;
;;;321    //            }
;;;322                
;;;323            }else{
;;;324                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;325                TEXT_SetText(hItem,"");
;;;326                
;;;327                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;328                sprintf(buf,"%.3f",0.000);        
;;;329                TEXT_SetText(hItem,buf);
;;;330            }
;;;331    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_143);       
;;;332    //        sprintf(buf,"%.3f",overloadv);
;;;333    //        TEXT_SetText(hItem,buf);
;;;334            
;;;335            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_126);       
;;;336            sprintf(buf,"%.1f",temp);
;;;337            TEXT_SetText(hItem,buf);
;;;338            
;;;339    		WM_RestartTimer(pMsg->Data.v, 50);
;;;340    	}
;;;341    	break;
;;;342    	
;;;343        case WM_INIT_DIALOG://重绘外观
;;;344        //
;;;345        // Initialization of 'Window'
;;;346        //
;;;347            hItem = pMsg->hWin;
;;;348            WINDOW_SetBkColor(hItem, GUI_BLACK);
;;;349    		WM_CreateTimer(hItem,ID_TimerTime1,500,0);//创建本窗口定时器
;;;350        //
;;;351        // Initialization of 'Button'
;;;352        //
;;;353    //         hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_6);
;;;354    // 		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;355    // 		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;356    // 		GUI_UC_SetEncodeUTF8();
;;;357    // 		BUTTON_SetText(hItem,"充放电");
;;;358        //
;;;359        // Initialization of 'Button'
;;;360        //
;;;361    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
;;;362    		TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;363    		TEXT_SetFont(hItem,&GUI_FontHZ14);
;;;364    		TEXT_SetText(hItem,"");
;;;365    		
;;;366    		
;;;367           if(lang == 0)
;;;368            {
;;;369                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_7);
;;;370                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;371                BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;372                GUI_UC_SetEncodeUTF8();
;;;373                BUTTON_SetText(hItem, "内阻测试");
;;;374            //
;;;375            // Initialization of 'Button'
;;;376            //
;;;377                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_8);
;;;378                BUTTON_SetPressed(hItem,1);
;;;379                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;380                BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;381                GUI_UC_SetEncodeUTF8();
;;;382                BUTTON_SetText(hItem, "程控负载");
;;;383            //
;;;384            // Initialization of 'Button'
;;;385            //
;;;386                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
;;;387                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;388                BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;389                GUI_UC_SetEncodeUTF8();
;;;390                BUTTON_SetText(hItem, "程控电源");
;;;391            //
;;;392            // Initialization of 'Button'
;;;393            //
;;;394                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_10);
;;;395                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;396                BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;397                GUI_UC_SetEncodeUTF8();
;;;398                BUTTON_SetText(hItem, "充放电");
;;;399            //
;;;400            // Initialization of 'Button'
;;;401            //
;;;402                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_11);
;;;403                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;404                BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;405                GUI_UC_SetEncodeUTF8();
;;;406                BUTTON_SetText(hItem, "曲线");
;;;407            }else{
;;;408                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_7);
;;;409                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;410                BUTTON_SetFont      (hItem,    &GUI_Font16B_ASCII);//设定按钮文本字体
;;;411                GUI_UC_SetEncodeUTF8();
;;;412                BUTTON_SetText(hItem, "I.R. TEST");
;;;413            //
;;;414            // Initialization of 'Button'
;;;415            //
;;;416                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_8);
;;;417                BUTTON_SetPressed(hItem,1);
;;;418                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;419                BUTTON_SetFont      (hItem,    &GUI_Font16B_ASCII);//设定按钮文本字体
;;;420                GUI_UC_SetEncodeUTF8();
;;;421                BUTTON_SetText(hItem, "LOAD");
;;;422            //
;;;423            // Initialization of 'Button'
;;;424            //
;;;425                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
;;;426                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;427                BUTTON_SetFont      (hItem,    &GUI_Font16B_ASCII);//设定按钮文本字体
;;;428                GUI_UC_SetEncodeUTF8();
;;;429                BUTTON_SetText(hItem, "POWER");
;;;430            //
;;;431            // Initialization of 'Button'
;;;432            //
;;;433                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_10);
;;;434                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;435                BUTTON_SetFont      (hItem,    &GUI_Font16B_ASCII);//设定按钮文本字体
;;;436                GUI_UC_SetEncodeUTF8();
;;;437                BUTTON_SetText(hItem, "C&DC");
;;;438            //
;;;439            // Initialization of 'Button'
;;;440            //
;;;441                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_11);
;;;442                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;443                BUTTON_SetFont      (hItem,    &GUI_Font16B_ASCII);//设定按钮文本字体
;;;444                GUI_UC_SetEncodeUTF8();
;;;445                BUTTON_SetText(hItem, "GRAPH");
;;;446            }
;;;447    		
;;;448    		
;;;449    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_11);
;;;450    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;451            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;452    		GUI_UC_SetEncodeUTF8();
;;;453    		TEXT_SetText(hItem,"V:");
;;;454    		
;;;455    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_12);
;;;456    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;457            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;458    		GUI_UC_SetEncodeUTF8();
;;;459    		TEXT_SetText(hItem,"I:");
;;;460            
;;;461            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_13);
;;;462    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;463            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;464    		GUI_UC_SetEncodeUTF8();
;;;465    		TEXT_SetText(hItem,"V");
;;;466    		
;;;467    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_14);
;;;468    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;469            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;470    		GUI_UC_SetEncodeUTF8();
;;;471    		TEXT_SetText(hItem,"A");
;;;472            
;;;473            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_48);
;;;474    		TEXT_SetTextColor(hItem, GUI_BLACK);//设置字体颜色
;;;475            TEXT_SetBkColor(hItem,0x00BFFFFF);
;;;476            if(lang == 0)
;;;477            {
;;;478                TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;479                GUI_UC_SetEncodeUTF8();
;;;480                TEXT_SetText(hItem,"负载电流");
;;;481            }else{
;;;482                TEXT_SetFont(hItem,&GUI_Font20_ASCII);//设定文本字体
;;;483                GUI_UC_SetEncodeUTF8();
;;;484                TEXT_SetText(hItem,"Load C");
;;;485            }
;;;486            
;;;487            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_49);
;;;488            sprintf(buf,"%.3f",dis_load_c);
;;;489    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;490            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;491    		GUI_UC_SetEncodeUTF8();     
;;;492    		TEXT_SetText(hItem,buf);
;;;493            
;;;494            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_143);
;;;495            sprintf(buf,"%.3f",load_cutoffv);
;;;496    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;497            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;498    		GUI_UC_SetEncodeUTF8();     
;;;499    		TEXT_SetText(hItem,buf);
;;;500            
;;;501            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;502            sprintf(buf,"%.3f",0.000);
;;;503    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;504            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;505    		GUI_UC_SetEncodeUTF8();        
;;;506    		TEXT_SetText(hItem,buf);
;;;507            
;;;508            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;509            sprintf(buf,"%.3f",0.000);
;;;510    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;511            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;512    		GUI_UC_SetEncodeUTF8();        
;;;513    		TEXT_SetText(hItem,buf);
;;;514            
;;;515            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_116);
;;;516            sprintf(buf,"%05d",0);
;;;517            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;518            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;519            GUI_UC_SetEncodeUTF8();        
;;;520            TEXT_SetText(hItem,buf);
;;;521            if(lang == 0)
;;;522            {
;;;523    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_120);
;;;524    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;525    			TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;526    			GUI_UC_SetEncodeUTF8();        
;;;527    			TEXT_SetText(hItem,"负载模式");
;;;528    			
;;;529    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_158);
;;;530    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;531    			TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;532    			GUI_UC_SetEncodeUTF8();        
;;;533    			TEXT_SetText(hItem,"截止电压");
;;;534    		}else{
;;;535    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_120);
;;;536    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;537    			TEXT_SetFont(hItem,&GUI_Font20_ASCII);//设定文本字体
;;;538    			GUI_UC_SetEncodeUTF8();        
;;;539    			TEXT_SetText(hItem,"Mode");
;;;540    			
;;;541    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_158);
;;;542    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;543    			TEXT_SetFont(hItem,&GUI_Font20_ASCII);//设定文本字体
;;;544    			GUI_UC_SetEncodeUTF8();        
;;;545    			TEXT_SetText(hItem,"Cutoff V");
;;;546    		}
;;;547            
;;;548            if(load_mode == 1)
;;;549            {
;;;550                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_121);
;;;551                TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;552                TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;553                GUI_UC_SetEncodeUTF8();
;;;554                GPIO_SetBits(GPIOC,GPIO_Pin_10);//CC
;;;555                TEXT_SetText(hItem,"CC");
;;;556                flag_Load_CC = 1;
;;;557            }else if(load_mode == 0){
;;;558                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_121);
;;;559                TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;560                TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;561                GUI_UC_SetEncodeUTF8();  
;;;562                GPIO_ResetBits(GPIOC,GPIO_Pin_10);//CV            
;;;563                TEXT_SetText(hItem,"CV");
;;;564                flag_Load_CC = 0;
;;;565            }
;;;566            
;;;567    		if(lang == 0)
;;;568            {
;;;569    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_122);
;;;570    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;571    			TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;572    			GUI_UC_SetEncodeUTF8();
;;;573    			TEXT_SetText(hItem,"负载电压");
;;;574    		}else{
;;;575    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_122);
;;;576    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;577    			TEXT_SetFont(hItem,&GUI_Font20_ASCII);//设定文本字体
;;;578    			GUI_UC_SetEncodeUTF8();
;;;579    			TEXT_SetText(hItem,"Load V");
;;;580    		}
;;;581            
;;;582            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_123);
;;;583            sprintf(buf,"%.3f",dis_load_v);
;;;584    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;585            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;586    		GUI_UC_SetEncodeUTF8();     
;;;587    		TEXT_SetText(hItem,buf);
;;;588            
;;;589            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_126);
;;;590            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;591            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体       
;;;592            sprintf(buf,"%.1f",temp);
;;;593            TEXT_SetText(hItem,buf);
;;;594            
;;;595    
;;;596        // USER START (Optionally insert additional code for further widget initialization)
;;;597        // USER END
;;;598        break;
;;;599      case WM_NOTIFY_PARENT:
;;;600        Id    = WM_GetId(pMsg->hWinSrc);
;;;601        NCode = pMsg->Data.v;
;;;602        switch(Id) {
;;;603        case ID_BUTTON_6: // Notifications sent by 'Button'
;;;604          switch(NCode) {
;;;605          case WM_NOTIFICATION_CLICKED:
;;;606            // USER START (Optionally insert code for reacting on notification message)
;;;607            // USER END
;;;608            break;
;;;609          case WM_NOTIFICATION_RELEASED:
;;;610            // USER START (Optionally insert code for reacting on notification message)
;;;611            // USER END
;;;612            break;
;;;613          // USER START (Optionally insert additional code for further notification handling)
;;;614          // USER END
;;;615          }
;;;616          break;
;;;617        case ID_BUTTON_7: // Notifications sent by 'Button'
;;;618          switch(NCode) {
;;;619          case WM_NOTIFICATION_CLICKED:
;;;620            // USER START (Optionally insert code for reacting on notification message)
;;;621            // USER END
;;;622            break;
;;;623          case WM_NOTIFICATION_RELEASED:
;;;624    				
;;;625            // USER START (Optionally insert code for reacting on notification message)
;;;626            // USER END
;;;627            break;
;;;628          // USER START (Optionally insert additional code for further notification handling)
;;;629          // USER END
;;;630          }
;;;631          break;
;;;632        case ID_BUTTON_8: // Notifications sent by 'Button'
;;;633          switch(NCode) {
;;;634          case WM_NOTIFICATION_CLICKED:
;;;635            // USER START (Optionally insert code for reacting on notification message)
;;;636            // USER END
;;;637            break;
;;;638          case WM_NOTIFICATION_RELEASED:
;;;639            // USER START (Optionally insert code for reacting on notification message)
;;;640            // USER END
;;;641            break;
;;;642          // USER START (Optionally insert additional code for further notification handling)
;;;643          // USER END
;;;644          }
;;;645          break;
;;;646        case ID_BUTTON_9: // Notifications sent by 'Button'
;;;647          switch(NCode) {
;;;648          case WM_NOTIFICATION_CLICKED:
;;;649            // USER START (Optionally insert code for reacting on notification message)
;;;650            // USER END
;;;651            break;
;;;652          case WM_NOTIFICATION_RELEASED:
;;;653            // USER START (Optionally insert code for reacting on notification message)
;;;654            // USER END
;;;655            break;
;;;656          // USER START (Optionally insert additional code for further notification handling)
;;;657          // USER END
;;;658          }
;;;659          break;
;;;660        case ID_BUTTON_10: // Notifications sent by 'Button'
;;;661          switch(NCode) {
;;;662          case WM_NOTIFICATION_CLICKED:
;;;663            // USER START (Optionally insert code for reacting on notification message)
;;;664            // USER END
;;;665            break;
;;;666          case WM_NOTIFICATION_RELEASED:
;;;667            // USER START (Optionally insert code for reacting on notification message)
;;;668            // USER END
;;;669            break;
;;;670          // USER START (Optionally insert additional code for further notification handling)
;;;671          // USER END
;;;672          }
;;;673          break;
;;;674        case ID_BUTTON_11: // Notifications sent by 'Button'
;;;675          switch(NCode) {
;;;676          case WM_NOTIFICATION_CLICKED:
;;;677            // USER START (Optionally insert code for reacting on notification message)
;;;678            // USER END
;;;679            break;
;;;680          case WM_NOTIFICATION_RELEASED:
;;;681            // USER START (Optionally insert code for reacting on notification message)
;;;682            // USER END
;;;683            break;
;;;684          // USER START (Optionally insert additional code for further notification handling)
;;;685          // USER END
;;;686          }
;;;687          break;
;;;688        // USER START (Optionally insert additional code for further Ids)
;;;689        // USER END
;;;690        }
;;;691        break;
;;;692      // USER START (Optionally insert additional message handling)
;;;693      // USER END
;;;694      default:
;;;695        WM_DefaultProc(pMsg);
000068  4620              MOV      r0,r4
00006a  f7fffffe          BL       WM_DefaultProc
                  |L8.110|
;;;696        break;
;;;697      }
;;;698    }
00006e  b003              ADD      sp,sp,#0xc
000070  ecbd8b06          VPOP     {d8-d10}
000074  e8bd8ff0          POP      {r4-r11,pc}
                  |L8.120|
000078  4650              MOV      r0,r10                ;120
00007a  f7fffffe          BL       GUI_SetColor
00007e  231a              MOVS     r3,#0x1a              ;121
000080  f44f72f0          MOV      r2,#0x1e0             ;121
000084  2119              MOVS     r1,#0x19              ;121
000086  2000              MOVS     r0,#0                 ;121
000088  f7fffffe          BL       GUI_FillRect
00008c  f24a50ff          MOV      r0,#0xa5ff            ;122
000090  f7fffffe          BL       GUI_SetColor
000094  48e2              LDR      r0,|L8.1056|
000096  f7fffffe          BL       GUI_SetFont
00009a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00009e  2002              MOVS     r0,#2                 ;125
0000a0  f7fffffe          BL       GUI_SetTextMode
0000a4  48df              LDR      r0,|L8.1060|
0000a6  7800              LDRB     r0,[r0,#0]            ;126  ; jkflag
0000a8  2801              CMP      r0,#1                 ;126
0000aa  d104              BNE      |L8.182|
0000ac  2201              MOVS     r2,#1                 ;128
0000ae  2105              MOVS     r1,#5                 ;128
0000b0  a0dd              ADR      r0,|L8.1064|
0000b2  f7fffffe          BL       GUI_DispStringAt
                  |L8.182|
0000b6  f8980000          LDRB     r0,[r8,#0]            ;130  ; lang
0000ba  2800              CMP      r0,#0                 ;130
0000bc  d050              BEQ      |L8.352|
0000be  4650              MOV      r0,r10                ;138
0000c0  f7fffffe          BL       GUI_SetColor
0000c4  48da              LDR      r0,|L8.1072|
0000c6  f7fffffe          BL       GUI_SetFont
0000ca  2203              MOVS     r2,#3                 ;140
0000cc  2182              MOVS     r1,#0x82              ;140
0000ce  a0d9              ADR      r0,|L8.1076|
0000d0  f7fffffe          BL       GUI_DispStringAt
                  |L8.212|
0000d4  48d9              LDR      r0,|L8.1084|
0000d6  f7fffffe          BL       GUI_SetFont
0000da  f44f74e1          MOV      r4,#0x1c2             ;148
0000de  224b              MOVS     r2,#0x4b              ;148
0000e0  4621              MOV      r1,r4                 ;148
0000e2  a0d7              ADR      r0,|L8.1088|
0000e4  f7fffffe          BL       GUI_DispStringAt
0000e8  2264              MOVS     r2,#0x64              ;149
0000ea  4621              MOV      r1,r4                 ;149
0000ec  a0d5              ADR      r0,|L8.1092|
0000ee  f7fffffe          BL       GUI_DispStringAt
0000f2  2296              MOVS     r2,#0x96              ;150
0000f4  4621              MOV      r1,r4                 ;150
0000f6  a0d3              ADR      r0,|L8.1092|
0000f8  f7fffffe          BL       GUI_DispStringAt
0000fc  48d2              LDR      r0,|L8.1096|
0000fe  f7fffffe          BL       GUI_SetFont
000102  4648              MOV      r0,r9                 ;153
000104  f7fffffe          BL       GUI_SetColor
000108  22be              MOVS     r2,#0xbe              ;154
00010a  211c              MOVS     r1,#0x1c              ;154
00010c  a0cf              ADR      r0,|L8.1100|
00010e  f7fffffe          BL       GUI_DispStringAt
000112  4648              MOV      r0,r9                 ;155
000114  f7fffffe          BL       GUI_SetColor
000118  22c4              MOVS     r2,#0xc4              ;156
00011a  21d9              MOVS     r1,#0xd9              ;156
00011c  a0cc              ADR      r0,|L8.1104|
00011e  f7fffffe          BL       GUI_DispStringAt
000122  22bb              MOVS     r2,#0xbb              ;157
000124  21ee              MOVS     r1,#0xee              ;157
000126  a0cb              ADR      r0,|L8.1108|
000128  f7fffffe          BL       GUI_DispStringAt
00012c  4630              MOV      r0,r6                 ;159
00012e  f7fffffe          BL       GUI_SetColor
000132  48c9              LDR      r0,|L8.1112|
000134  f7fffffe          BL       GUI_SetFont
000138  2202              MOVS     r2,#2                 ;161
00013a  f44f71ab          MOV      r1,#0x156             ;161
00013e  a0c7              ADR      r0,|L8.1116|
000140  f7fffffe          BL       GUI_DispStringAt
000144  48bd              LDR      r0,|L8.1084|
000146  f7fffffe          BL       GUI_SetFont
00014a  e002              B        |L8.338|
                  |L8.332|
00014c  e1cd              B        |L8.1258|
                  |L8.334|
00014e  e3b8              B        |L8.2242|
                  |L8.336|
000150  e017              B        |L8.386|
                  |L8.338|
000152  2202              MOVS     r2,#2                 ;163
000154  f44f71af          MOV      r1,#0x15e             ;163
000158  a0c1              ADR      r0,|L8.1120|
00015a  f7fffffe          BL       GUI_DispStringAt
                  |L8.350|
00015e  e786              B        |L8.110|
                  |L8.352|
000160  4650              MOV      r0,r10                ;132
000162  f7fffffe          BL       GUI_SetColor
000166  48bf              LDR      r0,|L8.1124|
000168  f7fffffe          BL       GUI_SetFont
00016c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000170  2002              MOVS     r0,#2                 ;135
000172  f7fffffe          BL       GUI_SetTextMode
000176  2203              MOVS     r2,#3                 ;136
000178  2182              MOVS     r1,#0x82              ;136
00017a  a0bb              ADR      r0,|L8.1128|
00017c  f7fffffe          BL       GUI_DispStringAt
000180  e7a8              B        |L8.212|
                  |L8.386|
000182  68e0              LDR      r0,[r4,#0xc]          ;182
000184  f7fffffe          BL       WM_GetTimerId
000188  2802              CMP      r0,#2                 ;182
00018a  d1e8              BNE      |L8.350|
00018c  48ba              LDR      r0,|L8.1144|
00018e  7800              LDRB     r0,[r0,#0]            ;226  ; lock
000190  2801              CMP      r0,#1                 ;226
000192  d01e              BEQ      |L8.466|
000194  4659              MOV      r1,r11                ;231
000196  6860              LDR      r0,[r4,#4]            ;231
000198  f7fffffe          BL       WM_GetDialogItem
00019c  a1b5              ADR      r1,|L8.1140|
00019e  f7fffffe          BL       TEXT_SetText
                  |L8.418|
0001a2  f8df92d8          LDR      r9,|L8.1148|
0001a6  49b6              LDR      r1,|L8.1152|
0001a8  f8d90000          LDR      r0,[r9,#0]            ;235  ; DISS_Voltage
0001ac  4288              CMP      r0,r1                 ;235
0001ae  da18              BGE      |L8.482|
0001b0  f6400191          MOV      r1,#0x891             ;237
0001b4  6860              LDR      r0,[r4,#4]            ;237
0001b6  f7fffffe          BL       WM_GetDialogItem
0001ba  4606              MOV      r6,r0                 ;237
0001bc  ec532b18          VMOV     r2,r3,d8              ;238
0001c0  a1b0              ADR      r1,|L8.1156|
0001c2  4668              MOV      r0,sp                 ;238
0001c4  f7fffffe          BL       __2sprintf
0001c8  4669              MOV      r1,sp                 ;239
0001ca  4630              MOV      r0,r6                 ;239
0001cc  f7fffffe          BL       TEXT_SetText
0001d0  e01d              B        |L8.526|
                  |L8.466|
0001d2  4659              MOV      r1,r11                ;228
0001d4  6860              LDR      r0,[r4,#4]            ;228
0001d6  f7fffffe          BL       WM_GetDialogItem
0001da  a1ac              ADR      r1,|L8.1164|
0001dc  f7fffffe          BL       TEXT_SetText
0001e0  e7df              B        |L8.418|
                  |L8.482|
0001e2  f6400191          MOV      r1,#0x891             ;241
0001e6  6860              LDR      r0,[r4,#4]            ;241
0001e8  f7fffffe          BL       WM_GetDialogItem
0001ec  4606              MOV      r6,r0                 ;241
0001ee  48a8              LDR      r0,|L8.1168|
0001f0  6800              LDR      r0,[r0,#0]            ;242  ; disloadv
0001f2  f7fffffe          BL       __aeabi_f2d
0001f6  ec410b10          VMOV     d0,r0,r1              ;242
0001fa  a1a2              ADR      r1,|L8.1156|
0001fc  ec532b10          VMOV     r2,r3,d0              ;242
000200  4668              MOV      r0,sp                 ;242
000202  f7fffffe          BL       __2sprintf
000206  4669              MOV      r1,sp                 ;243
000208  4630              MOV      r0,r6                 ;243
00020a  f7fffffe          BL       TEXT_SetText
                  |L8.526|
00020e  6928              LDR      r0,[r5,#0x10]         ;250  ; Run_Control
000210  f8dfb280          LDR      r11,|L8.1172|
000214  ee000a10          VMOV     s0,r0                 ;250
000218  2600              MOVS     r6,#0                 ;250
00021a  eeb80a40          VCVT.F32.U32 s0,s0                 ;250
00021e  eec00a29          VDIV.F32 s1,s0,s19             ;250
000222  ed990a00          VLDR     s0,[r9,#0]            ;250
000226  ee200a80          VMUL.F32 s0,s1,s0              ;250
00022a  ee100a10          VMOV     r0,s0                 ;250
00022e  4558              CMP      r0,r11                ;250
000230  dd3b              BLE      |L8.682|
000232  612e              STR      r6,[r5,#0x10]         ;251  ; Run_Control
000234  f640016e          MOV      r1,#0x86e             ;252
000238  6878              LDR      r0,[r7,#4]            ;252  ; load_wind
00023a  f7fffffe          BL       WM_GetDialogItem
00023e  9002              STR      r0,[sp,#8]            ;252
000240  f06f4170          MVN      r1,#0xf0000000        ;253
000244  9802              LDR      r0,[sp,#8]            ;253
000246  f7fffffe          BL       TEXT_SetBkColor
00024a  4651              MOV      r1,r10                ;254
00024c  9802              LDR      r0,[sp,#8]            ;254
00024e  f7fffffe          BL       TEXT_SetTextColor
000252  6928              LDR      r0,[r5,#0x10]         ;255  ; Run_Control
000254  f24d61d8          MOV      r1,#0xd6d8            ;255
000258  4288              CMP      r0,r1                 ;255
00025a  d80e              BHI      |L8.634|
00025c  6928              LDR      r0,[r5,#0x10]         ;255  ; Run_Control
00025e  ee000a10          VMOV     s0,r0                 ;255
000262  eeb80a40          VCVT.F32.U32 s0,s0                 ;255
000266  eec00a29          VDIV.F32 s1,s0,s19             ;255
00026a  ed990a00          VLDR     s0,[r9,#0]            ;255
00026e  ee200a80          VMUL.F32 s0,s1,s0              ;255
000272  ee100a10          VMOV     r0,s0                 ;255
000276  4558              CMP      r0,r11                ;255
000278  dd00              BLE      |L8.636|
                  |L8.634|
00027a  612e              STR      r6,[r5,#0x10]         ;256  ; Run_Control
                  |L8.636|
00027c  6928              LDR      r0,[r5,#0x10]         ;258  ; Run_Control
00027e  ee000a10          VMOV     s0,r0                 ;258
000282  eef80a40          VCVT.F32.U32 s1,s0                 ;258
000286  ee800aa9          VDIV.F32 s0,s1,s19             ;258
00028a  ee100a10          VMOV     r0,s0                 ;259
00028e  f7fffffe          BL       __aeabi_f2d
000292  ec410b10          VMOV     d0,r0,r1              ;259
000296  a17b              ADR      r1,|L8.1156|
000298  ec532b10          VMOV     r2,r3,d0              ;259
00029c  4668              MOV      r0,sp                 ;259
00029e  f7fffffe          BL       __2sprintf
0002a2  4669              MOV      r1,sp                 ;260
0002a4  9802              LDR      r0,[sp,#8]            ;260
0002a6  f7fffffe          BL       TEXT_SetText
                  |L8.682|
0002aa  7838              LDRB     r0,[r7,#0]            ;267  ; load_sw
0002ac  2801              CMP      r0,#1                 ;267
0002ae  d032              BEQ      |L8.790|
0002b0  f6400196          MOV      r1,#0x896             ;324
0002b4  6860              LDR      r0,[r4,#4]            ;324
0002b6  f7fffffe          BL       WM_GetDialogItem
0002ba  a16e              ADR      r1,|L8.1140|
0002bc  f7fffffe          BL       TEXT_SetText
0002c0  f6400192          MOV      r1,#0x892             ;327
0002c4  6860              LDR      r0,[r4,#4]            ;327
0002c6  f7fffffe          BL       WM_GetDialogItem
0002ca  4605              MOV      r5,r0                 ;327
0002cc  ec532b18          VMOV     r2,r3,d8              ;328
0002d0  a16c              ADR      r1,|L8.1156|
0002d2  4668              MOV      r0,sp                 ;328
0002d4  f7fffffe          BL       __2sprintf
0002d8  4669              MOV      r1,sp                 ;329
0002da  4628              MOV      r0,r5                 ;329
0002dc  f7fffffe          BL       TEXT_SetText
                  |L8.736|
0002e0  f6401112          MOV      r1,#0x912             ;335
0002e4  6860              LDR      r0,[r4,#4]            ;335
0002e6  f7fffffe          BL       WM_GetDialogItem
0002ea  4605              MOV      r5,r0                 ;335
0002ec  486a              LDR      r0,|L8.1176|
0002ee  6800              LDR      r0,[r0,#0]            ;336  ; temp
0002f0  f7fffffe          BL       __aeabi_f2d
0002f4  ec410b10          VMOV     d0,r0,r1              ;336
0002f8  a168              ADR      r1,|L8.1180|
0002fa  ec532b10          VMOV     r2,r3,d0              ;336
0002fe  4668              MOV      r0,sp                 ;336
000300  f7fffffe          BL       __2sprintf
000304  4669              MOV      r1,sp                 ;337
000306  4628              MOV      r0,r5                 ;337
000308  f7fffffe          BL       TEXT_SetText
00030c  2132              MOVS     r1,#0x32              ;339
00030e  68e0              LDR      r0,[r4,#0xc]          ;339
000310  f7fffffe          BL       WM_RestartTimer
000314  e6ab              B        |L8.110|
                  |L8.790|
000316  6929              LDR      r1,[r5,#0x10]         ;269  ; Run_Control
000318  f2475230          MOV      r2,#0x7530            ;269
00031c  4861              LDR      r0,|L8.1188|
00031e  2501              MOVS     r5,#1                 ;128
000320  4291              CMP      r1,r2                 ;269
000322  d301              BCC      |L8.808|
000324  7005              STRB     r5,[r0,#0]            ;271
000326  e000              B        |L8.810|
                  |L8.808|
000328  7006              STRB     r6,[r0,#0]            ;273
                  |L8.810|
00032a  485f              LDR      r0,|L8.1192|
00032c  f8dfa17c          LDR      r10,|L8.1196|
000330  ed900a00          VLDR     s0,[r0,#0]            ;275
000334  eebd0ac0          VCVT.S32.F32 s0,s0                 ;275
000338  ee100a10          VMOV     r0,s0                 ;275
00033c  f8ca0000          STR      r0,[r10,#0]           ;275  ; battery_c
000340  f640110d          MOV      r1,#0x90d             ;276
000344  6860              LDR      r0,[r4,#4]            ;276
000346  f7fffffe          BL       WM_GetDialogItem
00034a  4683              MOV      r11,r0                ;276
00034c  f8da2000          LDR      r2,[r10,#0]           ;277  ; battery_c
000350  a157              ADR      r1,|L8.1200|
000352  4668              MOV      r0,sp                 ;277
000354  f7fffffe          BL       __2sprintf
000358  4669              MOV      r1,sp                 ;278
00035a  4658              MOV      r0,r11                ;278
00035c  f7fffffe          BL       TEXT_SetText
000360  f6400192          MOV      r1,#0x892             ;280
000364  6860              LDR      r0,[r4,#4]            ;280
000366  f7fffffe          BL       WM_GetDialogItem
00036a  4682              MOV      r10,r0                ;280
00036c  4852              LDR      r0,|L8.1208|
00036e  6800              LDR      r0,[r0,#0]            ;281  ; DISS_Current
000370  f7fffffe          BL       __aeabi_f2d
000374  ec410b10          VMOV     d0,r0,r1              ;281
000378  a142              ADR      r1,|L8.1156|
00037a  ec532b10          VMOV     r2,r3,d0              ;281
00037e  4668              MOV      r0,sp                 ;281
000380  f7fffffe          BL       __2sprintf
000384  4669              MOV      r1,sp                 ;282
000386  4650              MOV      r0,r10                ;282
000388  f7fffffe          BL       TEXT_SetText
00038c  7878              LDRB     r0,[r7,#1]            ;283  ; status_flash
00038e  b320              CBZ      r0,|L8.986|
000390  f6400196          MOV      r1,#0x896             ;298
000394  6860              LDR      r0,[r4,#4]            ;298
000396  f7fffffe          BL       WM_GetDialogItem
00039a  a136              ADR      r1,|L8.1140|
00039c  f7fffffe          BL       TEXT_SetText
0003a0  707e              STRB     r6,[r7,#1]            ;300
                  |L8.930|
0003a2  ed970a02          VLDR     s0,[r7,#8]            ;302
0003a6  eeb50ac0          VCMPE.F32 s0,#0.0               ;302
0003aa  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;302
0003ae  d097              BEQ      |L8.736|
0003b0  edd90a00          VLDR     s1,[r9,#0]            ;302
0003b4  eef40ac0          VCMPE.F32 s1,s0                 ;302
0003b8  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;302
0003bc  d290              BCS      |L8.736|
0003be  483f              LDR      r0,|L8.1212|
0003c0  6801              LDR      r1,[r0,#0]            ;304  ; flagA
0003c2  f0210140          BIC      r1,r1,#0x40           ;304
0003c6  6001              STR      r1,[r0,#0]            ;304  ; flagA
0003c8  f44f4100          MOV      r1,#0x8000            ;305
0003cc  483c              LDR      r0,|L8.1216|
0003ce  f7fffffe          BL       GPIO_SetBits
0003d2  483c              LDR      r0,|L8.1220|
0003d4  7006              STRB     r6,[r0,#0]            ;306
0003d6  703e              STRB     r6,[r7,#0]            ;307
0003d8  e782              B        |L8.736|
                  |L8.986|
0003da  f6400196          MOV      r1,#0x896             ;284
0003de  6860              LDR      r0,[r4,#4]            ;284
0003e0  f7fffffe          BL       WM_GetDialogItem
0003e4  4682              MOV      r10,r0                ;284
0003e6  21ff              MOVS     r1,#0xff              ;285
0003e8  4650              MOV      r0,r10                ;285
0003ea  f7fffffe          BL       TEXT_SetTextColor
0003ee  f8980000          LDRB     r0,[r8,#0]            ;286  ; lang
0003f2  b130              CBZ      r0,|L8.1026|
0003f4  490e              LDR      r1,|L8.1072|
0003f6  4650              MOV      r0,r10                ;292
0003f8  f7fffffe          BL       TEXT_SetFont
0003fc  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000400  e062              B        |L8.1224|
                  |L8.1026|
000402  e067              B        |L8.1236|
                  |L8.1028|
                          DCD      Run_Control
                  |L8.1032|
000408  447a0000          DCFS     0x447a0000 ; 1000
                  |L8.1036|
                          DCD      0x00d3d3d3
                  |L8.1040|
000410  00000000          DCFD     0x0000000000000000 ; 0
000414  00000000
                  |L8.1048|
                          DCD      lang
                  |L8.1052|
                          DCD      ||.data||
                  |L8.1056|
                          DCD      GUI_Fontsymbol
                  |L8.1060|
                          DCD      jkflag
                  |L8.1064|
000428  4a696e6b          DCB      "Jinko",0
00042c  6f00    
00042e  00                DCB      0
00042f  00                DCB      0
                  |L8.1072|
                          DCD      GUI_Font20_ASCII
                  |L8.1076|
000434  44495350          DCB      "DISPLAY",0
000438  4c415900
                  |L8.1084|
                          DCD      GUI_Font24_1
                  |L8.1088|
000440  4100              DCB      "A",0
000442  00                DCB      0
000443  00                DCB      0
                  |L8.1092|
000444  5600              DCB      "V",0
000446  00                DCB      0
000447  00                DCB      0
                  |L8.1096|
                          DCD      GUI_FontEN40
                  |L8.1100|
00044c  433a00            DCB      "C:",0
00044f  00                DCB      0
                  |L8.1104|
000450  6d00              DCB      "m",0
000452  00                DCB      0
000453  00                DCB      0
                  |L8.1108|
000454  414800            DCB      "AH",0
000457  00                DCB      0
                  |L8.1112|
                          DCD      GUI_Fontunit
                  |L8.1116|
00045c  c2b000            DCB      194,176,0
00045f  00                DCB      0
                  |L8.1120|
000460  4300              DCB      "C",0
000462  00                DCB      0
000463  00                DCB      0
                  |L8.1124|
                          DCD      GUI_FontHZ20S
                  |L8.1128|
000468  e6b58be9          DCB      230,181,139,233,135,143,230,152,190,231,164,186
00046c  878fe698
000470  bee7a4ba
                  |L8.1140|
000474  00                DCB      0
000475  00                DCB      0
000476  00                DCB      0
000477  00                DCB      0
                  |L8.1144|
                          DCD      lock
                  |L8.1148|
                          DCD      DISS_Voltage
                  |L8.1152|
                          DCD      0x3e99999a
                  |L8.1156|
000484  252e3366          DCB      "%.3f",0
000488  00      
000489  00                DCB      0
00048a  00                DCB      0
00048b  00                DCB      0
                  |L8.1164|
00048c  e9948100          DCB      233,148,129,0
                  |L8.1168|
                          DCD      disloadv
                  |L8.1172|
                          DCD      0x43480000
                  |L8.1176|
                          DCD      temp
                  |L8.1180|
00049c  252e3166          DCB      "%.1f",0
0004a0  00      
0004a1  00                DCB      0
0004a2  00                DCB      0
0004a3  00                DCB      0
                  |L8.1188|
                          DCD      alert_flag
                  |L8.1192|
                          DCD      bc_raw
                  |L8.1196|
                          DCD      battery_c
                  |L8.1200|
0004b0  25303564          DCB      "%05d",0
0004b4  00      
0004b5  00                DCB      0
0004b6  00                DCB      0
0004b7  00                DCB      0
                  |L8.1208|
                          DCD      DISS_Current
                  |L8.1212|
                          DCD      flagA
                  |L8.1216|
                          DCD      0x40020000
                  |L8.1220|
                          DCD      mode_sw
                  |L8.1224|
0004c8  a1fe              ADR      r1,|L8.2244|
0004ca  4650              MOV      r0,r10                ;294
0004cc  f7fffffe          BL       TEXT_SetText
                  |L8.1232|
0004d0  707d              STRB     r5,[r7,#1]            ;296
0004d2  e766              B        |L8.930|
                  |L8.1236|
0004d4  49fe              LDR      r1,|L8.2256|
0004d6  4650              MOV      r0,r10                ;288
0004d8  f7fffffe          BL       TEXT_SetFont
0004dc  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0004e0  a1fc              ADR      r1,|L8.2260|
0004e2  4650              MOV      r0,r10                ;290
0004e4  f7fffffe          BL       TEXT_SetText
0004e8  e7f2              B        |L8.1232|
                  |L8.1258|
0004ea  6865              LDR      r5,[r4,#4]            ;347
0004ec  2100              MOVS     r1,#0                 ;348
0004ee  4628              MOV      r0,r5                 ;348
0004f0  f7fffffe          BL       WINDOW_SetBkColor
0004f4  2300              MOVS     r3,#0                 ;349
0004f6  f44f72fa          MOV      r2,#0x1f4             ;349
0004fa  2102              MOVS     r1,#2                 ;349
0004fc  4628              MOV      r0,r5                 ;349
0004fe  f7fffffe          BL       WM_CreateTimer
000502  4659              MOV      r1,r11                ;361
000504  6860              LDR      r0,[r4,#4]            ;361
000506  f7fffffe          BL       WM_GetDialogItem
00050a  4605              MOV      r5,r0                 ;361
00050c  21ff              MOVS     r1,#0xff              ;362
00050e  4628              MOV      r0,r5                 ;362
000510  f7fffffe          BL       TEXT_SetTextColor
000514  49f2              LDR      r1,|L8.2272|
000516  4628              MOV      r0,r5                 ;363
000518  f7fffffe          BL       TEXT_SetFont
00051c  f2af01ac          ADR      r1,|L8.1140|
000520  4628              MOV      r0,r5                 ;364
000522  f7fffffe          BL       TEXT_SetText
000526  f8980000          LDRB     r0,[r8,#0]            ;367  ; lang
00052a  f640010b          MOV      r1,#0x80b             ;369
00052e  1c8d              ADDS     r5,r1,#2              ;386
000530  f6400b0c          MOV      r11,#0x80c            ;377
000534  2800              CMP      r0,#0                 ;367
000536  d07d              BEQ      |L8.1588|
000538  6860              LDR      r0,[r4,#4]            ;408
00053a  f7fffffe          BL       WM_GetDialogItem
00053e  9002              STR      r0,[sp,#8]            ;408
000540  2200              MOVS     r2,#0                 ;409
000542  4611              MOV      r1,r2                 ;409
000544  9802              LDR      r0,[sp,#8]            ;409
000546  f7fffffe          BL       BUTTON_SetTextColor
00054a  49e6              LDR      r1,|L8.2276|
00054c  9802              LDR      r0,[sp,#8]            ;410
00054e  f7fffffe          BL       BUTTON_SetFont
000552  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000556  a1e4              ADR      r1,|L8.2280|
000558  9802              LDR      r0,[sp,#8]            ;412
00055a  f7fffffe          BL       BUTTON_SetText
00055e  4659              MOV      r1,r11                ;416
000560  6860              LDR      r0,[r4,#4]            ;416
000562  f7fffffe          BL       WM_GetDialogItem
000566  4683              MOV      r11,r0                ;416
000568  2101              MOVS     r1,#1                 ;417
00056a  4658              MOV      r0,r11                ;417
00056c  f7fffffe          BL       BUTTON_SetPressed
000570  2200              MOVS     r2,#0                 ;418
000572  4611              MOV      r1,r2                 ;418
000574  4658              MOV      r0,r11                ;418
000576  f7fffffe          BL       BUTTON_SetTextColor
00057a  49da              LDR      r1,|L8.2276|
00057c  4658              MOV      r0,r11                ;419
00057e  f7fffffe          BL       BUTTON_SetFont
000582  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000586  a1db              ADR      r1,|L8.2292|
000588  4658              MOV      r0,r11                ;421
00058a  f7fffffe          BL       BUTTON_SetText
00058e  4629              MOV      r1,r5                 ;425
000590  6860              LDR      r0,[r4,#4]            ;425
000592  f7fffffe          BL       WM_GetDialogItem
000596  4605              MOV      r5,r0                 ;425
000598  2200              MOVS     r2,#0                 ;426
00059a  4611              MOV      r1,r2                 ;426
00059c  4628              MOV      r0,r5                 ;426
00059e  f7fffffe          BL       BUTTON_SetTextColor
0005a2  49d0              LDR      r1,|L8.2276|
0005a4  4628              MOV      r0,r5                 ;427
0005a6  f7fffffe          BL       BUTTON_SetFont
0005aa  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005ae  a1d3              ADR      r1,|L8.2300|
0005b0  4628              MOV      r0,r5                 ;429
0005b2  f7fffffe          BL       BUTTON_SetText
0005b6  f640010e          MOV      r1,#0x80e             ;433
0005ba  6860              LDR      r0,[r4,#4]            ;433
0005bc  f7fffffe          BL       WM_GetDialogItem
0005c0  4605              MOV      r5,r0                 ;433
0005c2  2200              MOVS     r2,#0                 ;434
0005c4  4611              MOV      r1,r2                 ;434
0005c6  4628              MOV      r0,r5                 ;434
0005c8  f7fffffe          BL       BUTTON_SetTextColor
0005cc  49c5              LDR      r1,|L8.2276|
0005ce  4628              MOV      r0,r5                 ;435
0005d0  f7fffffe          BL       BUTTON_SetFont
0005d4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005d8  a1ca              ADR      r1,|L8.2308|
0005da  4628              MOV      r0,r5                 ;437
0005dc  f7fffffe          BL       BUTTON_SetText
0005e0  f640010f          MOV      r1,#0x80f             ;441
0005e4  6860              LDR      r0,[r4,#4]            ;441
0005e6  f7fffffe          BL       WM_GetDialogItem
0005ea  4605              MOV      r5,r0                 ;441
0005ec  2200              MOVS     r2,#0                 ;442
0005ee  4611              MOV      r1,r2                 ;442
0005f0  4628              MOV      r0,r5                 ;442
0005f2  f7fffffe          BL       BUTTON_SetTextColor
0005f6  49bb              LDR      r1,|L8.2276|
0005f8  4628              MOV      r0,r5                 ;443
0005fa  f7fffffe          BL       BUTTON_SetFont
0005fe  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000602  a1c2              ADR      r1,|L8.2316|
000604  4628              MOV      r0,r5                 ;445
000606  f7fffffe          BL       BUTTON_SetText
                  |L8.1546|
00060a  f44f6101          MOV      r1,#0x810             ;449
00060e  6860              LDR      r0,[r4,#4]            ;449
000610  f7fffffe          BL       WM_GetDialogItem
000614  4605              MOV      r5,r0                 ;449
000616  4649              MOV      r1,r9                 ;450
000618  4628              MOV      r0,r5                 ;450
00061a  f7fffffe          BL       TEXT_SetTextColor
00061e  49bd              LDR      r1,|L8.2324|
000620  4628              MOV      r0,r5                 ;451
000622  f7fffffe          BL       TEXT_SetFont
000626  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00062a  a1bb              ADR      r1,|L8.2328|
00062c  4628              MOV      r0,r5                 ;453
00062e  f7fffffe          BL       TEXT_SetText
000632  e000              B        |L8.1590|
                  |L8.1588|
000634  e126              B        |L8.2180|
                  |L8.1590|
000636  f6400111          MOV      r1,#0x811             ;455
00063a  6860              LDR      r0,[r4,#4]            ;455
00063c  f7fffffe          BL       WM_GetDialogItem
000640  4605              MOV      r5,r0                 ;455
000642  4649              MOV      r1,r9                 ;456
000644  4628              MOV      r0,r5                 ;456
000646  f7fffffe          BL       TEXT_SetTextColor
00064a  49b2              LDR      r1,|L8.2324|
00064c  4628              MOV      r0,r5                 ;457
00064e  f7fffffe          BL       TEXT_SetFont
000652  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000656  a1b1              ADR      r1,|L8.2332|
000658  4628              MOV      r0,r5                 ;459
00065a  f7fffffe          BL       TEXT_SetText
00065e  f640011e          MOV      r1,#0x81e             ;461
000662  6860              LDR      r0,[r4,#4]            ;461
000664  f7fffffe          BL       WM_GetDialogItem
000668  4605              MOV      r5,r0                 ;461
00066a  4649              MOV      r1,r9                 ;462
00066c  4628              MOV      r0,r5                 ;462
00066e  f7fffffe          BL       TEXT_SetTextColor
000672  49a8              LDR      r1,|L8.2324|
000674  4628              MOV      r0,r5                 ;463
000676  f7fffffe          BL       TEXT_SetFont
00067a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00067e  f2af213c          ADR      r1,|L8.1092|
000682  4628              MOV      r0,r5                 ;465
000684  f7fffffe          BL       TEXT_SetText
000688  f640011f          MOV      r1,#0x81f             ;467
00068c  6860              LDR      r0,[r4,#4]            ;467
00068e  f7fffffe          BL       WM_GetDialogItem
000692  4605              MOV      r5,r0                 ;467
000694  4649              MOV      r1,r9                 ;468
000696  4628              MOV      r0,r5                 ;468
000698  f7fffffe          BL       TEXT_SetTextColor
00069c  499d              LDR      r1,|L8.2324|
00069e  4628              MOV      r0,r5                 ;469
0006a0  f7fffffe          BL       TEXT_SetFont
0006a4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006a8  f2af216c          ADR      r1,|L8.1088|
0006ac  4628              MOV      r0,r5                 ;471
0006ae  f7fffffe          BL       TEXT_SetText
0006b2  f640016d          MOV      r1,#0x86d             ;473
0006b6  6860              LDR      r0,[r4,#4]            ;473
0006b8  f7fffffe          BL       WM_GetDialogItem
0006bc  4605              MOV      r5,r0                 ;473
0006be  2100              MOVS     r1,#0                 ;474
0006c0  4628              MOV      r0,r5                 ;474
0006c2  f7fffffe          BL       TEXT_SetTextColor
0006c6  4996              LDR      r1,|L8.2336|
0006c8  4628              MOV      r0,r5                 ;475
0006ca  f7fffffe          BL       TEXT_SetBkColor
0006ce  f8980000          LDRB     r0,[r8,#0]            ;476  ; lang
0006d2  2800              CMP      r0,#0                 ;476
0006d4  d07e              BEQ      |L8.2004|
0006d6  4993              LDR      r1,|L8.2340|
0006d8  4628              MOV      r0,r5                 ;482
0006da  f7fffffe          BL       TEXT_SetFont
0006de  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006e2  a191              ADR      r1,|L8.2344|
0006e4  4628              MOV      r0,r5                 ;484
0006e6  f7fffffe          BL       TEXT_SetText
                  |L8.1770|
0006ea  f640016e          MOV      r1,#0x86e             ;487
0006ee  6860              LDR      r0,[r4,#4]            ;487
0006f0  f7fffffe          BL       WM_GetDialogItem
0006f4  4605              MOV      r5,r0                 ;487
0006f6  ee1a0a10          VMOV     r0,s20                ;488
0006fa  f7fffffe          BL       __aeabi_f2d
0006fe  ec410b10          VMOV     d0,r0,r1              ;488
000702  ec532b10          VMOV     r2,r3,d0              ;488
000706  f2af2184          ADR      r1,|L8.1156|
00070a  4668              MOV      r0,sp                 ;488
00070c  f7fffffe          BL       __2sprintf
000710  4651              MOV      r1,r10                ;489
000712  4628              MOV      r0,r5                 ;489
000714  f7fffffe          BL       TEXT_SetTextColor
000718  4985              LDR      r1,|L8.2352|
00071a  4628              MOV      r0,r5                 ;490
00071c  f7fffffe          BL       TEXT_SetFont
000720  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000724  4669              MOV      r1,sp                 ;492
000726  4628              MOV      r0,r5                 ;492
000728  f7fffffe          BL       TEXT_SetText
00072c  f640112d          MOV      r1,#0x92d             ;494
000730  6860              LDR      r0,[r4,#4]            ;494
000732  f7fffffe          BL       WM_GetDialogItem
000736  4605              MOV      r5,r0                 ;494
000738  68b8              LDR      r0,[r7,#8]            ;495  ; load_cutoffv
00073a  f7fffffe          BL       __aeabi_f2d
00073e  ec410b10          VMOV     d0,r0,r1              ;495
000742  ec532b10          VMOV     r2,r3,d0              ;495
000746  f2af21c4          ADR      r1,|L8.1156|
00074a  4668              MOV      r0,sp                 ;495
00074c  f7fffffe          BL       __2sprintf
000750  4651              MOV      r1,r10                ;496
000752  4628              MOV      r0,r5                 ;496
000754  f7fffffe          BL       TEXT_SetTextColor
000758  4975              LDR      r1,|L8.2352|
00075a  4628              MOV      r0,r5                 ;497
00075c  f7fffffe          BL       TEXT_SetFont
000760  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000764  4669              MOV      r1,sp                 ;499
000766  4628              MOV      r0,r5                 ;499
000768  f7fffffe          BL       TEXT_SetText
00076c  f6400191          MOV      r1,#0x891             ;501
000770  6860              LDR      r0,[r4,#4]            ;501
000772  f7fffffe          BL       WM_GetDialogItem
000776  4605              MOV      r5,r0                 ;501
000778  ec532b18          VMOV     r2,r3,d8              ;502
00077c  f2af21fc          ADR      r1,|L8.1156|
000780  4668              MOV      r0,sp                 ;502
000782  f7fffffe          BL       __2sprintf
000786  4631              MOV      r1,r6                 ;503
000788  4628              MOV      r0,r5                 ;503
00078a  f7fffffe          BL       TEXT_SetTextColor
00078e  4969              LDR      r1,|L8.2356|
000790  4628              MOV      r0,r5                 ;504
000792  f7fffffe          BL       TEXT_SetFont
000796  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00079a  4669              MOV      r1,sp                 ;506
00079c  4628              MOV      r0,r5                 ;506
00079e  f7fffffe          BL       TEXT_SetText
0007a2  f6400192          MOV      r1,#0x892             ;508
0007a6  6860              LDR      r0,[r4,#4]            ;508
0007a8  f7fffffe          BL       WM_GetDialogItem
0007ac  4605              MOV      r5,r0                 ;508
0007ae  ec532b18          VMOV     r2,r3,d8              ;509
0007b2  f2af3130          ADR      r1,|L8.1156|
0007b6  4668              MOV      r0,sp                 ;509
0007b8  f7fffffe          BL       __2sprintf
0007bc  4631              MOV      r1,r6                 ;510
0007be  4628              MOV      r0,r5                 ;510
0007c0  f7fffffe          BL       TEXT_SetTextColor
0007c4  495b              LDR      r1,|L8.2356|
0007c6  4628              MOV      r0,r5                 ;511
0007c8  f7fffffe          BL       TEXT_SetFont
0007cc  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0007d0  4669              MOV      r1,sp                 ;513
0007d2  e000              B        |L8.2006|
                  |L8.2004|
0007d4  e115              B        |L8.2562|
                  |L8.2006|
0007d6  4628              MOV      r0,r5                 ;513
0007d8  f7fffffe          BL       TEXT_SetText
0007dc  f640110d          MOV      r1,#0x90d             ;515
0007e0  6860              LDR      r0,[r4,#4]            ;515
0007e2  f7fffffe          BL       WM_GetDialogItem
0007e6  4605              MOV      r5,r0                 ;515
0007e8  2200              MOVS     r2,#0                 ;516
0007ea  f2af313c          ADR      r1,|L8.1200|
0007ee  4668              MOV      r0,sp                 ;516
0007f0  f7fffffe          BL       __2sprintf
0007f4  4631              MOV      r1,r6                 ;517
0007f6  4628              MOV      r0,r5                 ;517
0007f8  f7fffffe          BL       TEXT_SetTextColor
0007fc  494d              LDR      r1,|L8.2356|
0007fe  4628              MOV      r0,r5                 ;518
000800  f7fffffe          BL       TEXT_SetFont
000804  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000808  4669              MOV      r1,sp                 ;520
00080a  4628              MOV      r0,r5                 ;520
00080c  f7fffffe          BL       TEXT_SetText
000810  f8980000          LDRB     r0,[r8,#0]            ;521  ; lang
000814  f640110e          MOV      r1,#0x90e             ;523
000818  f6401539          MOV      r5,#0x939             ;529
00081c  2800              CMP      r0,#0                 ;521
00081e  d04f              BEQ      |L8.2240|
000820  6860              LDR      r0,[r4,#4]            ;535
000822  f7fffffe          BL       WM_GetDialogItem
000826  4681              MOV      r9,r0                 ;535
000828  4651              MOV      r1,r10                ;536
00082a  4648              MOV      r0,r9                 ;536
00082c  f7fffffe          BL       TEXT_SetTextColor
000830  493c              LDR      r1,|L8.2340|
000832  4648              MOV      r0,r9                 ;537
000834  f7fffffe          BL       TEXT_SetFont
000838  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00083c  a13e              ADR      r1,|L8.2360|
00083e  4648              MOV      r0,r9                 ;539
000840  f7fffffe          BL       TEXT_SetText
000844  4629              MOV      r1,r5                 ;541
000846  6860              LDR      r0,[r4,#4]            ;541
000848  f7fffffe          BL       WM_GetDialogItem
00084c  4605              MOV      r5,r0                 ;541
00084e  4651              MOV      r1,r10                ;542
000850  4628              MOV      r0,r5                 ;542
000852  f7fffffe          BL       TEXT_SetTextColor
000856  4933              LDR      r1,|L8.2340|
000858  4628              MOV      r0,r5                 ;543
00085a  f7fffffe          BL       TEXT_SetFont
00085e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000862  a137              ADR      r1,|L8.2368|
000864  4628              MOV      r0,r5                 ;545
000866  f7fffffe          BL       TEXT_SetText
                  |L8.2154|
00086a  78b8              LDRB     r0,[r7,#2]            ;548  ; load_mode
00086c  f8df90dc          LDR      r9,|L8.2380|
000870  4d37              LDR      r5,|L8.2384|
000872  f640110f          MOV      r1,#0x90f             ;550
000876  f44f6780          MOV      r7,#0x400             ;554
00087a  2801              CMP      r0,#1                 ;548
00087c  d072              BEQ      |L8.2404|
00087e  2800              CMP      r0,#0                 ;557
000880  d071              BEQ      |L8.2406|
000882  e124              B        |L8.2766|
                  |L8.2180|
000884  6860              LDR      r0,[r4,#4]            ;369
000886  f7fffffe          BL       WM_GetDialogItem
00088a  9002              STR      r0,[sp,#8]            ;369
00088c  2200              MOVS     r2,#0                 ;370
00088e  4611              MOV      r1,r2                 ;370
000890  9802              LDR      r0,[sp,#8]            ;370
000892  f7fffffe          BL       BUTTON_SetTextColor
000896  490e              LDR      r1,|L8.2256|
000898  9802              LDR      r0,[sp,#8]            ;371
00089a  f7fffffe          BL       BUTTON_SetFont
00089e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0008a2  a12c              ADR      r1,|L8.2388|
0008a4  9802              LDR      r0,[sp,#8]            ;373
0008a6  f7fffffe          BL       BUTTON_SetText
0008aa  4659              MOV      r1,r11                ;377
0008ac  6860              LDR      r0,[r4,#4]            ;377
0008ae  f7fffffe          BL       WM_GetDialogItem
0008b2  4683              MOV      r11,r0                ;377
0008b4  2101              MOVS     r1,#1                 ;378
0008b6  4658              MOV      r0,r11                ;378
0008b8  f7fffffe          BL       BUTTON_SetPressed
0008bc  2200              MOVS     r2,#0                 ;379
0008be  e053              B        |L8.2408|
                  |L8.2240|
0008c0  e0aa              B        |L8.2584|
                  |L8.2242|
0008c2  e175              B        |L8.2992|
                  |L8.2244|
0008c4  44697363          DCB      "Discharging",0
0008c8  68617267
0008cc  696e6700
                  |L8.2256|
                          DCD      GUI_FontHZ16
                  |L8.2260|
0008d4  e694bee7          DCB      230,148,190,231,148,181,228,184,173,0
0008d8  94b5e4b8
0008dc  ad00    
0008de  00                DCB      0
0008df  00                DCB      0
                  |L8.2272|
                          DCD      GUI_FontHZ14
                  |L8.2276|
                          DCD      GUI_Font16B_ASCII
                  |L8.2280|
0008e8  492e522e          DCB      "I.R. TEST",0
0008ec  20544553
0008f0  5400    
0008f2  00                DCB      0
0008f3  00                DCB      0
                  |L8.2292|
0008f4  4c4f4144          DCB      "LOAD",0
0008f8  00      
0008f9  00                DCB      0
0008fa  00                DCB      0
0008fb  00                DCB      0
                  |L8.2300|
0008fc  504f5745          DCB      "POWER",0
000900  5200    
000902  00                DCB      0
000903  00                DCB      0
                  |L8.2308|
000904  43264443          DCB      "C&DC",0
000908  00      
000909  00                DCB      0
00090a  00                DCB      0
00090b  00                DCB      0
                  |L8.2316|
00090c  47524150          DCB      "GRAPH",0
000910  4800    
000912  00                DCB      0
000913  00                DCB      0
                  |L8.2324|
                          DCD      GUI_FontEN40
                  |L8.2328|
000918  563a00            DCB      "V:",0
00091b  00                DCB      0
                  |L8.2332|
00091c  493a00            DCB      "I:",0
00091f  00                DCB      0
                  |L8.2336|
                          DCD      0x00bfffff
                  |L8.2340|
                          DCD      GUI_Font20_ASCII
                  |L8.2344|
000928  4c6f6164          DCB      "Load C",0
00092c  204300  
00092f  00                DCB      0
                  |L8.2352|
                          DCD      GUI_Font24_1
                  |L8.2356|
                          DCD      GUI_FontD24x32
                  |L8.2360|
000938  4d6f6465          DCB      "Mode",0
00093c  00      
00093d  00                DCB      0
00093e  00                DCB      0
00093f  00                DCB      0
                  |L8.2368|
000940  4375746f          DCB      "Cutoff V",0
000944  66662056
000948  00      
000949  00                DCB      0
00094a  00                DCB      0
00094b  00                DCB      0
                  |L8.2380|
                          DCD      0x40020800
                  |L8.2384|
                          DCD      flagD
                  |L8.2388|
000954  e58685e9          DCB      229,134,133,233,152,187,230,181,139,232,175,149,0
000958  98bbe6b5
00095c  8be8af95
000960  00      
000961  00                DCB      0
000962  00                DCB      0
000963  00                DCB      0
                  |L8.2404|
000964  e07e              B        |L8.2660|
                  |L8.2406|
000966  e098              B        |L8.2714|
                  |L8.2408|
000968  4611              MOV      r1,r2                 ;379
00096a  4658              MOV      r0,r11                ;379
00096c  f7fffffe          BL       BUTTON_SetTextColor
000970  4991              LDR      r1,|L8.3000|
000972  4658              MOV      r0,r11                ;380
000974  f7fffffe          BL       BUTTON_SetFont
000978  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00097c  a18f              ADR      r1,|L8.3004|
00097e  4658              MOV      r0,r11                ;382
000980  f7fffffe          BL       BUTTON_SetText
000984  4629              MOV      r1,r5                 ;386
000986  6860              LDR      r0,[r4,#4]            ;386
000988  f7fffffe          BL       WM_GetDialogItem
00098c  4605              MOV      r5,r0                 ;386
00098e  2200              MOVS     r2,#0                 ;387
000990  4611              MOV      r1,r2                 ;387
000992  4628              MOV      r0,r5                 ;387
000994  f7fffffe          BL       BUTTON_SetTextColor
000998  4987              LDR      r1,|L8.3000|
00099a  4628              MOV      r0,r5                 ;388
00099c  f7fffffe          BL       BUTTON_SetFont
0009a0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0009a4  a189              ADR      r1,|L8.3020|
0009a6  4628              MOV      r0,r5                 ;390
0009a8  f7fffffe          BL       BUTTON_SetText
0009ac  f640010e          MOV      r1,#0x80e             ;394
0009b0  6860              LDR      r0,[r4,#4]            ;394
0009b2  f7fffffe          BL       WM_GetDialogItem
0009b6  4605              MOV      r5,r0                 ;394
0009b8  2200              MOVS     r2,#0                 ;395
0009ba  4611              MOV      r1,r2                 ;395
0009bc  4628              MOV      r0,r5                 ;395
0009be  f7fffffe          BL       BUTTON_SetTextColor
0009c2  497d              LDR      r1,|L8.3000|
0009c4  4628              MOV      r0,r5                 ;396
0009c6  f7fffffe          BL       BUTTON_SetFont
0009ca  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0009ce  a183              ADR      r1,|L8.3036|
0009d0  4628              MOV      r0,r5                 ;398
0009d2  f7fffffe          BL       BUTTON_SetText
0009d6  f640010f          MOV      r1,#0x80f             ;402
0009da  6860              LDR      r0,[r4,#4]            ;402
0009dc  f7fffffe          BL       WM_GetDialogItem
0009e0  4605              MOV      r5,r0                 ;402
0009e2  2200              MOVS     r2,#0                 ;403
0009e4  4611              MOV      r1,r2                 ;403
0009e6  4628              MOV      r0,r5                 ;403
0009e8  f7fffffe          BL       BUTTON_SetTextColor
0009ec  4972              LDR      r1,|L8.3000|
0009ee  4628              MOV      r0,r5                 ;404
0009f0  f7fffffe          BL       BUTTON_SetFont
0009f4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0009f8  a17b              ADR      r1,|L8.3048|
0009fa  4628              MOV      r0,r5                 ;406
0009fc  f7fffffe          BL       BUTTON_SetText
000a00  e603              B        |L8.1546|
                  |L8.2562|
000a02  497b              LDR      r1,|L8.3056|
000a04  4628              MOV      r0,r5                 ;478
000a06  f7fffffe          BL       TEXT_SetFont
000a0a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000a0e  a179              ADR      r1,|L8.3060|
000a10  4628              MOV      r0,r5                 ;480
000a12  f7fffffe          BL       TEXT_SetText
000a16  e668              B        |L8.1770|
                  |L8.2584|
000a18  6860              LDR      r0,[r4,#4]            ;523
000a1a  f7fffffe          BL       WM_GetDialogItem
000a1e  4681              MOV      r9,r0                 ;523
000a20  4651              MOV      r1,r10                ;524
000a22  4648              MOV      r0,r9                 ;524
000a24  f7fffffe          BL       TEXT_SetTextColor
000a28  4971              LDR      r1,|L8.3056|
000a2a  4648              MOV      r0,r9                 ;525
000a2c  f7fffffe          BL       TEXT_SetFont
000a30  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000a34  a173              ADR      r1,|L8.3076|
000a36  4648              MOV      r0,r9                 ;527
000a38  f7fffffe          BL       TEXT_SetText
000a3c  4629              MOV      r1,r5                 ;529
000a3e  6860              LDR      r0,[r4,#4]            ;529
000a40  f7fffffe          BL       WM_GetDialogItem
000a44  4605              MOV      r5,r0                 ;529
000a46  4651              MOV      r1,r10                ;530
000a48  4628              MOV      r0,r5                 ;530
000a4a  f7fffffe          BL       TEXT_SetTextColor
000a4e  4968              LDR      r1,|L8.3056|
000a50  4628              MOV      r0,r5                 ;531
000a52  f7fffffe          BL       TEXT_SetFont
000a56  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000a5a  a16e              ADR      r1,|L8.3092|
000a5c  4628              MOV      r0,r5                 ;533
000a5e  f7fffffe          BL       TEXT_SetText
000a62  e702              B        |L8.2154|
                  |L8.2660|
000a64  6860              LDR      r0,[r4,#4]            ;550
000a66  f7fffffe          BL       WM_GetDialogItem
000a6a  4683              MOV      r11,r0                ;550
000a6c  4651              MOV      r1,r10                ;551
000a6e  4658              MOV      r0,r11                ;551
000a70  f7fffffe          BL       TEXT_SetTextColor
000a74  496b              LDR      r1,|L8.3108|
000a76  4658              MOV      r0,r11                ;552
000a78  f7fffffe          BL       TEXT_SetFont
000a7c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000a80  4639              MOV      r1,r7                 ;554
000a82  4648              MOV      r0,r9                 ;554
000a84  f7fffffe          BL       GPIO_SetBits
000a88  a167              ADR      r1,|L8.3112|
000a8a  4658              MOV      r0,r11                ;555
000a8c  f7fffffe          BL       TEXT_SetText
000a90  6828              LDR      r0,[r5,#0]            ;556  ; flagD
000a92  f0400080          ORR      r0,r0,#0x80           ;556
000a96  6028              STR      r0,[r5,#0]            ;556  ; flagD
000a98  e019              B        |L8.2766|
                  |L8.2714|
000a9a  6860              LDR      r0,[r4,#4]            ;558
000a9c  f7fffffe          BL       WM_GetDialogItem
000aa0  4683              MOV      r11,r0                ;558
000aa2  4651              MOV      r1,r10                ;559
000aa4  4658              MOV      r0,r11                ;559
000aa6  f7fffffe          BL       TEXT_SetTextColor
000aaa  495e              LDR      r1,|L8.3108|
000aac  4658              MOV      r0,r11                ;560
000aae  f7fffffe          BL       TEXT_SetFont
000ab2  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000ab6  4639              MOV      r1,r7                 ;562
000ab8  4648              MOV      r0,r9                 ;562
000aba  f7fffffe          BL       GPIO_ResetBits
000abe  a15b              ADR      r1,|L8.3116|
000ac0  4658              MOV      r0,r11                ;563
000ac2  f7fffffe          BL       TEXT_SetText
000ac6  6828              LDR      r0,[r5,#0]            ;564  ; flagD
000ac8  f0200080          BIC      r0,r0,#0x80           ;564
000acc  6028              STR      r0,[r5,#0]            ;564  ; flagD
                  |L8.2766|
000ace  f8980000          LDRB     r0,[r8,#0]            ;567  ; lang
000ad2  f44f6111          MOV      r1,#0x910             ;569
000ad6  b3e8              CBZ      r0,|L8.2900|
000ad8  6860              LDR      r0,[r4,#4]            ;575
000ada  f7fffffe          BL       WM_GetDialogItem
000ade  4605              MOV      r5,r0                 ;575
000ae0  4651              MOV      r1,r10                ;576
000ae2  4628              MOV      r0,r5                 ;576
000ae4  f7fffffe          BL       TEXT_SetTextColor
000ae8  4951              LDR      r1,|L8.3120|
000aea  4628              MOV      r0,r5                 ;577
000aec  f7fffffe          BL       TEXT_SetFont
000af0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000af4  a14f              ADR      r1,|L8.3124|
000af6  4628              MOV      r0,r5                 ;579
000af8  f7fffffe          BL       TEXT_SetText
                  |L8.2812|
000afc  f6401111          MOV      r1,#0x911             ;582
000b00  6860              LDR      r0,[r4,#4]            ;582
000b02  f7fffffe          BL       WM_GetDialogItem
000b06  4605              MOV      r5,r0                 ;582
000b08  ee190a10          VMOV     r0,s18                ;583
000b0c  f7fffffe          BL       __aeabi_f2d
000b10  ec410b10          VMOV     d0,r0,r1              ;583
000b14  ec532b10          VMOV     r2,r3,d0              ;583
000b18  f2af6198          ADR      r1,|L8.1156|
000b1c  4668              MOV      r0,sp                 ;583
000b1e  f7fffffe          BL       __2sprintf
000b22  4651              MOV      r1,r10                ;584
000b24  4628              MOV      r0,r5                 ;584
000b26  f7fffffe          BL       TEXT_SetTextColor
000b2a  493e              LDR      r1,|L8.3108|
000b2c  4628              MOV      r0,r5                 ;585
000b2e  f7fffffe          BL       TEXT_SetFont
000b32  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000b36  4669              MOV      r1,sp                 ;587
000b38  4628              MOV      r0,r5                 ;587
000b3a  f7fffffe          BL       TEXT_SetText
000b3e  f6401112          MOV      r1,#0x912             ;589
000b42  6860              LDR      r0,[r4,#4]            ;589
000b44  f7fffffe          BL       WM_GetDialogItem
000b48  4604              MOV      r4,r0                 ;589
000b4a  4631              MOV      r1,r6                 ;590
000b4c  4620              MOV      r0,r4                 ;590
000b4e  f7fffffe          BL       TEXT_SetTextColor
000b52  e000              B        |L8.2902|
                  |L8.2900|
000b54  e019              B        |L8.2954|
                  |L8.2902|
000b56  4933              LDR      r1,|L8.3108|
000b58  4620              MOV      r0,r4                 ;591
000b5a  f7fffffe          BL       TEXT_SetFont
000b5e  4837              LDR      r0,|L8.3132|
000b60  6800              LDR      r0,[r0,#0]            ;592  ; temp
000b62  f7fffffe          BL       __aeabi_f2d
000b66  ec410b10          VMOV     d0,r0,r1              ;592
000b6a  ec532b10          VMOV     r2,r3,d0              ;592
000b6e  f2af61d4          ADR      r1,|L8.1180|
000b72  4668              MOV      r0,sp                 ;592
000b74  f7fffffe          BL       __2sprintf
000b78  4669              MOV      r1,sp                 ;593
000b7a  4620              MOV      r0,r4                 ;593
000b7c  f7fffffe          BL       TEXT_SetText
                  |L8.2944|
000b80  b003              ADD      sp,sp,#0xc
000b82  ecbd8b06          VPOP     {d8-d10}
000b86  e8bd8ff0          POP      {r4-r11,pc}
                  |L8.2954|
000b8a  6860              LDR      r0,[r4,#4]            ;569
000b8c  f7fffffe          BL       WM_GetDialogItem
000b90  4605              MOV      r5,r0                 ;569
000b92  4651              MOV      r1,r10                ;570
000b94  4628              MOV      r0,r5                 ;570
000b96  f7fffffe          BL       TEXT_SetTextColor
000b9a  4915              LDR      r1,|L8.3056|
000b9c  4628              MOV      r0,r5                 ;571
000b9e  f7fffffe          BL       TEXT_SetFont
000ba2  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000ba6  a126              ADR      r1,|L8.3136|
000ba8  4628              MOV      r0,r5                 ;573
000baa  f7fffffe          BL       TEXT_SetText
000bae  e7a5              B        |L8.2812|
                  |L8.2992|
000bb0  68a0              LDR      r0,[r4,#8]            ;600
000bb2  f7fffffe          BL       WM_GetId
000bb6  e7e3              B        |L8.2944|
;;;699    
                          ENDP

                  |L8.3000|
                          DCD      GUI_FontHZ16
                  |L8.3004|
000bbc  e7a88be6          DCB      231,168,139,230,142,167,232,180,159,232,189,189,0
000bc0  8ea7e8b4
000bc4  9fe8bdbd
000bc8  00      
000bc9  00                DCB      0
000bca  00                DCB      0
000bcb  00                DCB      0
                  |L8.3020|
000bcc  e7a88be6          DCB      231,168,139,230,142,167,231,148,181,230,186,144,0
000bd0  8ea7e794
000bd4  b5e6ba90
000bd8  00      
000bd9  00                DCB      0
000bda  00                DCB      0
000bdb  00                DCB      0
                  |L8.3036|
000bdc  e58585e6          DCB      229,133,133,230,148,190,231,148,181,0
000be0  94bee794
000be4  b500    
000be6  00                DCB      0
000be7  00                DCB      0
                  |L8.3048|
000be8  e69bb2e7          DCB      230,155,178,231,186,191,0
000bec  babf00  
000bef  00                DCB      0
                  |L8.3056|
                          DCD      GUI_Fontset_font
                  |L8.3060|
000bf4  e8b49fe8          DCB      232,180,159,232,189,189,231,148,181,230,181,129,0
000bf8  bdbde794
000bfc  b5e6b581
000c00  00      
000c01  00                DCB      0
000c02  00                DCB      0
000c03  00                DCB      0
                  |L8.3076|
000c04  e8b49fe8          DCB      232,180,159,232,189,189,230,168,161,229,188,143,0
000c08  bdbde6a8
000c0c  a1e5bc8f
000c10  00      
000c11  00                DCB      0
000c12  00                DCB      0
000c13  00                DCB      0
                  |L8.3092|
000c14  e688aae6          DCB      230,136,170,230,173,162,231,148,181,229,142,139,0
000c18  ada2e794
000c1c  b5e58e8b
000c20  00      
000c21  00                DCB      0
000c22  00                DCB      0
000c23  00                DCB      0
                  |L8.3108|
                          DCD      GUI_Font24_1
                  |L8.3112|
000c28  434300            DCB      "CC",0
000c2b  00                DCB      0
                  |L8.3116|
000c2c  435600            DCB      "CV",0
000c2f  00                DCB      0
                  |L8.3120|
                          DCD      GUI_Font20_ASCII
                  |L8.3124|
000c34  4c6f6164          DCB      "Load V",0
000c38  205600  
000c3b  00                DCB      0
                  |L8.3132|
                          DCD      temp
                  |L8.3136|
000c40  e8b49fe8          DCB      232,180,159,232,189,189,231,148,181,229,142,139,0
000c44  bdbde794
000c48  b5e58e8b
000c4c  00      
000c4d  00                DCB      0
000c4e  00                DCB      0
000c4f  00                DCB      0

                          AREA ||i.test_load||, CODE, READONLY, ALIGN=2

                  test_load PROC
;;;1446   
;;;1447   void test_load(void)
000000  b570              PUSH     {r4-r6,lr}
;;;1448   {
;;;1449   
;;;1450       if(load_sw == load_on && para_set1 == set_1_on)
000002  4827              LDR      r0,|L9.160|
000004  7802              LDRB     r2,[r0,#0]  ; load_sw
;;;1451       {
;;;1452           if(DISS_Voltage*100 > set_max_v || DISS_Voltage*100 < set_min_v)
;;;1453           {
;;;1454              if(para_set4 == set_4_on){
;;;1455                   BEEP_Tiggr();
;;;1456               }
;;;1457               TM1650_SET_LED(0x68,0x70);//FAIL灯
;;;1458               GPIO_SetBits(GPIOD,GPIO_Pin_12);//            
000006  4d27              LDR      r5,|L9.164|
000008  f44f5480          MOV      r4,#0x1000
00000c  2a01              CMP      r2,#1                 ;1450
00000e  d103              BNE      |L9.24|
000010  4825              LDR      r0,|L9.168|
000012  7800              LDRB     r0,[r0,#0]            ;1450  ; para_set1
000014  28ff              CMP      r0,#0xff              ;1450
000016  d009              BEQ      |L9.44|
                  |L9.24|
;;;1459           }else{
;;;1460               GPIO_ResetBits(GPIOD,GPIO_Pin_12);
;;;1461               TM1650_SET_LED(0x48,0x71);
;;;1462               TM1650_SET_LED(0x68,0xF2);//PASS灯
;;;1463           }        
;;;1464       }else
;;;1465       {
;;;1466           TM1650_SET_LED(0x68,0x70);
000018  2170              MOVS     r1,#0x70
00001a  2068              MOVS     r0,#0x68
00001c  f7fffffe          BL       TM1650_SET_LED
;;;1467           GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
000020  4621              MOV      r1,r4
000022  4628              MOV      r0,r5
000024  e8bd4070          POP      {r4-r6,lr}
000028  f7ffbffe          B.W      GPIO_ResetBits
                  |L9.44|
00002c  4a1f              LDR      r2,|L9.172|
00002e  ed9f0a20          VLDR     s0,|L9.176|
000032  edd20a00          VLDR     s1,[r2,#0]            ;1452
000036  4a1f              LDR      r2,|L9.180|
000038  ee200a80          VMUL.F32 s0,s1,s0              ;1452
00003c  6b93              LDR      r3,[r2,#0x38]         ;1452  ; Run_Control
00003e  ee003a90          VMOV     s1,r3                 ;1452
000042  eef80a60          VCVT.F32.U32 s1,s1                 ;1452
000046  eeb40ae0          VCMPE.F32 s0,s1                 ;1452
00004a  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1452
00004e  dc09              BGT      |L9.100|
000050  6bd2              LDR      r2,[r2,#0x3c]         ;1452  ; Run_Control
000052  ee002a90          VMOV     s1,r2                 ;1452
000056  eef80a60          VCVT.F32.U32 s1,s1                 ;1452
00005a  eeb40ae0          VCMPE.F32 s0,s1                 ;1452
00005e  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1452
000062  d20f              BCS      |L9.132|
                  |L9.100|
000064  4814              LDR      r0,|L9.184|
000066  7800              LDRB     r0,[r0,#0]            ;1454  ; para_set4
000068  28ff              CMP      r0,#0xff              ;1454
00006a  d101              BNE      |L9.112|
00006c  f7fffffe          BL       BEEP_Tiggr
                  |L9.112|
000070  2170              MOVS     r1,#0x70              ;1457
000072  2068              MOVS     r0,#0x68              ;1457
000074  f7fffffe          BL       TM1650_SET_LED
000078  4621              MOV      r1,r4                 ;1458
00007a  4628              MOV      r0,r5                 ;1458
00007c  e8bd4070          POP      {r4-r6,lr}            ;1458
000080  f7ffbffe          B.W      GPIO_SetBits
                  |L9.132|
000084  4621              MOV      r1,r4                 ;1460
000086  4628              MOV      r0,r5                 ;1460
000088  f7fffffe          BL       GPIO_ResetBits
00008c  2171              MOVS     r1,#0x71              ;1461
00008e  2048              MOVS     r0,#0x48              ;1461
000090  f7fffffe          BL       TM1650_SET_LED
000094  e8bd4070          POP      {r4-r6,lr}            ;1462
000098  21f2              MOVS     r1,#0xf2              ;1462
00009a  2068              MOVS     r0,#0x68              ;1462
00009c  f7ffbffe          B.W      TM1650_SET_LED
;;;1468       }
;;;1469   }
                          ENDP

                  |L9.160|
                          DCD      ||.data||
                  |L9.164|
                          DCD      0x40020c00
                  |L9.168|
                          DCD      para_set1
                  |L9.172|
                          DCD      DISS_Voltage
                  |L9.176|
0000b0  42c80000          DCFS     0x42c80000 ; 100
                  |L9.180|
                          DCD      Run_Control
                  |L9.184|
                          DCD      para_set4

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aDialogCreate2
                          DCD      WINDOW_CreateIndirect
                          DCD      ||.conststring||
000008  08090000          DCW      0x0809,0x0000
00000c  000001e0          DCW      0x0000,0x01e0
000010  01100000          DCW      0x0110,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  080b0053          DCW      0x080b,0x0053
000028  00e2004d          DCW      0x00e2,0x004d
00002c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000040  080c00a3          DCW      0x080c,0x00a3
000044  00e2004d          DCW      0x00e2,0x004d
000048  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
00005c  080d00f3          DCW      0x080d,0x00f3
000060  00e2004d          DCW      0x00e2,0x004d
000064  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000078  080e0143          DCW      0x080e,0x0143
00007c  00e2004d          DCW      0x00e2,0x004d
000080  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000094  080f0193          DCW      0x080f,0x0193
000098  00e2004d          DCW      0x00e2,0x004d
00009c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000b0  0810001c          DCW      0x0810,0x001c
0000b4  00320040          DCW      0x0032,0x0040
0000b8  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000cc  0811001c          DCW      0x0811,0x001c
0000d0  00780040          DCW      0x0078,0x0040
0000d4  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000e8  081e00f0          DCW      0x081e,0x00f0
0000ec  00320020          DCW      0x0032,0x0020
0000f0  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000104  081f00f0          DCW      0x081f,0x00f0
000108  00790020          DCW      0x0079,0x0020
00010c  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000120  086d0122          DCW      0x086d,0x0122
000124  004b0050          DCW      0x004b,0x0050
000128  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00013c  086e017c          DCW      0x086e,0x017c
000140  004b0041          DCW      0x004b,0x0041
000144  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000158  090e0122          DCW      0x090e,0x0122
00015c  007d0050          DCW      0x007d,0x0050
000160  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000174  09390122          DCW      0x0939,0x0122
000178  00960050          DCW      0x0096,0x0050
00017c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000190  090f017c          DCW      0x090f,0x017c
000194  007d0041          DCW      0x007d,0x0041
000198  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001ac  09100122          DCW      0x0910,0x0122
0001b0  00640050          DCW      0x0064,0x0050
0001b4  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001c8  0911017c          DCW      0x0911,0x017c
0001cc  00640041          DCW      0x0064,0x0041
0001d0  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001e4  0891005f          DCW      0x0891,0x005f
0001e8  00300096          DCW      0x0030,0x0096
0001ec  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000200  0892005f          DCW      0x0892,0x005f
000204  00740096          DCW      0x0074,0x0096
000208  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00021c  08960190          DCW      0x0896,0x0190
000220  00040050          DCW      0x0004,0x0050
000224  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000238  090d005f          DCW      0x090d,0x005f
00023c  00b80096          DCW      0x00b8,0x0096
000240  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000254  0912012c          DCW      0x0912,0x012c
000258  00020050          DCW      0x0002,0x0050
00025c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000270  092d017c          DCW      0x092d,0x017c
000274  00960041          DCW      0x0096,0x0041
000278  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00028c  093d017c          DCW      0x093d,0x017c
000290  00080014          DCW      0x0008,0x0014
000294  000f0000          DCW      0x000f,0x0000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  57696e64          DCB      "Window",0
000004  6f7700  
000007  00                DCB      0
000008  42757474          DCB      "Button",0
00000c  6f6e00  
00000f  00                DCB      0
000010  54657874          DCB      "Text",0
000014  00      

                          AREA ||.data||, DATA, ALIGN=2

                  load_sw
000000  00                DCB      0x00
                  status_flash
000001  00                DCB      0x00
                  load_mode
000002  0000              DCB      0x00,0x00
                  load_wind
                          DCD      0x00000000
                  load_cutoffv
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\APP\\load_Face.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_load_Face_c_load_sw____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_load_Face_c_load_sw____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_load_Face_c_load_sw____REVSH|
#line 144
|__asm___11_load_Face_c_load_sw____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
