; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\load_face.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\load_face.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\load_face.crf --no_multibyte_chars ..\APP\load_Face.c]
                          THUMB

                          AREA ||i.CreateWindow2||, CODE, READONLY, ALIGN=2

                  CreateWindow2 PROC
;;;684    
;;;685    WM_HWIN CreateWindow2(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;686      if(page_sw == face_graph)
000002  4c23              LDR      r4,|L1.144|
000004  7820              LDRB     r0,[r4,#0]  ; page_sw
000006  2800              CMP      r0,#0
000008  d001              BEQ      |L1.14|
;;;687      {      
;;;688      }else{
;;;689          IO_OFF();
00000a  f7fffffe          BL       IO_OFF
                  |L1.14|
;;;690      }
;;;691      page_sw = face_load;
00000e  2004              MOVS     r0,#4
000010  7020              STRB     r0,[r4,#0]
;;;692      track = face_load;
000012  4920              LDR      r1,|L1.148|
000014  7008              STRB     r0,[r1,#0]
;;;693      set_sw = set_24;
000016  4920              LDR      r1,|L1.152|
000018  2017              MOVS     r0,#0x17
00001a  7008              STRB     r0,[r1,#0]
;;;694      load_cutoffv = (float)set_load_cutoffv/1000;
00001c  481f              LDR      r0,|L1.156|
00001e  eddf0a20          VLDR     s1,|L1.160|
000022  4e20              LDR      r6,|L1.164|
000024  ed900a04          VLDR     s0,[r0,#0x10]
000028  eeb80ac0          VCVT.F32.S32 s0,s0
00002c  ee801a20          VDIV.F32 s2,s0,s1
000030  ed861a02          VSTR     s2,[r6,#8]
;;;695      SET_Current_Laod = load_c;
000034  4c1c              LDR      r4,|L1.168|
000036  f8d40094          LDR      r0,[r4,#0x94]  ; Run_Control
00003a  6120              STR      r0,[r4,#0x10]  ; Run_Control
;;;696      if(SET_Current_Laod > 2500)
00003c  6920              LDR      r0,[r4,#0x10]  ; Run_Control
00003e  f64011c4          MOV      r1,#0x9c4
000042  4288              CMP      r0,r1
000044  d903              BLS      |L1.78|
;;;697      {
;;;698    	  C_SW(1);
000046  2001              MOVS     r0,#1
000048  f7fffffe          BL       C_SW
00004c  e002              B        |L1.84|
                  |L1.78|
;;;699      }else{
;;;700    	  C_SW(0);
00004e  2000              MOVS     r0,#0
000050  f7fffffe          BL       C_SW
                  |L1.84|
;;;701      }
;;;702      pass = 0;  
000054  4815              LDR      r0,|L1.172|
000056  2500              MOVS     r5,#0
000058  7005              STRB     r5,[r0,#0]
;;;703      mode_sw = mode_load;
00005a  4915              LDR      r1,|L1.176|
00005c  2002              MOVS     r0,#2
00005e  7008              STRB     r0,[r1,#0]
;;;704      SET_Voltage_Laod = load_v; 
000060  f8d400a4          LDR      r0,[r4,#0xa4]  ; Run_Control
000064  60e0              STR      r0,[r4,#0xc]  ; Run_Control
;;;705    //   GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;706    //   GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
;;;707    //   GPIO_SetBits(GPIOC,GPIO_Pin_13);//关闭电源输出继电器
;;;708      TM1650_SET_LED(0x68,0x70);
000066  2170              MOVS     r1,#0x70
000068  2068              MOVS     r0,#0x68
00006a  f7fffffe          BL       TM1650_SET_LED
;;;709      GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
00006e  f44f5180          MOV      r1,#0x1000
000072  4810              LDR      r0,|L1.180|
000074  f7fffffe          BL       GPIO_ResetBits
;;;710      load_wind = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_HBKWIN, 0, 0);
000078  f7fffffe          BL       WM_GetDesktopWindow
00007c  4603              MOV      r3,r0
00007e  9500              STR      r5,[sp,#0]
000080  4a0d              LDR      r2,|L1.184|
000082  2118              MOVS     r1,#0x18
000084  480d              LDR      r0,|L1.188|
000086  9501              STR      r5,[sp,#4]
000088  f7fffffe          BL       GUI_CreateDialogBox
00008c  6070              STR      r0,[r6,#4]  ; load_wind
;;;711      return load_wind;
;;;712    }
00008e  bd7c              POP      {r2-r6,pc}
;;;713    
                          ENDP

                  |L1.144|
                          DCD      page_sw
                  |L1.148|
                          DCD      track
                  |L1.152|
                          DCD      set_sw
                  |L1.156|
                          DCD      InFlashSave
                  |L1.160|
0000a0  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.164|
                          DCD      ||.data||
                  |L1.168|
                          DCD      Run_Control
                  |L1.172|
                          DCD      pass
                  |L1.176|
                          DCD      mode_sw
                  |L1.180|
                          DCD      0x40020c00
                  |L1.184|
                          DCD      _cbDialog2
                  |L1.188|
                          DCD      ||.constdata||

                          AREA ||i.DEL_LOAD||, CODE, READONLY, ALIGN=2

                  DEL_LOAD PROC
;;;1014   }
;;;1015   void DEL_LOAD(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1016   {
;;;1017   	switch(set_sw){
000004  4827              LDR      r0,|L2.164|
000006  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;1018   		case set_25:
;;;1019           {
;;;1020   			WM_HWIN hItem;
;;;1021   //            WM_InvalidateWindow(hWinWind);
;;;1022               hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
000008  4827              LDR      r0,|L2.168|
;;;1023   			if(bit > 0)
;;;1024   			{
;;;1025   				bit --;
;;;1026   				set_limit[bit] = '\0';
00000a  4f28              LDR      r7,|L2.172|
00000c  2400              MOVS     r4,#0                 ;1022
00000e  6840              LDR      r0,[r0,#4]            ;1022
000010  4d27              LDR      r5,|L2.176|
;;;1027   			}
;;;1028   			if(bit == dot_flag)
000012  4e28              LDR      r6,|L2.180|
000014  2918              CMP      r1,#0x18              ;1017
000016  d018              BEQ      |L2.74|
000018  2943              CMP      r1,#0x43              ;1017
00001a  d02b              BEQ      |L2.116|
00001c  2956              CMP      r1,#0x56              ;1017
00001e  d13e              BNE      |L2.158|
;;;1029   			{
;;;1030   				dot_flag = 0;
;;;1031   			}
;;;1032   			TEXT_SetText(hItem,set_limit);
;;;1033   		}break;
;;;1034   		case set_68:
;;;1035           {
;;;1036   			WM_HWIN hItem;
;;;1037   //            WM_InvalidateWindow(hWinWind);
;;;1038               hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;1039   			if(bit > 0)
;;;1040   			{
;;;1041   				bit --;
;;;1042   				set_limit[bit] = '\0';
;;;1043   			}
;;;1044   			if(bit == dot_flag)
;;;1045   			{
;;;1046   				dot_flag = 0;
;;;1047   			}
;;;1048   			TEXT_SetText(hItem,set_limit);
;;;1049   		}break;
;;;1050   		case set_87:
;;;1051           {
;;;1052               WM_HWIN hItem;
;;;1053   //            WM_InvalidateWindow(hWinWind);
;;;1054               hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000020  f640112d          MOV      r1,#0x92d
000024  f7fffffe          BL       WM_GetDialogItem
;;;1055   			if(bit > 0)
000028  7829              LDRB     r1,[r5,#0]  ; bit
00002a  b121              CBZ      r1,|L2.54|
;;;1056   			{
;;;1057   				bit --;
00002c  7829              LDRB     r1,[r5,#0]  ; bit
00002e  1e49              SUBS     r1,r1,#1
000030  7029              STRB     r1,[r5,#0]
;;;1058   				set_limit[bit] = '\0';
000032  7829              LDRB     r1,[r5,#0]  ; bit
000034  547c              STRB     r4,[r7,r1]
                  |L2.54|
;;;1059   			}
;;;1060   			if(bit == dot_flag)
000036  7829              LDRB     r1,[r5,#0]  ; bit
000038  7832              LDRB     r2,[r6,#0]  ; dot_flag
00003a  4291              CMP      r1,r2
00003c  d100              BNE      |L2.64|
;;;1061   			{
;;;1062   				dot_flag = 0;
00003e  7034              STRB     r4,[r6,#0]
                  |L2.64|
;;;1063   			}
;;;1064   			TEXT_SetText(hItem,set_limit);
000040  e8bd41f0          POP      {r4-r8,lr}
000044  4919              LDR      r1,|L2.172|
000046  f7ffbffe          B.W      TEXT_SetText
                  |L2.74|
00004a  f640016e          MOV      r1,#0x86e             ;1022
00004e  f7fffffe          BL       WM_GetDialogItem
000052  7829              LDRB     r1,[r5,#0]            ;1023  ; bit
000054  b121              CBZ      r1,|L2.96|
000056  7829              LDRB     r1,[r5,#0]            ;1025  ; bit
000058  1e49              SUBS     r1,r1,#1              ;1025
00005a  7029              STRB     r1,[r5,#0]            ;1025
00005c  7829              LDRB     r1,[r5,#0]            ;1026  ; bit
00005e  547c              STRB     r4,[r7,r1]            ;1026
                  |L2.96|
000060  7829              LDRB     r1,[r5,#0]            ;1028  ; bit
000062  7832              LDRB     r2,[r6,#0]            ;1028  ; dot_flag
000064  4291              CMP      r1,r2                 ;1028
000066  d100              BNE      |L2.106|
000068  7034              STRB     r4,[r6,#0]            ;1030
                  |L2.106|
00006a  e8bd41f0          POP      {r4-r8,lr}            ;1032
00006e  490f              LDR      r1,|L2.172|
000070  f7ffbffe          B.W      TEXT_SetText
                  |L2.116|
000074  f6401111          MOV      r1,#0x911             ;1038
000078  f7fffffe          BL       WM_GetDialogItem
00007c  7829              LDRB     r1,[r5,#0]            ;1039  ; bit
00007e  b121              CBZ      r1,|L2.138|
000080  7829              LDRB     r1,[r5,#0]            ;1041  ; bit
000082  1e49              SUBS     r1,r1,#1              ;1041
000084  7029              STRB     r1,[r5,#0]            ;1041
000086  7829              LDRB     r1,[r5,#0]            ;1042  ; bit
000088  547c              STRB     r4,[r7,r1]            ;1042
                  |L2.138|
00008a  7829              LDRB     r1,[r5,#0]            ;1044  ; bit
00008c  7832              LDRB     r2,[r6,#0]            ;1044  ; dot_flag
00008e  4291              CMP      r1,r2                 ;1044
000090  d100              BNE      |L2.148|
000092  7034              STRB     r4,[r6,#0]            ;1046
                  |L2.148|
000094  e8bd41f0          POP      {r4-r8,lr}            ;1048
000098  4904              LDR      r1,|L2.172|
00009a  f7ffbffe          B.W      TEXT_SetText
                  |L2.158|
;;;1065   		}break;
;;;1066   	}
;;;1067   }
00009e  e8bd81f0          POP      {r4-r8,pc}
;;;1068   
                          ENDP

0000a2  0000              DCW      0x0000
                  |L2.164|
                          DCD      set_sw
                  |L2.168|
                          DCD      ||.data||
                  |L2.172|
                          DCD      set_limit
                  |L2.176|
                          DCD      bit
                  |L2.180|
                          DCD      dot_flag

                          AREA ||i.INPUT_LOAD||, CODE, READONLY, ALIGN=2

                  INPUT_LOAD PROC
;;;1069   void INPUT_LOAD(char* num);            
;;;1070   void INPUT_LOAD(char* num){
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4681              MOV      r9,r0
;;;1071   	u8 i;    
;;;1072       switch(set_sw)
000006  484f              LDR      r0,|L3.324|
000008  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;1073       {
;;;1074           case set_25:
;;;1075           {
;;;1076               WM_HWIN hItem;
;;;1077    //           WM_InvalidateWindow(load_wind);
;;;1078               hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
00000a  484f              LDR      r0,|L3.328|
00000c  2400              MOVS     r4,#0
;;;1079   			if(bit < 6)
;;;1080   			{
;;;1081   				strcat(set_limit,num);
00000e  4d4f              LDR      r5,|L3.332|
000010  6840              LDR      r0,[r0,#4]            ;1078
;;;1082   				if(dot_flag != 0 && strcmp(num,".") == 0)
000012  f8df813c          LDR      r8,|L3.336|
000016  4f4f              LDR      r7,|L3.340|
000018  2918              CMP      r1,#0x18              ;1072
00001a  d01d              BEQ      |L3.88|
00001c  2943              CMP      r1,#0x43              ;1072
00001e  d04b              BEQ      |L3.184|
000020  2956              CMP      r1,#0x56              ;1072
000022  d17c              BNE      |L3.286|
;;;1083   				{
;;;1084   					
;;;1085   				}else{			
;;;1086   					
;;;1087   					if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1088   					{
;;;1089   						dot_flag = bit;
;;;1090   					}
;;;1091   					bit ++;
;;;1092   				}
;;;1093   			}else{
;;;1094   				bit = 0;
;;;1095   				for(i=0;i<6;i++)
;;;1096   				{
;;;1097   					set_limit[i] = '\0';
;;;1098   				}
;;;1099   			}
;;;1100   			
;;;1101   			TEXT_SetText(hItem,set_limit);
;;;1102   //            switch(bit){
;;;1103   //                case 1:
;;;1104   //                {
;;;1105   //					for(i=0;i<6;i++)
;;;1106   //					{
;;;1107   //						set_limit[i] = '\0';
;;;1108   //					}
;;;1109   //                    load_c = atoi(num) * 1000;
;;;1110   //                    strcat(set_limit,num);            
;;;1111   //                    TEXT_SetText(hItem,set_limit);
;;;1112   //                    
;;;1113   //                    bit = 2;
;;;1114   //                    break;
;;;1115   //                }
;;;1116   //                case 2:
;;;1117   //                {
;;;1118   //                    strcat(set_limit,num);            
;;;1119   //                    TEXT_SetText(hItem,set_limit);
;;;1120   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1121   //                    {
;;;1122   //                        dot_flag = 1;
;;;1123   //                    }else{
;;;1124   //                        load_c = load_c * 10 + atoi(num) * 1000;
;;;1125   //                    }
;;;1126   //                    bit = 3;
;;;1127   //                    break;
;;;1128   //                }
;;;1129   //                case 3:
;;;1130   //                {
;;;1131   //                    strcat(set_limit,num);
;;;1132   //                    TEXT_SetText(hItem,set_limit);
;;;1133   //                    if(dot_flag == 0)
;;;1134   //                    {
;;;1135   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1136   //                        {                            
;;;1137   //                            dot_flag = 2;
;;;1138   //                        }else{
;;;1139   //                            load_c = 0;
;;;1140   //                        }
;;;1141   //                    }else{
;;;1142   //                        load_c = load_c + atoi(num) * 100;
;;;1143   //                    }                  
;;;1144   //                    bit = 4;
;;;1145   //                    break;
;;;1146   //                }
;;;1147   //                case 4:
;;;1148   //                {
;;;1149   //                    strcat(set_limit,num);
;;;1150   //                    TEXT_SetText(hItem,set_limit);
;;;1151   //                    if(dot_flag == 0)
;;;1152   //                    {
;;;1153   //                        load_c = 0;
;;;1154   //                    }else if(dot_flag == 2){
;;;1155   //                        load_c = load_c + atoi(num) * 100;
;;;1156   //                    }else{
;;;1157   //                        load_c = load_c + atoi(num) * 10;
;;;1158   //                    }                  
;;;1159   //                    bit = 5;
;;;1160   //                    break;
;;;1161   //                }
;;;1162   //                case 5:
;;;1163   //                {
;;;1164   //                    strcat(set_limit,num);
;;;1165   //                    TEXT_SetText(hItem,set_limit);
;;;1166   //                    if(dot_flag == 0)
;;;1167   //                    {
;;;1168   //                        load_c = 0;
;;;1169   //                    }else if(dot_flag == 1){
;;;1170   //                        load_c = load_c + atoi(num);
;;;1171   //                    }else{
;;;1172   //                        load_c = load_c + atoi(num) * 10;
;;;1173   //                    }                 
;;;1174   //                    bit = 6;
;;;1175   //                    break;
;;;1176   //                }
;;;1177   //                case 6:
;;;1178   //                {
;;;1179   //                    strcat(set_limit,num);
;;;1180   //                    TEXT_SetText(hItem,set_limit);
;;;1181   //                    if(dot_flag == 0)
;;;1182   //                    {
;;;1183   //                        load_c = 0;
;;;1184   //                    }else if(dot_flag == 2){
;;;1185   //                        load_c = load_c + atoi(num);
;;;1186   //                    }                 
;;;1187   //                    bit = 0;
;;;1188   //                    break;
;;;1189   //                }
;;;1190   //            }
;;;1191               break;
;;;1192               
;;;1193           }
;;;1194           case set_68:
;;;1195           {
;;;1196               WM_HWIN hItem;
;;;1197    //           WM_InvalidateWindow(load_wind);
;;;1198               hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;1199   			if(bit < 6)
;;;1200   			{
;;;1201   				strcat(set_limit,num);
;;;1202   				if(dot_flag != 0 && strcmp(num,".") == 0)
;;;1203   				{
;;;1204   					
;;;1205   				}else{			
;;;1206   					
;;;1207   					if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1208   					{
;;;1209   						dot_flag = bit;
;;;1210   					}
;;;1211   					bit ++;
;;;1212   				}
;;;1213   			}else{
;;;1214   				bit = 0;
;;;1215   				for(i=0;i<6;i++)
;;;1216   				{
;;;1217   					set_limit[i] = '\0';
;;;1218   				}
;;;1219   			}
;;;1220   			
;;;1221   			TEXT_SetText(hItem,set_limit);
;;;1222   //            switch(bit){
;;;1223   //                case 1:
;;;1224   //                {
;;;1225   //					for(i=0;i<6;i++)
;;;1226   //					{
;;;1227   //						set_limit[i] = '\0';
;;;1228   //					}
;;;1229   //                    load_v = atoi(num) * 1000;
;;;1230   //                    strcat(set_limit,num);            
;;;1231   //                    TEXT_SetText(hItem,set_limit);
;;;1232   //                    
;;;1233   //                    bit = 2;
;;;1234   //                    break;
;;;1235   //                }
;;;1236   //                case 2:
;;;1237   //                {
;;;1238   //                    strcat(set_limit,num);            
;;;1239   //                    TEXT_SetText(hItem,set_limit);
;;;1240   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1241   //                    {
;;;1242   //                        dot_flag = 1;
;;;1243   //                    }else{
;;;1244   //                        load_v = load_v * 10 + atoi(num) * 1000;
;;;1245   //                    }
;;;1246   //                    bit = 3;
;;;1247   //                    break;
;;;1248   //                }
;;;1249   //                case 3:
;;;1250   //                {
;;;1251   //                    strcat(set_limit,num);
;;;1252   //                    TEXT_SetText(hItem,set_limit);
;;;1253   //                    if(dot_flag == 0)
;;;1254   //                    {
;;;1255   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1256   //                        {                            
;;;1257   //                            dot_flag = 2;
;;;1258   //                        }else{
;;;1259   //                            load_v = 0;
;;;1260   //                        }
;;;1261   //                    }else{
;;;1262   //                        load_v = load_v + atoi(num) * 100;
;;;1263   //                    }                  
;;;1264   //                    bit = 4;
;;;1265   //                    break;
;;;1266   //                }
;;;1267   //                case 4:
;;;1268   //                {
;;;1269   //                    strcat(set_limit,num);
;;;1270   //                    TEXT_SetText(hItem,set_limit);
;;;1271   //                    if(dot_flag == 0)
;;;1272   //                    {
;;;1273   //                        load_v = 0;
;;;1274   //                    }else if(dot_flag == 2){
;;;1275   //                        load_v = load_v + atoi(num) * 100;
;;;1276   //                    }else{
;;;1277   //                        load_v = load_v + atoi(num) * 10;
;;;1278   //                    }                  
;;;1279   //                    bit = 5;
;;;1280   //                    break;
;;;1281   //                }
;;;1282   //                case 5:
;;;1283   //                {
;;;1284   //                    strcat(set_limit,num);
;;;1285   //                    TEXT_SetText(hItem,set_limit);
;;;1286   //                    if(dot_flag == 0)
;;;1287   //                    {
;;;1288   //                        load_v = 0;
;;;1289   //                    }else if(dot_flag == 1){
;;;1290   //                        load_v = load_v + atoi(num);
;;;1291   //                    }else{
;;;1292   //                        load_v = load_v + atoi(num) * 10;
;;;1293   //                    }                 
;;;1294   //                    bit = 6;
;;;1295   //                    break;
;;;1296   //                }
;;;1297   //                case 6:
;;;1298   //                {
;;;1299   //                    strcat(set_limit,num);
;;;1300   //                    TEXT_SetText(hItem,set_limit);
;;;1301   //                    if(dot_flag == 0)
;;;1302   //                    {
;;;1303   //                        load_v = 0;
;;;1304   //                    }else if(dot_flag == 2){
;;;1305   //                        load_v = load_v + atoi(num);
;;;1306   //                    }                 
;;;1307   //                    bit = 0;
;;;1308   //                    break;
;;;1309   //                }
;;;1310   //            }
;;;1311               break;
;;;1312               
;;;1313           }
;;;1314   		case set_87:
;;;1315           {
;;;1316               WM_HWIN hItem;
;;;1317    //           WM_InvalidateWindow(load_wind);
;;;1318               hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000024  f640112d          MOV      r1,#0x92d
000028  f7fffffe          BL       WM_GetDialogItem
00002c  4604              MOV      r4,r0
;;;1319   			if(bit < 7)
00002e  7838              LDRB     r0,[r7,#0]  ; bit
000030  2807              CMP      r0,#7
000032  d203              BCS      |L3.60|
;;;1320   			{
;;;1321   				strcat(set_limit,num);
000034  4649              MOV      r1,r9
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       strcat
                  |L3.60|
;;;1322   			}
;;;1323   			if(dot_flag != 0 && strcmp(num,".") == 0)
00003c  f8980000          LDRB     r0,[r8,#0]  ; dot_flag
000040  b128              CBZ      r0,|L3.78|
000042  a145              ADR      r1,|L3.344|
000044  4648              MOV      r0,r9
000046  f7fffffe          BL       strcmp
00004a  2800              CMP      r0,#0
00004c  d072              BEQ      |L3.308|
                  |L3.78|
;;;1324   			{
;;;1325   				
;;;1326   			}else{			
;;;1327   				
;;;1328   				if(dot_flag == 0 && strcmp(num,".") == 0)
00004e  f8980000          LDRB     r0,[r8,#0]  ; dot_flag
000052  2800              CMP      r0,#0
000054  d060              BEQ      |L3.280|
000056  e06a              B        |L3.302|
                  |L3.88|
000058  f640016e          MOV      r1,#0x86e             ;1078
00005c  f7fffffe          BL       WM_GetDialogItem
000060  4606              MOV      r6,r0                 ;1078
000062  7838              LDRB     r0,[r7,#0]            ;1079  ; bit
000064  2806              CMP      r0,#6                 ;1079
000066  d21a              BCS      |L3.158|
000068  4649              MOV      r1,r9                 ;1081
00006a  4838              LDR      r0,|L3.332|
00006c  f7fffffe          BL       strcat
000070  f8980000          LDRB     r0,[r8,#0]            ;1082  ; dot_flag
000074  b120              CBZ      r0,|L3.128|
000076  a138              ADR      r1,|L3.344|
000078  4648              MOV      r0,r9                 ;1082
00007a  f7fffffe          BL       strcmp
00007e  b1a8              CBZ      r0,|L3.172|
                  |L3.128|
000080  f8980000          LDRB     r0,[r8,#0]            ;1087  ; dot_flag
000084  b938              CBNZ     r0,|L3.150|
000086  a134              ADR      r1,|L3.344|
000088  4648              MOV      r0,r9                 ;1087
00008a  f7fffffe          BL       strcmp
00008e  b910              CBNZ     r0,|L3.150|
000090  7838              LDRB     r0,[r7,#0]            ;1089  ; bit
000092  f8880000          STRB     r0,[r8,#0]            ;1089
                  |L3.150|
000096  7838              LDRB     r0,[r7,#0]            ;1091  ; bit
000098  1c40              ADDS     r0,r0,#1              ;1091
00009a  7038              STRB     r0,[r7,#0]            ;1091
00009c  e006              B        |L3.172|
                  |L3.158|
00009e  703c              STRB     r4,[r7,#0]            ;1094
0000a0  2000              MOVS     r0,#0                 ;1095
                  |L3.162|
0000a2  542c              STRB     r4,[r5,r0]            ;1097
0000a4  1c40              ADDS     r0,r0,#1              ;1095
0000a6  b2c0              UXTB     r0,r0                 ;1095
0000a8  2806              CMP      r0,#6                 ;1095
0000aa  d3fa              BCC      |L3.162|
                  |L3.172|
0000ac  4630              MOV      r0,r6                 ;1101
0000ae  e8bd47f0          POP      {r4-r10,lr}           ;1101
0000b2  4926              LDR      r1,|L3.332|
0000b4  f7ffbffe          B.W      TEXT_SetText
                  |L3.184|
0000b8  f6401111          MOV      r1,#0x911             ;1198
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4606              MOV      r6,r0                 ;1198
0000c2  7838              LDRB     r0,[r7,#0]            ;1199  ; bit
0000c4  2806              CMP      r0,#6                 ;1199
0000c6  d21a              BCS      |L3.254|
0000c8  4649              MOV      r1,r9                 ;1201
0000ca  4820              LDR      r0,|L3.332|
0000cc  f7fffffe          BL       strcat
0000d0  f8980000          LDRB     r0,[r8,#0]            ;1202  ; dot_flag
0000d4  b120              CBZ      r0,|L3.224|
0000d6  a120              ADR      r1,|L3.344|
0000d8  4648              MOV      r0,r9                 ;1202
0000da  f7fffffe          BL       strcmp
0000de  b1a8              CBZ      r0,|L3.268|
                  |L3.224|
0000e0  f8980000          LDRB     r0,[r8,#0]            ;1207  ; dot_flag
0000e4  b938              CBNZ     r0,|L3.246|
0000e6  a11c              ADR      r1,|L3.344|
0000e8  4648              MOV      r0,r9                 ;1207
0000ea  f7fffffe          BL       strcmp
0000ee  b910              CBNZ     r0,|L3.246|
0000f0  7838              LDRB     r0,[r7,#0]            ;1209  ; bit
0000f2  f8880000          STRB     r0,[r8,#0]            ;1209
                  |L3.246|
0000f6  7838              LDRB     r0,[r7,#0]            ;1211  ; bit
0000f8  1c40              ADDS     r0,r0,#1              ;1211
0000fa  7038              STRB     r0,[r7,#0]            ;1211
0000fc  e006              B        |L3.268|
                  |L3.254|
0000fe  703c              STRB     r4,[r7,#0]            ;1214
000100  2000              MOVS     r0,#0                 ;1215
                  |L3.258|
000102  542c              STRB     r4,[r5,r0]            ;1217
000104  1c40              ADDS     r0,r0,#1              ;1215
000106  b2c0              UXTB     r0,r0                 ;1215
000108  2806              CMP      r0,#6                 ;1215
00010a  d3fa              BCC      |L3.258|
                  |L3.268|
00010c  4630              MOV      r0,r6                 ;1221
00010e  e8bd47f0          POP      {r4-r10,lr}           ;1221
000112  490e              LDR      r1,|L3.332|
000114  f7ffbffe          B.W      TEXT_SetText
                  |L3.280|
000118  a10f              ADR      r1,|L3.344|
00011a  4648              MOV      r0,r9
00011c  e001              B        |L3.290|
                  |L3.286|
00011e  e00f              B        |L3.320|
000120  e008              B        |L3.308|
                  |L3.290|
000122  f7fffffe          BL       strcmp
000126  b910              CBNZ     r0,|L3.302|
;;;1329   				{
;;;1330   					dot_flag = bit;
000128  7838              LDRB     r0,[r7,#0]  ; bit
00012a  f8880000          STRB     r0,[r8,#0]
                  |L3.302|
;;;1331   				}
;;;1332   				bit ++;
00012e  7838              LDRB     r0,[r7,#0]  ; bit
000130  1c40              ADDS     r0,r0,#1
000132  7038              STRB     r0,[r7,#0]
                  |L3.308|
;;;1333   			}
;;;1334   			TEXT_SetText(hItem,set_limit);
000134  4620              MOV      r0,r4
000136  e8bd47f0          POP      {r4-r10,lr}
00013a  4904              LDR      r1,|L3.332|
00013c  f7ffbffe          B.W      TEXT_SetText
                  |L3.320|
;;;1335   //            switch(bit){
;;;1336   //                case 1:
;;;1337   //                {
;;;1338   //					for(i=0;i<6;i++)
;;;1339   //					{
;;;1340   //						set_limit[i] = '\0';
;;;1341   //					}
;;;1342   //                    set_load_cutoffv = atoi(num) * 1000;
;;;1343   //                    strcat(set_limit,num);            
;;;1344   //                    TEXT_SetText(hItem,set_limit);
;;;1345   //                    
;;;1346   //                    bit = 2;
;;;1347   //                    break;
;;;1348   //                }
;;;1349   //                case 2:
;;;1350   //                {
;;;1351   //                    strcat(set_limit,num);            
;;;1352   //                    TEXT_SetText(hItem,set_limit);
;;;1353   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1354   //                    {
;;;1355   //                        dot_flag = 1;
;;;1356   //                    }else{
;;;1357   //                        set_load_cutoffv = set_load_cutoffv * 10 + atoi(num) * 1000;
;;;1358   //                    }
;;;1359   //                    bit = 3;
;;;1360   //                    break;
;;;1361   //                }
;;;1362   //                case 3:
;;;1363   //                {
;;;1364   //                    strcat(set_limit,num);
;;;1365   //                    TEXT_SetText(hItem,set_limit);
;;;1366   //                    if(dot_flag == 0)
;;;1367   //                    {
;;;1368   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1369   //                        {                            
;;;1370   //                            dot_flag = 2;
;;;1371   //                        }else{
;;;1372   //                            set_load_cutoffv = 0;
;;;1373   //                        }
;;;1374   //                    }else{
;;;1375   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 100;
;;;1376   //                    }                  
;;;1377   //                    bit = 4;
;;;1378   //                    break;
;;;1379   //                }
;;;1380   //                case 4:
;;;1381   //                {
;;;1382   //                    strcat(set_limit,num);
;;;1383   //                    TEXT_SetText(hItem,set_limit);
;;;1384   //                    if(dot_flag == 0)
;;;1385   //                    {
;;;1386   //                        set_load_cutoffv = 0;
;;;1387   //                    }else if(dot_flag == 2){
;;;1388   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 100;
;;;1389   //                    }else{
;;;1390   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 10;
;;;1391   //                    }                  
;;;1392   //                    bit = 5;
;;;1393   //                    break;
;;;1394   //                }
;;;1395   //                case 5:
;;;1396   //                {
;;;1397   //                    strcat(set_limit,num);
;;;1398   //                    TEXT_SetText(hItem,set_limit);
;;;1399   //                    if(dot_flag == 0)
;;;1400   //                    {
;;;1401   //                        set_load_cutoffv = 0;
;;;1402   //                    }else if(dot_flag == 1){
;;;1403   //                        set_load_cutoffv = set_load_cutoffv + atoi(num);
;;;1404   //                    }else{
;;;1405   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 10;
;;;1406   //                    }                 
;;;1407   //                    bit = 6;
;;;1408   //                    break;
;;;1409   //                }
;;;1410   //                case 6:
;;;1411   //                {
;;;1412   //                    strcat(set_limit,num);
;;;1413   //                    TEXT_SetText(hItem,set_limit);
;;;1414   //                    if(dot_flag == 0)
;;;1415   //                    {
;;;1416   //                        set_load_cutoffv = 0;
;;;1417   //                    }else if(dot_flag == 2){
;;;1418   //                        set_load_cutoffv = set_load_cutoffv + atoi(num);
;;;1419   //                    }                 
;;;1420   //                    bit = 0;
;;;1421   //                    break;
;;;1422   //                }
;;;1423   //            }
;;;1424               break;
;;;1425               
;;;1426           }
;;;1427           default:break;
;;;1428       }
;;;1429   }
000140  e8bd87f0          POP      {r4-r10,pc}
;;;1430   
                          ENDP

                  |L3.324|
                          DCD      set_sw
                  |L3.328|
                          DCD      ||.data||
                  |L3.332|
                          DCD      set_limit
                  |L3.336|
                          DCD      dot_flag
                  |L3.340|
                          DCD      bit
                  |L3.344|
000158  2e00              DCB      ".",0
00015a  00                DCB      0
00015b  00                DCB      0

                          AREA ||i.LOAD_OP_DOWN||, CODE, READONLY, ALIGN=2

                  LOAD_OP_DOWN PROC
;;;719    void LOAD_OP_DOWN(void);
;;;720    void LOAD_OP_DOWN(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;721    {
;;;722        switch(set_sw)
000004  4d34              LDR      r5,|L4.216|
000006  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;723        {
;;;724            case set_24:
;;;725            {
;;;726                WM_HWIN hItem;
;;;727                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
000008  4c34              LDR      r4,|L4.220|
;;;728                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00000a  f06f4670          MVN      r6,#0xf0000000
;;;729                TEXT_SetTextColor(hItem, GUI_WHITE);
00000e  1137              ASRS     r7,r6,#4
;;;730                
;;;731                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;732                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000010  f8df90cc          LDR      r9,|L4.224|
000014  6860              LDR      r0,[r4,#4]            ;722
000016  f44f6811          MOV      r8,#0x910             ;731
00001a  2917              CMP      r1,#0x17              ;722
00001c  d023              BEQ      |L4.102|
;;;733                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;734    
;;;735                set_sw = set_66;
;;;736                break;
;;;737            }
;;;738            case set_66:
;;;739            {
;;;740                WM_HWIN hItem;
;;;741                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;742                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;743                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;744                
;;;745                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
00001e  f6401a0e          MOV      r10,#0x90e
000022  2941              CMP      r1,#0x41              ;722
000024  d03c              BEQ      |L4.160|
000026  2942              CMP      r1,#0x42              ;722
000028  d11b              BNE      |L4.98|
;;;746                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;747                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;748    
;;;749                set_sw = set_67;
;;;750                break;
;;;751            }
;;;752    		 case set_67:
;;;753            {
;;;754                WM_HWIN hItem;
;;;755                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
00002a  4651              MOV      r1,r10
00002c  f7fffffe          BL       WM_GetDialogItem
000030  4680              MOV      r8,r0
;;;756                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
000032  4631              MOV      r1,r6
000034  4640              MOV      r0,r8
000036  f7fffffe          BL       TEXT_SetBkColor
;;;757                TEXT_SetTextColor(hItem, GUI_WHITE);
00003a  4639              MOV      r1,r7
00003c  4640              MOV      r0,r8
00003e  f7fffffe          BL       TEXT_SetTextColor
;;;758                
;;;759                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000042  f6401139          MOV      r1,#0x939
000046  6860              LDR      r0,[r4,#4]  ; load_wind
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4604              MOV      r4,r0
;;;760                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00004e  4649              MOV      r1,r9
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TEXT_SetBkColor
;;;761                TEXT_SetTextColor(hItem, GUI_BLACK);
000056  2100              MOVS     r1,#0
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       TEXT_SetTextColor
;;;762    
;;;763                set_sw = set_86;
00005e  2055              MOVS     r0,#0x55
000060  7028              STRB     r0,[r5,#0]
                  |L4.98|
;;;764                break;
;;;765            }
;;;766        }   
;;;767    }
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L4.102|
000066  f640016d          MOV      r1,#0x86d             ;727
00006a  f7fffffe          BL       WM_GetDialogItem
00006e  4682              MOV      r10,r0                ;727
000070  4631              MOV      r1,r6                 ;728
000072  4650              MOV      r0,r10                ;728
000074  f7fffffe          BL       TEXT_SetBkColor
000078  4639              MOV      r1,r7                 ;729
00007a  4650              MOV      r0,r10                ;729
00007c  f7fffffe          BL       TEXT_SetTextColor
000080  4641              MOV      r1,r8                 ;731
000082  6860              LDR      r0,[r4,#4]            ;731  ; load_wind
000084  f7fffffe          BL       WM_GetDialogItem
000088  4604              MOV      r4,r0                 ;731
00008a  4649              MOV      r1,r9                 ;732
00008c  4620              MOV      r0,r4                 ;732
00008e  f7fffffe          BL       TEXT_SetBkColor
000092  2100              MOVS     r1,#0                 ;733
000094  4620              MOV      r0,r4                 ;733
000096  f7fffffe          BL       TEXT_SetTextColor
00009a  2041              MOVS     r0,#0x41              ;735
00009c  7028              STRB     r0,[r5,#0]            ;735
00009e  e7e0              B        |L4.98|
                  |L4.160|
0000a0  4641              MOV      r1,r8                 ;741
0000a2  f7fffffe          BL       WM_GetDialogItem
0000a6  4680              MOV      r8,r0                 ;741
0000a8  4631              MOV      r1,r6                 ;742
0000aa  4640              MOV      r0,r8                 ;742
0000ac  f7fffffe          BL       TEXT_SetBkColor
0000b0  4639              MOV      r1,r7                 ;743
0000b2  4640              MOV      r0,r8                 ;743
0000b4  f7fffffe          BL       TEXT_SetTextColor
0000b8  4651              MOV      r1,r10                ;745
0000ba  6860              LDR      r0,[r4,#4]            ;745  ; load_wind
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4604              MOV      r4,r0                 ;745
0000c2  4649              MOV      r1,r9                 ;746
0000c4  4620              MOV      r0,r4                 ;746
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  2100              MOVS     r1,#0                 ;747
0000cc  4620              MOV      r0,r4                 ;747
0000ce  f7fffffe          BL       TEXT_SetTextColor
0000d2  2042              MOVS     r0,#0x42              ;749
0000d4  7028              STRB     r0,[r5,#0]            ;749
0000d6  e7c4              B        |L4.98|
;;;768    
                          ENDP

                  |L4.216|
                          DCD      set_sw
                  |L4.220|
                          DCD      ||.data||
                  |L4.224|
                          DCD      0x00bfffff

                          AREA ||i.LOAD_OP_UP||, CODE, READONLY, ALIGN=2

                  LOAD_OP_UP PROC
;;;769    void LOAD_OP_UP(void);
;;;770    void LOAD_OP_UP(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;771    {
;;;772        switch(set_sw)
000004  4d34              LDR      r5,|L5.216|
000006  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;773        {
;;;774            case set_66:
;;;775            {
;;;776                WM_HWIN hItem;
;;;777                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
000008  4c34              LDR      r4,|L5.220|
;;;778                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;779                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;780                
;;;781                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;782                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00000a  f8dfa0d4          LDR      r10,|L5.224|
00000e  f44f6611          MOV      r6,#0x910             ;777
000012  6860              LDR      r0,[r4,#4]            ;772
000014  f06f4870          MVN      r8,#0xf0000000        ;778
000018  f06f497f          MVN      r9,#0xff000000        ;779
00001c  2941              CMP      r1,#0x41              ;772
00001e  d022              BEQ      |L5.102|
;;;783                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;784    
;;;785                set_sw = set_24;
;;;786                break;
;;;787            }
;;;788            case set_67:
;;;789            {
;;;790                WM_HWIN hItem;
;;;791                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
000020  1eb7              SUBS     r7,r6,#2
000022  2942              CMP      r1,#0x42              ;772
000024  d03c              BEQ      |L5.160|
000026  2955              CMP      r1,#0x55              ;772
000028  d11b              BNE      |L5.98|
;;;792                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;793                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;794                
;;;795                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;796                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;797                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;798    
;;;799                set_sw = set_66;
;;;800                break;
;;;801            }
;;;802    		case set_86:
;;;803            {
;;;804                WM_HWIN hItem;
;;;805                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
00002a  f6401139          MOV      r1,#0x939
00002e  f7fffffe          BL       WM_GetDialogItem
000032  4606              MOV      r6,r0
;;;806                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
000034  4641              MOV      r1,r8
000036  4630              MOV      r0,r6
000038  f7fffffe          BL       TEXT_SetBkColor
;;;807                TEXT_SetTextColor(hItem, GUI_WHITE);
00003c  4649              MOV      r1,r9
00003e  4630              MOV      r0,r6
000040  f7fffffe          BL       TEXT_SetTextColor
;;;808                
;;;809                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
000044  4639              MOV      r1,r7
000046  6860              LDR      r0,[r4,#4]  ; load_wind
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4604              MOV      r4,r0
;;;810                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00004e  4651              MOV      r1,r10
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TEXT_SetBkColor
;;;811                TEXT_SetTextColor(hItem, GUI_BLACK);
000056  2100              MOVS     r1,#0
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       TEXT_SetTextColor
;;;812    
;;;813                set_sw = set_67;
00005e  2042              MOVS     r0,#0x42
000060  7028              STRB     r0,[r5,#0]
                  |L5.98|
;;;814                break;
;;;815            }
;;;816        }   
;;;817    }
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L5.102|
000066  4631              MOV      r1,r6                 ;777
000068  f7fffffe          BL       WM_GetDialogItem
00006c  4606              MOV      r6,r0                 ;777
00006e  4641              MOV      r1,r8                 ;778
000070  4630              MOV      r0,r6                 ;778
000072  f7fffffe          BL       TEXT_SetBkColor
000076  4649              MOV      r1,r9                 ;779
000078  4630              MOV      r0,r6                 ;779
00007a  f7fffffe          BL       TEXT_SetTextColor
00007e  f640016d          MOV      r1,#0x86d             ;781
000082  6860              LDR      r0,[r4,#4]            ;781  ; load_wind
000084  f7fffffe          BL       WM_GetDialogItem
000088  4604              MOV      r4,r0                 ;781
00008a  4651              MOV      r1,r10                ;782
00008c  4620              MOV      r0,r4                 ;782
00008e  f7fffffe          BL       TEXT_SetBkColor
000092  2100              MOVS     r1,#0                 ;783
000094  4620              MOV      r0,r4                 ;783
000096  f7fffffe          BL       TEXT_SetTextColor
00009a  2017              MOVS     r0,#0x17              ;785
00009c  7028              STRB     r0,[r5,#0]            ;785
00009e  e7e0              B        |L5.98|
                  |L5.160|
0000a0  4639              MOV      r1,r7                 ;791
0000a2  f7fffffe          BL       WM_GetDialogItem
0000a6  4607              MOV      r7,r0                 ;791
0000a8  4641              MOV      r1,r8                 ;792
0000aa  4638              MOV      r0,r7                 ;792
0000ac  f7fffffe          BL       TEXT_SetBkColor
0000b0  4649              MOV      r1,r9                 ;793
0000b2  4638              MOV      r0,r7                 ;793
0000b4  f7fffffe          BL       TEXT_SetTextColor
0000b8  4631              MOV      r1,r6                 ;795
0000ba  6860              LDR      r0,[r4,#4]            ;795  ; load_wind
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4604              MOV      r4,r0                 ;795
0000c2  4651              MOV      r1,r10                ;796
0000c4  4620              MOV      r0,r4                 ;796
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  2100              MOVS     r1,#0                 ;797
0000cc  4620              MOV      r0,r4                 ;797
0000ce  f7fffffe          BL       TEXT_SetTextColor
0000d2  2041              MOVS     r0,#0x41              ;799
0000d4  7028              STRB     r0,[r5,#0]            ;799
0000d6  e7c4              B        |L5.98|
;;;818    
                          ENDP

                  |L5.216|
                          DCD      set_sw
                  |L5.220|
                          DCD      ||.data||
                  |L5.224|
                          DCD      0x00bfffff

                          AREA ||i.LOAD_SET||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  LOAD_SET PROC
;;;820    void LOAD_SET(void);
;;;821    void LOAD_SET(void) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b083              SUB      sp,sp,#0xc
;;;822        char    buf[6];
;;;823        float   dis_load_c;
;;;824        float   dis_load_v;
;;;825        vu8 i;
;;;826        switch(set_sw)
00000a  4df8              LDR      r5,|L6.1004|
00000c  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;827        {
;;;828            case set_24:
;;;829            {
;;;830                WM_HWIN hItem;
;;;831    //            WM_InvalidateWindow(load_wind);
;;;832                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;833                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;834                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;835                       
;;;836                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;837                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;838                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;839                for(i=0;i<6;i++)
;;;840                {
;;;841                    set_limit[i] = '\0';
;;;842                }
;;;843                set_sw = set_25;
;;;844                break;
;;;845            }
;;;846            case set_25:
;;;847            {
;;;848                WM_HWIN hItem;
;;;849    //            WM_InvalidateWindow(lo\\JK_BTSET\../drive/AD7689.c\AD7689_Bufferad_wind);
;;;850                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;851                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;852                TEXT_SetTextColor(hItem, GUI_WHITE);  
;;;853    			if(dot_flag == 0){
;;;854    				load_c = atoi(set_limit)*1000;					
;;;855    			}else if(dot_flag != 0){
;;;856    				memset(buf, '\0', sizeof(buf));
;;;857    				strncpy(buf,set_limit,dot_flag + 4);
;;;858    				load_c = atof(buf)*1000;
00000e  ed9f8bf8          VLDR     d8,|L6.1008|
000012  4afb              LDR      r2,|L6.1024|
;;;859    			}
;;;860    			if(load_c > 30000 || (float)load_c/1000 * DISS_Voltage > 200){
000014  f8df93e0          LDR      r9,|L6.1016|
;;;861                    load_c = 0;
;;;862                }
;;;863    			if(load_c > 2500)
;;;864    			{
;;;865    				C_SW(1);
;;;866    			}else{
;;;867    				C_SW(0);
;;;868    			}
;;;869                SET_Current_Laod = load_c;            
;;;870    //            if(load_c > 3000)
;;;871    //			{
;;;872    //				C_SW(1);
;;;873    //			}else{
;;;874    //				C_SW(0);
;;;875    //			}
;;;876                dis_load_c = (float)SET_Current_Laod/1000;
;;;877                sprintf(buf,"%.3f",dis_load_c);
;;;878                TEXT_SetText(hItem,buf);
;;;879                
;;;880                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;881                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;882                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;883                Write_Limits();
;;;884                
;;;885                set_sw = set_24;
;;;886                bit = 0;
000018  f8df83e0          LDR      r8,|L6.1020|
00001c  ed9f9af9          VLDR     s18,|L6.1028|
000020  4ef9              LDR      r6,|L6.1032|
000022  f8dfb3e8          LDR      r11,|L6.1036|
000026  2400              MOVS     r4,#0                 ;841
000028  4ff9              LDR      r7,|L6.1040|
00002a  6850              LDR      r0,[r2,#4]            ;826
00002c  2942              CMP      r1,#0x42              ;826
00002e  d07c              BEQ      |L6.298|
000030  dc27              BGT      |L6.130|
000032  f6400a6e          MOV      r10,#0x86e            ;836
000036  2917              CMP      r1,#0x17              ;826
000038  d078              BEQ      |L6.300|
00003a  2918              CMP      r1,#0x18              ;826
00003c  d077              BEQ      |L6.302|
00003e  2941              CMP      r1,#0x41              ;826
000040  d176              BNE      |L6.304|
;;;887                dot_flag = 0;
;;;888                break;
;;;889            }
;;;890            case set_66:
;;;891            {
;;;892                WM_HWIN hItem;
;;;893    //            WM_InvalidateWindow(load_wind);
;;;894                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
000042  f44f6111          MOV      r1,#0x910
000046  4616              MOV      r6,r2
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4607              MOV      r7,r0
;;;895                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00004e  f06f4170          MVN      r1,#0xf0000000
000052  4638              MOV      r0,r7
000054  f7fffffe          BL       TEXT_SetBkColor
;;;896                TEXT_SetTextColor(hItem, GUI_WHITE);
000058  f06f417f          MVN      r1,#0xff000000
00005c  4638              MOV      r0,r7
00005e  f7fffffe          BL       TEXT_SetTextColor
;;;897                       
;;;898                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
000062  f6401111          MOV      r1,#0x911
000066  6870              LDR      r0,[r6,#4]  ; load_wind
000068  f7fffffe          BL       WM_GetDialogItem
00006c  4606              MOV      r6,r0
;;;899                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00006e  49e9              LDR      r1,|L6.1044|
000070  4630              MOV      r0,r6
000072  f7fffffe          BL       TEXT_SetBkColor
;;;900                TEXT_SetTextColor(hItem, GUI_BLACK);
000076  2100              MOVS     r1,#0
000078  4630              MOV      r0,r6
00007a  f7fffffe          BL       TEXT_SetTextColor
;;;901                for(i=0;i<6;i++)
00007e  9400              STR      r4,[sp,#0]
000080  e12f              B        |L6.738|
                  |L6.130|
000082  2943              CMP      r1,#0x43              ;826
000084  d07d              BEQ      |L6.386|
;;;902                {
;;;903                    set_limit[i] = '\0';
;;;904                }
;;;905                set_sw = set_68;
;;;906                break;
;;;907            }
;;;908            case set_68:
;;;909            {
;;;910                WM_HWIN hItem;
;;;911                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;912                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;913                TEXT_SetTextColor(hItem, GUI_WHITE); 
;;;914    			if(dot_flag == 0){
;;;915    				load_v = atoi(set_limit)*1000;					
;;;916    			}else if(dot_flag != 0){
;;;917    				memset(buf, '\0', sizeof(buf));
;;;918    				strncpy(buf,set_limit,dot_flag + 4);
;;;919    				load_v = atof(buf)*1000;
;;;920    			}
;;;921    			if(load_v > 80000 || (float)load_v/1000 * DISS_Current > 200){
;;;922                    load_v = 0;
;;;923                }
;;;924                SET_Voltage_Laod = load_v;          
;;;925                
;;;926                dis_load_v = (float)SET_Voltage_Laod/1000;
;;;927                sprintf(buf,"%.3f",dis_load_v);
;;;928                TEXT_SetText(hItem,buf);
;;;929                
;;;930                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;931                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;932                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;933                Write_Limits();
;;;934                
;;;935                set_sw = set_66;
;;;936                bit = 0;
;;;937                dot_flag = 0;
;;;938                break;
;;;939            }
;;;940            case set_67:
;;;941            {
;;;942                switch(flag_Load_CC)
;;;943                {
;;;944                    case 1:
;;;945                    {
;;;946                        WM_HWIN hItem;
;;;947                        hItem = WM_GetDialogItem(load_wind, ID_TEXT_121);
;;;948                        TEXT_SetText(hItem,"CV");
;;;949    					flag_Load_CC = 0;
;;;950                        GPIO_ResetBits(GPIOC,GPIO_Pin_10);//CV                  
;;;951                        load_mode = 0;
;;;952                        Write_LOAD();
;;;953                        break;
;;;954                    }
;;;955                    case 0:
;;;956                    {
;;;957                         WM_HWIN hItem;
;;;958                         hItem = WM_GetDialogItem(load_wind, ID_TEXT_121);
;;;959                         TEXT_SetText(hItem,"CC");
;;;960    					 flag_Load_CC = 1;
;;;961                         GPIO_SetBits(GPIOC,GPIO_Pin_10);//CC                   
;;;962                         load_mode =1;
;;;963                         Write_LOAD();
;;;964                         break;
;;;965                    }
;;;966                }   
;;;967            }break;
;;;968    		case set_86:
;;;969            {
;;;970                WM_HWIN hItem;
;;;971    //            WM_InvalidateWindow(load_wind);
;;;972                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000086  f6401939          MOV      r9,#0x939
;;;973                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;974                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;975                       
;;;976                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
00008a  f640162d          MOV      r6,#0x92d
00008e  2955              CMP      r1,#0x55              ;826
000090  d078              BEQ      |L6.388|
000092  2956              CMP      r1,#0x56              ;826
000094  d15d              BNE      |L6.338|
;;;977                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;978                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;979                for(i=0;i<6;i++)
;;;980                {
;;;981                    set_limit[i] = '\0';
;;;982                }
;;;983                set_sw = set_87;
;;;984                break;
;;;985            }
;;;986            case set_87:
;;;987            {
;;;988                WM_HWIN hItem;
;;;989                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000096  4631              MOV      r1,r6
000098  4692              MOV      r10,r2
00009a  f7fffffe          BL       WM_GetDialogItem
00009e  4683              MOV      r11,r0
;;;990                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
0000a0  f06f4170          MVN      r1,#0xf0000000
0000a4  4658              MOV      r0,r11
0000a6  f7fffffe          BL       TEXT_SetBkColor
;;;991                TEXT_SetTextColor(hItem, GUI_WHITE); 
0000aa  f06f417f          MVN      r1,#0xff000000
0000ae  4658              MOV      r0,r11
0000b0  f7fffffe          BL       TEXT_SetTextColor
;;;992    			if(dot_flag == 0){
0000b4  7838              LDRB     r0,[r7,#0]  ; dot_flag
;;;993    				set_load_cutoffv = atoi(set_limit)*1000;					
0000b6  4ed8              LDR      r6,|L6.1048|
0000b8  2800              CMP      r0,#0                 ;992
0000ba  d071              BEQ      |L6.416|
;;;994    			}else if(dot_flag != 0){
0000bc  7838              LDRB     r0,[r7,#0]  ; dot_flag
0000be  b198              CBZ      r0,|L6.232|
;;;995    				memset(buf, '\0', sizeof(buf));
0000c0  9401              STR      r4,[sp,#4]
0000c2  9402              STR      r4,[sp,#8]
;;;996    				strncpy(buf,set_limit,dot_flag + 4);
0000c4  783a              LDRB     r2,[r7,#0]  ; dot_flag
0000c6  49d1              LDR      r1,|L6.1036|
0000c8  1d12              ADDS     r2,r2,#4
0000ca  a801              ADD      r0,sp,#4
0000cc  f7fffffe          BL       strncpy
;;;997    				set_load_cutoffv = atof(buf)*1000;
0000d0  a801              ADD      r0,sp,#4
0000d2  f7fffffe          BL       __hardfp_atof
0000d6  ec532b18          VMOV     r2,r3,d8
0000da  ec510b10          VMOV     r0,r1,d0
0000de  f7fffffe          BL       __aeabi_dmul
0000e2  f7fffffe          BL       __aeabi_d2iz
0000e6  6130              STR      r0,[r6,#0x10]  ; InFlashSave
                  |L6.232|
;;;998    			}
;;;999                load_cutoffv = (float)set_load_cutoffv/1000;
0000e8  ed960a04          VLDR     s0,[r6,#0x10]
0000ec  eef80ac0          VCVT.F32.S32 s1,s0
0000f0  ee800a89          VDIV.F32 s0,s1,s18
0000f4  ed8a0a02          VSTR     s0,[r10,#8]
;;;1000               sprintf(buf,"%.3f",load_cutoffv);
0000f8  ee100a10          VMOV     r0,s0
0000fc  f7fffffe          BL       __aeabi_f2d
000100  ec410b10          VMOV     d0,r0,r1
000104  a1c5              ADR      r1,|L6.1052|
000106  ec532b10          VMOV     r2,r3,d0
00010a  a801              ADD      r0,sp,#4
00010c  f7fffffe          BL       __2sprintf
;;;1001               TEXT_SetText(hItem,buf);
000110  a901              ADD      r1,sp,#4
000112  4658              MOV      r0,r11
000114  f7fffffe          BL       TEXT_SetText
;;;1002               
;;;1003               hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000118  4649              MOV      r1,r9
00011a  f8da0004          LDR      r0,[r10,#4]  ; load_wind
00011e  f7fffffe          BL       WM_GetDialogItem
000122  4606              MOV      r6,r0
;;;1004               TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000124  49bb              LDR      r1,|L6.1044|
000126  4630              MOV      r0,r6
000128  e003              B        |L6.306|
                  |L6.298|
00012a  e183              B        |L6.1076|
                  |L6.300|
00012c  e016              B        |L6.348|
                  |L6.302|
00012e  e047              B        |L6.448|
                  |L6.304|
000130  e00f              B        |L6.338|
                  |L6.306|
000132  f7fffffe          BL       TEXT_SetBkColor
;;;1005               TEXT_SetTextColor(hItem, GUI_BLACK);
000136  2100              MOVS     r1,#0
000138  4630              MOV      r0,r6
00013a  f7fffffe          BL       TEXT_SetTextColor
;;;1006               Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
00013e  4ab6              LDR      r2,|L6.1048|
000140  2128              MOVS     r1,#0x28
000142  48b8              LDR      r0,|L6.1060|
000144  f7fffffe          BL       Flash_Write32BitDatas
;;;1007               
;;;1008               set_sw = set_86;
000148  2055              MOVS     r0,#0x55
00014a  7028              STRB     r0,[r5,#0]
;;;1009               bit = 0;
00014c  f8884000          STRB     r4,[r8,#0]
;;;1010               dot_flag = 0;
000150  703c              STRB     r4,[r7,#0]
                  |L6.338|
;;;1011               break;
;;;1012           }
;;;1013       }
;;;1014   }
000152  b003              ADD      sp,sp,#0xc
000154  ecbd8b04          VPOP     {d8-d9}
000158  e8bd8ff0          POP      {r4-r11,pc}
                  |L6.348|
00015c  f640016d          MOV      r1,#0x86d             ;832
000160  4616              MOV      r6,r2                 ;832
000162  f7fffffe          BL       WM_GetDialogItem
000166  4607              MOV      r7,r0                 ;832
000168  f06f4170          MVN      r1,#0xf0000000        ;833
00016c  4638              MOV      r0,r7                 ;833
00016e  f7fffffe          BL       TEXT_SetBkColor
000172  f06f417f          MVN      r1,#0xff000000        ;834
000176  4638              MOV      r0,r7                 ;834
000178  f7fffffe          BL       TEXT_SetTextColor
00017c  4651              MOV      r1,r10                ;836
00017e  6870              LDR      r0,[r6,#4]            ;836  ; load_wind
000180  e001              B        |L6.390|
                  |L6.386|
000182  e0b5              B        |L6.752|
                  |L6.388|
000184  e188              B        |L6.1176|
                  |L6.390|
000186  f7fffffe          BL       WM_GetDialogItem
00018a  4606              MOV      r6,r0                 ;836
00018c  49a1              LDR      r1,|L6.1044|
00018e  4630              MOV      r0,r6                 ;837
000190  f7fffffe          BL       TEXT_SetBkColor
000194  2100              MOVS     r1,#0                 ;838
000196  4630              MOV      r0,r6                 ;838
000198  f7fffffe          BL       TEXT_SetTextColor
00019c  9400              STR      r4,[sp,#0]            ;839
00019e  e008              B        |L6.434|
                  |L6.416|
0001a0  e1a7              B        |L6.1266|
                  |L6.418|
0001a2  f89d0000          LDRB     r0,[sp,#0]            ;841
0001a6  f80b4000          STRB     r4,[r11,r0]           ;841
0001aa  f89d0000          LDRB     r0,[sp,#0]            ;839
0001ae  1c40              ADDS     r0,r0,#1              ;839
0001b0  9000              STR      r0,[sp,#0]            ;839
                  |L6.434|
0001b2  f89d0000          LDRB     r0,[sp,#0]            ;839
0001b6  2806              CMP      r0,#6                 ;839
0001b8  d3f3              BCC      |L6.418|
0001ba  2018              MOVS     r0,#0x18              ;843
0001bc  7028              STRB     r0,[r5,#0]            ;843
0001be  e7c8              B        |L6.338|
                  |L6.448|
0001c0  4651              MOV      r1,r10                ;850
0001c2  4692              MOV      r10,r2                ;850
0001c4  f7fffffe          BL       WM_GetDialogItem
0001c8  4683              MOV      r11,r0                ;850
0001ca  f06f4170          MVN      r1,#0xf0000000        ;851
0001ce  4658              MOV      r0,r11                ;851
0001d0  f7fffffe          BL       TEXT_SetBkColor
0001d4  f06f417f          MVN      r1,#0xff000000        ;852
0001d8  4658              MOV      r0,r11                ;852
0001da  f7fffffe          BL       TEXT_SetTextColor
0001de  7838              LDRB     r0,[r7,#0]            ;853  ; dot_flag
0001e0  b3c8              CBZ      r0,|L6.598|
0001e2  7838              LDRB     r0,[r7,#0]            ;855  ; dot_flag
0001e4  b1a0              CBZ      r0,|L6.528|
0001e6  9401              STR      r4,[sp,#4]            ;856
0001e8  9402              STR      r4,[sp,#8]            ;856
0001ea  783a              LDRB     r2,[r7,#0]            ;857  ; dot_flag
0001ec  4987              LDR      r1,|L6.1036|
0001ee  1d12              ADDS     r2,r2,#4              ;857
0001f0  a801              ADD      r0,sp,#4              ;857
0001f2  f7fffffe          BL       strncpy
0001f6  a801              ADD      r0,sp,#4              ;858
0001f8  f7fffffe          BL       __hardfp_atof
0001fc  ec532b18          VMOV     r2,r3,d8              ;858
000200  ec510b10          VMOV     r0,r1,d0              ;858
000204  f7fffffe          BL       __aeabi_dmul
000208  f7fffffe          BL       __aeabi_d2uiz
00020c  f8c60094          STR      r0,[r6,#0x94]         ;858  ; Run_Control
                  |L6.528|
000210  f8d60094          LDR      r0,[r6,#0x94]         ;860  ; Run_Control
000214  f2475130          MOV      r1,#0x7530            ;860
000218  4288              CMP      r0,r1                 ;860
00021a  d810              BHI      |L6.574|
00021c  f8d60094          LDR      r0,[r6,#0x94]         ;860  ; Run_Control
000220  ee000a10          VMOV     s0,r0                 ;860
000224  4880              LDR      r0,|L6.1064|
000226  eef80a40          VCVT.F32.U32 s1,s0                 ;860
00022a  ee800a89          VDIV.F32 s0,s1,s18             ;860
00022e  edd00a00          VLDR     s1,[r0,#0]            ;860
000232  ee200a20          VMUL.F32 s0,s0,s1              ;860
000236  ee100a10          VMOV     r0,s0                 ;860
00023a  4548              CMP      r0,r9                 ;860
00023c  dd01              BLE      |L6.578|
                  |L6.574|
00023e  f8c64094          STR      r4,[r6,#0x94]         ;861  ; Run_Control
                  |L6.578|
000242  f8d60094          LDR      r0,[r6,#0x94]         ;863  ; Run_Control
000246  f64011c4          MOV      r1,#0x9c4             ;863
00024a  4288              CMP      r0,r1                 ;863
00024c  d90d              BLS      |L6.618|
00024e  2001              MOVS     r0,#1                 ;865
000250  f7fffffe          BL       C_SW
000254  e00c              B        |L6.624|
                  |L6.598|
000256  e7ff              B        |L6.600|
                  |L6.600|
000258  486c              LDR      r0,|L6.1036|
00025a  f7fffffe          BL       atoi
00025e  f44f717a          MOV      r1,#0x3e8             ;854
000262  4348              MULS     r0,r1,r0              ;854
000264  f8c60094          STR      r0,[r6,#0x94]         ;854  ; Run_Control
000268  e7d2              B        |L6.528|
                  |L6.618|
00026a  2000              MOVS     r0,#0                 ;867
00026c  f7fffffe          BL       C_SW
                  |L6.624|
000270  f8d60094          LDR      r0,[r6,#0x94]         ;869  ; Run_Control
000274  6130              STR      r0,[r6,#0x10]         ;869  ; Run_Control
000276  6930              LDR      r0,[r6,#0x10]         ;876  ; Run_Control
000278  ee000a10          VMOV     s0,r0                 ;876
00027c  eef80a40          VCVT.F32.U32 s1,s0                 ;876
000280  ee800a89          VDIV.F32 s0,s1,s18             ;876
000284  ee100a10          VMOV     r0,s0                 ;877
000288  f7fffffe          BL       __aeabi_f2d
00028c  ec410b10          VMOV     d0,r0,r1              ;877
000290  a162              ADR      r1,|L6.1052|
000292  ec532b10          VMOV     r2,r3,d0              ;877
000296  a801              ADD      r0,sp,#4              ;877
000298  f7fffffe          BL       __2sprintf
00029c  a901              ADD      r1,sp,#4              ;878
00029e  4658              MOV      r0,r11                ;878
0002a0  f7fffffe          BL       TEXT_SetText
0002a4  f640016d          MOV      r1,#0x86d             ;880
0002a8  f8da0004          LDR      r0,[r10,#4]           ;880  ; load_wind
0002ac  f7fffffe          BL       WM_GetDialogItem
0002b0  4606              MOV      r6,r0                 ;880
0002b2  4958              LDR      r1,|L6.1044|
0002b4  4630              MOV      r0,r6                 ;881
0002b6  f7fffffe          BL       TEXT_SetBkColor
0002ba  2100              MOVS     r1,#0                 ;882
0002bc  4630              MOV      r0,r6                 ;882
0002be  f7fffffe          BL       TEXT_SetTextColor
0002c2  f7fffffe          BL       Write_Limits
0002c6  2017              MOVS     r0,#0x17              ;885
0002c8  7028              STRB     r0,[r5,#0]            ;885
0002ca  f8884000          STRB     r4,[r8,#0]            ;886
0002ce  703c              STRB     r4,[r7,#0]            ;887
0002d0  e73f              B        |L6.338|
                  |L6.722|
0002d2  f89d0000          LDRB     r0,[sp,#0]            ;903
0002d6  f80b4000          STRB     r4,[r11,r0]           ;903
0002da  f89d0000          LDRB     r0,[sp,#0]            ;901
0002de  1c40              ADDS     r0,r0,#1              ;901
0002e0  9000              STR      r0,[sp,#0]            ;901
                  |L6.738|
0002e2  f89d0000          LDRB     r0,[sp,#0]            ;901
0002e6  2806              CMP      r0,#6                 ;901
0002e8  d3f3              BCC      |L6.722|
0002ea  2043              MOVS     r0,#0x43              ;905
0002ec  7028              STRB     r0,[r5,#0]            ;905
0002ee  e730              B        |L6.338|
                  |L6.752|
0002f0  f6401111          MOV      r1,#0x911             ;911
0002f4  4692              MOV      r10,r2                ;911
0002f6  f7fffffe          BL       WM_GetDialogItem
0002fa  4683              MOV      r11,r0                ;911
0002fc  f06f4170          MVN      r1,#0xf0000000        ;912
000300  4658              MOV      r0,r11                ;912
000302  f7fffffe          BL       TEXT_SetBkColor
000306  f06f417f          MVN      r1,#0xff000000        ;913
00030a  4658              MOV      r0,r11                ;913
00030c  f7fffffe          BL       TEXT_SetTextColor
000310  7838              LDRB     r0,[r7,#0]            ;914  ; dot_flag
000312  b3e8              CBZ      r0,|L6.912|
000314  7838              LDRB     r0,[r7,#0]            ;916  ; dot_flag
000316  b1a0              CBZ      r0,|L6.834|
000318  9401              STR      r4,[sp,#4]            ;917
00031a  9402              STR      r4,[sp,#8]            ;917
00031c  783a              LDRB     r2,[r7,#0]            ;918  ; dot_flag
00031e  493b              LDR      r1,|L6.1036|
000320  1d12              ADDS     r2,r2,#4              ;918
000322  a801              ADD      r0,sp,#4              ;918
000324  f7fffffe          BL       strncpy
000328  a801              ADD      r0,sp,#4              ;919
00032a  f7fffffe          BL       __hardfp_atof
00032e  ec532b18          VMOV     r2,r3,d8              ;919
000332  ec510b10          VMOV     r0,r1,d0              ;919
000336  f7fffffe          BL       __aeabi_dmul
00033a  f7fffffe          BL       __aeabi_d2uiz
00033e  f8c600a4          STR      r0,[r6,#0xa4]         ;919  ; Run_Control
                  |L6.834|
000342  f8d600a4          LDR      r0,[r6,#0xa4]         ;921  ; Run_Control
000346  4939              LDR      r1,|L6.1068|
000348  4288              CMP      r0,r1                 ;921
00034a  d810              BHI      |L6.878|
00034c  f8d600a4          LDR      r0,[r6,#0xa4]         ;921  ; Run_Control
000350  ee000a10          VMOV     s0,r0                 ;921
000354  4836              LDR      r0,|L6.1072|
000356  eeb80a40          VCVT.F32.U32 s0,s0                 ;921
00035a  eec00a09          VDIV.F32 s1,s0,s18             ;921
00035e  ed900a00          VLDR     s0,[r0,#0]            ;921
000362  ee200a80          VMUL.F32 s0,s1,s0              ;921
000366  ee100a10          VMOV     r0,s0                 ;921
00036a  4548              CMP      r0,r9                 ;921
00036c  dd01              BLE      |L6.882|
                  |L6.878|
00036e  f8c640a4          STR      r4,[r6,#0xa4]         ;922  ; Run_Control
                  |L6.882|
000372  f8d600a4          LDR      r0,[r6,#0xa4]         ;924  ; Run_Control
000376  60f0              STR      r0,[r6,#0xc]          ;924  ; Run_Control
000378  68f0              LDR      r0,[r6,#0xc]          ;926  ; Run_Control
00037a  ee000a10          VMOV     s0,r0                 ;926
00037e  eef80a40          VCVT.F32.U32 s1,s0                 ;926
000382  ee800a89          VDIV.F32 s0,s1,s18             ;926
000386  ee100a10          VMOV     r0,s0                 ;927
00038a  f7fffffe          BL       __aeabi_f2d
00038e  e000              B        |L6.914|
                  |L6.912|
000390  e022              B        |L6.984|
                  |L6.914|
000392  ec410b10          VMOV     d0,r0,r1              ;927
000396  a121              ADR      r1,|L6.1052|
000398  ec532b10          VMOV     r2,r3,d0              ;927
00039c  a801              ADD      r0,sp,#4              ;927
00039e  f7fffffe          BL       __2sprintf
0003a2  a901              ADD      r1,sp,#4              ;928
0003a4  4658              MOV      r0,r11                ;928
0003a6  f7fffffe          BL       TEXT_SetText
0003aa  f44f6111          MOV      r1,#0x910             ;930
0003ae  f8da0004          LDR      r0,[r10,#4]           ;930  ; load_wind
0003b2  f7fffffe          BL       WM_GetDialogItem
0003b6  4606              MOV      r6,r0                 ;930
0003b8  4916              LDR      r1,|L6.1044|
0003ba  4630              MOV      r0,r6                 ;931
0003bc  f7fffffe          BL       TEXT_SetBkColor
0003c0  2100              MOVS     r1,#0                 ;932
0003c2  4630              MOV      r0,r6                 ;932
0003c4  f7fffffe          BL       TEXT_SetTextColor
0003c8  f7fffffe          BL       Write_Limits
0003cc  2041              MOVS     r0,#0x41              ;935
0003ce  7028              STRB     r0,[r5,#0]            ;935
0003d0  f8884000          STRB     r4,[r8,#0]            ;936
0003d4  703c              STRB     r4,[r7,#0]            ;937
                  |L6.982|
0003d6  e6bc              B        |L6.338|
                  |L6.984|
0003d8  480c              LDR      r0,|L6.1036|
0003da  f7fffffe          BL       atoi
0003de  f44f717a          MOV      r1,#0x3e8             ;915
0003e2  4348              MULS     r0,r1,r0              ;915
0003e4  f8c600a4          STR      r0,[r6,#0xa4]         ;915  ; Run_Control
0003e8  e7ab              B        |L6.834|
0003ea  0000              DCW      0x0000
                  |L6.1004|
                          DCD      set_sw
                  |L6.1008|
0003f0  00000000          DCFD     0x408f400000000000 ; 1000
0003f4  408f4000
                  |L6.1016|
                          DCD      0x43480000
                  |L6.1020|
                          DCD      bit
                  |L6.1024|
                          DCD      ||.data||
                  |L6.1028|
000404  447a0000          DCFS     0x447a0000 ; 1000
                  |L6.1032|
                          DCD      Run_Control
                  |L6.1036|
                          DCD      set_limit
                  |L6.1040|
                          DCD      dot_flag
                  |L6.1044|
                          DCD      0x00bfffff
                  |L6.1048|
                          DCD      InFlashSave
                  |L6.1052|
00041c  252e3366          DCB      "%.3f",0
000420  00      
000421  00                DCB      0
000422  00                DCB      0
000423  00                DCB      0
                  |L6.1060|
                          DCD      0x080e0000
                  |L6.1064|
                          DCD      DISS_Voltage
                  |L6.1068|
                          DCD      0x00013880
                  |L6.1072|
                          DCD      DISS_Current
                  |L6.1076|
000434  4d33              LDR      r5,|L6.1284|
000436  4f34              LDR      r7,|L6.1288|
000438  f44f6680          MOV      r6,#0x400             ;950
00043c  7829              LDRB     r1,[r5,#0]            ;942  ; flagD
00043e  f3c113c0          UBFX     r3,r1,#7,#1           ;942
000442  f640110f          MOV      r1,#0x90f             ;947
000446  b1a3              CBZ      r3,|L6.1138|
000448  2b01              CMP      r3,#1                 ;942
00044a  d1c4              BNE      |L6.982|
00044c  4690              MOV      r8,r2                 ;947
00044e  f7fffffe          BL       WM_GetDialogItem
000452  a12e              ADR      r1,|L6.1292|
000454  f7fffffe          BL       TEXT_SetText
000458  6828              LDR      r0,[r5,#0]            ;949  ; flagD
00045a  f0200080          BIC      r0,r0,#0x80           ;949
00045e  6028              STR      r0,[r5,#0]            ;949  ; flagD
000460  4631              MOV      r1,r6                 ;950
000462  4638              MOV      r0,r7                 ;950
000464  f7fffffe          BL       GPIO_ResetBits
000468  f8884002          STRB     r4,[r8,#2]            ;951
00046c  f7fffffe          BL       Write_LOAD
000470  e66f              B        |L6.338|
                  |L6.1138|
000472  4614              MOV      r4,r2                 ;958
000474  f7fffffe          BL       WM_GetDialogItem
000478  a125              ADR      r1,|L6.1296|
00047a  f7fffffe          BL       TEXT_SetText
00047e  6828              LDR      r0,[r5,#0]            ;960  ; flagD
000480  f0400080          ORR      r0,r0,#0x80           ;960
000484  6028              STR      r0,[r5,#0]            ;960  ; flagD
000486  4631              MOV      r1,r6                 ;961
000488  4638              MOV      r0,r7                 ;961
00048a  f7fffffe          BL       GPIO_SetBits
00048e  2001              MOVS     r0,#1                 ;962
000490  70a0              STRB     r0,[r4,#2]            ;962
000492  f7fffffe          BL       Write_LOAD
000496  e65c              B        |L6.338|
                  |L6.1176|
000498  4649              MOV      r1,r9                 ;972
00049a  4617              MOV      r7,r2                 ;972
00049c  f7fffffe          BL       WM_GetDialogItem
0004a0  4680              MOV      r8,r0                 ;972
0004a2  f06f4170          MVN      r1,#0xf0000000        ;973
0004a6  4640              MOV      r0,r8                 ;973
0004a8  f7fffffe          BL       TEXT_SetBkColor
0004ac  f06f417f          MVN      r1,#0xff000000        ;974
0004b0  4640              MOV      r0,r8                 ;974
0004b2  f7fffffe          BL       TEXT_SetTextColor
0004b6  4631              MOV      r1,r6                 ;976
0004b8  6878              LDR      r0,[r7,#4]            ;976  ; load_wind
0004ba  f7fffffe          BL       WM_GetDialogItem
0004be  4606              MOV      r6,r0                 ;976
0004c0  4914              LDR      r1,|L6.1300|
0004c2  4630              MOV      r0,r6                 ;977
0004c4  f7fffffe          BL       TEXT_SetBkColor
0004c8  2100              MOVS     r1,#0                 ;978
0004ca  4630              MOV      r0,r6                 ;978
0004cc  f7fffffe          BL       TEXT_SetTextColor
0004d0  9400              STR      r4,[sp,#0]            ;979
0004d2  e007              B        |L6.1252|
                  |L6.1236|
0004d4  f89d0000          LDRB     r0,[sp,#0]            ;981
0004d8  f80b4000          STRB     r4,[r11,r0]           ;981
0004dc  f89d0000          LDRB     r0,[sp,#0]            ;979
0004e0  1c40              ADDS     r0,r0,#1              ;979
0004e2  9000              STR      r0,[sp,#0]            ;979
                  |L6.1252|
0004e4  f89d0000          LDRB     r0,[sp,#0]            ;979
0004e8  2806              CMP      r0,#6                 ;979
0004ea  d3f3              BCC      |L6.1236|
0004ec  2056              MOVS     r0,#0x56              ;983
0004ee  7028              STRB     r0,[r5,#0]            ;983
0004f0  e62f              B        |L6.338|
                  |L6.1266|
0004f2  4809              LDR      r0,|L6.1304|
0004f4  f7fffffe          BL       atoi
0004f8  f44f717a          MOV      r1,#0x3e8             ;993
0004fc  4348              MULS     r0,r1,r0              ;993
0004fe  6130              STR      r0,[r6,#0x10]         ;993  ; InFlashSave
000500  e5f2              B        |L6.232|
;;;1015   void DEL_LOAD(void)
                          ENDP

000502  0000              DCW      0x0000
                  |L6.1284|
                          DCD      flagD
                  |L6.1288|
                          DCD      0x40020800
                  |L6.1292|
00050c  435600            DCB      "CV",0
00050f  00                DCB      0
                  |L6.1296|
000510  434300            DCB      "CC",0
000513  00                DCB      0
                  |L6.1300|
                          DCD      0x00bfffff
                  |L6.1304|
                          DCD      set_limit

                          AREA ||i.ResetLoad||, CODE, READONLY, ALIGN=2

                  ResetLoad PROC
;;;713    
;;;714    WM_HWIN ResetLoad(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;715      load_wind = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_HBKWIN, 0, 0);
000002  f7fffffe          BL       WM_GetDesktopWindow
000006  4603              MOV      r3,r0
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
00000c  9001              STR      r0,[sp,#4]
00000e  4a04              LDR      r2,|L7.32|
000010  2118              MOVS     r1,#0x18
000012  4804              LDR      r0,|L7.36|
000014  f7fffffe          BL       GUI_CreateDialogBox
000018  4903              LDR      r1,|L7.40|
00001a  6048              STR      r0,[r1,#4]  ; load_wind
;;;716      return load_wind;
;;;717    }
00001c  bd1c              POP      {r2-r4,pc}
;;;718    
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      _cbDialog2
                  |L7.36|
                          DCD      ||.constdata||
                  |L7.40|
                          DCD      ||.data||

                          AREA ||i._cbDialog2||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  _cbDialog2 PROC
;;;100    
;;;101    static void _cbDialog2(WM_MESSAGE * pMsg) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b06          VPUSH    {d8-d10}
000008  b083              SUB      sp,sp,#0xc
00000a  4604              MOV      r4,r0
;;;102      WM_HWIN hItem;
;;;103      int     NCode;
;;;104      int     Id;
;;;105      char    buf[6];
;;;106      static vu8 status_flash;
;;;107      float   dis_load_c = (float)SET_Current_Laod/1000;
00000c  4dfd              LDR      r5,|L8.1028|
00000e  6928              LDR      r0,[r5,#0x10]  ; Run_Control
000010  ee000a10          VMOV     s0,r0
000014  eeb80a40          VCVT.F32.U32 s0,s0
000018  eddf9afb          VLDR     s19,|L8.1032|
00001c  ee80aa29          VDIV.F32 s20,s0,s19
;;;108      float   dis_load_v = (float)SET_Voltage_Laod/1000;
000020  4628              MOV      r0,r5
000022  68c0              LDR      r0,[r0,#0xc]  ; Run_Control
000024  ee000a10          VMOV     s0,r0
000028  eeb80a40          VCVT.F32.U32 s0,s0
00002c  ee809a29          VDIV.F32 s18,s0,s19
;;;109      static float olvbuff,oldv;
;;;110      static float testc1,testc2,testres;
;;;111      static vu8 testflag;
;;;112      // USER START (Optionally insert additional variables)
;;;113      // USER END
;;;114    
;;;115      switch (pMsg->MsgId) {
;;;116    
;;;117    	case WM_PAINT://无效化重绘
;;;118    		GUI_SetColor(GUI_WHITE);//设置画笔颜色
;;;119            GUI_FillRect(0,25,480,26);//画一条实线
;;;120            GUI_SetColor(GUI_ORANGE);
;;;121            GUI_SetFont(&GUI_Fontsymbol);
;;;122            GUI_UC_SetEncodeUTF8();
;;;123            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;124            if(jkflag == 1)
;;;125    		{
;;;126    			GUI_DispStringAt("Jinko", 5, 1);//SET
;;;127    		}
;;;128            if(lang == 0)
;;;129    		{
;;;130    			GUI_SetColor(GUI_WHITE);
;;;131    			GUI_SetFont(&GUI_FontHZ20S);
;;;132    			GUI_UC_SetEncodeUTF8();
;;;133    			GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;134    			GUI_DispStringAt("测量显示", 130, 3);//SET
;;;135    		}else{
;;;136    			GUI_SetColor(GUI_WHITE);
;;;137    			GUI_SetFont(&GUI_Font20_ASCII);
;;;138    			GUI_DispStringAt("DISPLAY", 130, 3);
;;;139    		}
;;;140    //         GUI_SetFont(&GUI_FontD24x32);//
;;;141    // 		GUI_GotoXY(95,72);//设置显示坐标
;;;142    // 		GUI_DispFloatFix(DISS_Voltage,5,2);//显示电压值
;;;143    // 		GUI_GotoXY(95,140);//设置显示坐标
;;;144    // 		GUI_DispFloatFix(DISS_Current,5,2);//显示电流值
;;;145            GUI_SetFont(&GUI_Font24_1);
;;;146            GUI_DispStringAt("A",450,75);
;;;147            GUI_DispStringAt("V",450,100.);
;;;148            GUI_DispStringAt("V",450,150);
;;;149        
;;;150            GUI_SetFont(&GUI_FontEN40);
;;;151            GUI_SetColor(GUI_LIGHTGRAY);
000030  f8df93d8          LDR      r9,|L8.1036|
;;;152            GUI_DispStringAt("C:", 28, 190);
;;;153            GUI_SetColor(GUI_LIGHTGRAY);
;;;154            GUI_DispStringAt("m", 217, 196);
;;;155            GUI_DispStringAt("AH", 238, 187);
;;;156            
;;;157            GUI_SetColor(GUI_GREEN);
;;;158            GUI_SetFont(&GUI_Fontunit);
;;;159            GUI_DispStringAt("°",342, 2);
;;;160            GUI_SetFont(&GUI_Font24_1);
;;;161            GUI_DispStringAt("C",350, 2);
;;;162    //        DrawLock();
;;;163    //        GUI_SetColor(GUI_WHITE);
;;;164    //        GUI_SetFont(&GUI_Fontset_font);
;;;165    //        GUI_DispStringAt("过放电压",290, 150);
;;;166    		break;
;;;167    	case WM_KEY://接受按键消息来处理按键功能
;;;168    		switch (((WM_KEY_INFO*)(pMsg->Data.p))->Key) 
;;;169    		{ 
;;;170    			case GUI_KEY_TAB:
;;;171    
;;;172    			break;
;;;173    			
;;;174    			case GUI_KEY_ENTER:
;;;175    			break;
;;;176    		}
;;;177    	break;
;;;178    		
;;;179    	case WM_TIMER://定时模块消息
;;;180    	if(WM_GetTimerId(pMsg->Data.v) == ID_TimerTime1)
;;;181    	{
;;;182    //        lockstat2 = lockstat1;
;;;183    //        lockstat1 = lock;
;;;184    //        
;;;185    ////        if((vu32)(DISS_Current*1000) > SET_Current_Laod)
;;;186    ////        {
;;;187    ////            testflag = 1;
;;;188    ////        }else{
;;;189    ////            testflag = 0;
;;;190    ////            testc1 = testc2 = 0;
;;;191    ////        }
;;;192    ////        if(testflag == 1)
;;;193    ////        {
;;;194    ////            testc2 = testc1;
;;;195    ////            testc1 = DISS_Current;
;;;196    ////            if(testc1 < testc2)
;;;197    ////            {
;;;198    ////                testres = testc2;
;;;199    ////                testflag = 0;
;;;200    ////                testc1 = testc2 = 0;
;;;201    ////            }
;;;202    ////        }
;;;203    //        
;;;204    //        
;;;205    //        if(lockstat1 != lockstat2)
;;;206    //        {
;;;207    //            WM_InvalidateWindow(load_wind);
;;;208    //        }
;;;209    //         if(clear_flag3 == 1)
;;;210    //         {
;;;211    		if(lock == 1)
;;;212    		{
;;;213    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
000034  f6401b3d          MOV      r11,#0x93d
;;;214    			TEXT_SetText(hItem,"锁");
;;;215    		}else{
;;;216    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
;;;217    			TEXT_SetText(hItem,"");
;;;218    		}
;;;219    		
;;;220                if(DISS_Voltage < 0.3)
;;;221                {
;;;222                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;223                    sprintf(buf,"%.3f",0.000);       
000038  ed9f8bf5          VLDR     d8,|L8.1040|
00003c  6820              LDR      r0,[r4,#0]            ;115
00003e  f8df83d8          LDR      r8,|L8.1048|
;;;224                    TEXT_SetText(hItem,buf);
;;;225                }else{hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;227                    sprintf(buf,"%.3f",disloadv);       
;;;228                    TEXT_SetText(hItem,buf);
;;;229                }
;;;230    //         }else{
;;;231    //             hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;232    //             sprintf(buf,"%.3f",DISS_Voltage);       
;;;233    //             TEXT_SetText(hItem,buf);
;;;234    //         }
;;;235            if((float)SET_Current_Laod/1000 * DISS_Voltage > 200){
;;;236                SET_Current_Laod = 0;
;;;237                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
000042  4ff6              LDR      r7,|L8.1052|
000044  f44f467f          MOV      r6,#0xff00            ;157
000048  f06f4a7f          MVN      r10,#0xff000000       ;118
00004c  281d              CMP      r0,#0x1d              ;115
00004e  d07d              BEQ      |L8.332|
000050  dc04              BGT      |L8.92|
000052  280e              CMP      r0,#0xe               ;115
000054  d00b              BEQ      |L8.110|
000056  280f              CMP      r0,#0xf               ;115
000058  d106              BNE      |L8.104|
00005a  e00d              B        |L8.120|
                  |L8.92|
00005c  2826              CMP      r0,#0x26              ;115
00005e  d076              BEQ      |L8.334|
000060  f5a07080          SUB      r0,r0,#0x100          ;115
000064  3813              SUBS     r0,r0,#0x13           ;115
000066  d073              BEQ      |L8.336|
                  |L8.104|
;;;238                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;239                TEXT_SetTextColor(hItem, GUI_WHITE);            
;;;240                if(SET_Current_Laod > 55000 || (float)SET_Current_Laod/1000 * DISS_Voltage > 200){
;;;241                    SET_Current_Laod = 0;
;;;242                }
;;;243                dis_load_c = (float)SET_Current_Laod/1000;
;;;244                sprintf(buf,"%.3f",dis_load_c);
;;;245                TEXT_SetText(hItem,buf);
;;;246            }
;;;247            
;;;248                
;;;249            
;;;250    //        test_load();
;;;251            
;;;252            if(load_sw == load_on)
;;;253            {
;;;254                if(/*DISS_Current >= 30*/SET_Current_Laod >= 30000)
;;;255                {
;;;256                    alert_flag = 1;
;;;257                }else{
;;;258                    alert_flag = 0;
;;;259                }
;;;260                battery_c = (int)bc_raw;
;;;261                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_116);
;;;262                sprintf(buf,"%05d",battery_c);    
;;;263                TEXT_SetText(hItem,buf);
;;;264                
;;;265                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;266                sprintf(buf,"%.3f",DISS_Current);        
;;;267                TEXT_SetText(hItem,buf);
;;;268                if(status_flash == 0){
;;;269                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;270                    TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;271                    if(lang == 0)
;;;272                    {
;;;273                        TEXT_SetFont(hItem,&GUI_FontHZ16);//设定文本字体
;;;274                        GUI_UC_SetEncodeUTF8();        
;;;275                        TEXT_SetText(hItem,"放电中");
;;;276                    }else{
;;;277                        TEXT_SetFont(hItem,&GUI_Font20_ASCII);//设定文本字体
;;;278                        GUI_UC_SetEncodeUTF8();        
;;;279                        TEXT_SetText(hItem,"Discharging");
;;;280                    }
;;;281                    status_flash = 1;
;;;282                }else{
;;;283                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;284                    TEXT_SetText(hItem,"");
;;;285                    status_flash = 0;
;;;286                }
;;;287                if(load_cutoffv != 0 && DISS_Voltage < load_cutoffv)
;;;288    			{
;;;289    				Flag_Swtich_ON=0;
;;;290                    GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;291                    mode_sw = 0;
;;;292                    load_sw = load_off;
;;;293    			}
;;;294                
;;;295    //            if(olvbuff != 0 && olvbuff - DISS_Voltage > 0.3)
;;;296    //            {
;;;297    //                Flag_Swtich_ON=0;
;;;298    //                GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;299    //                mode_sw = 0;
;;;300    //                load_sw = load_off;
;;;301    //                overloadv = olvbuff;
;;;302    //                olvbuff= 0;
;;;303    //            }else{
;;;304    //                olvbuff = DISS_Voltage;
;;;305    //                overloadv = 0;
;;;306    //            }
;;;307                
;;;308            }else{
;;;309                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;310                TEXT_SetText(hItem,"");
;;;311                
;;;312                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;313                sprintf(buf,"%.3f",0.000);        
;;;314                TEXT_SetText(hItem,buf);
;;;315            }
;;;316    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_143);       
;;;317    //        sprintf(buf,"%.3f",overloadv);
;;;318    //        TEXT_SetText(hItem,buf);
;;;319            
;;;320            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_126);       
;;;321            sprintf(buf,"%.1f",temp);
;;;322            TEXT_SetText(hItem,buf);
;;;323            
;;;324    		WM_RestartTimer(pMsg->Data.v, 50);
;;;325    	}
;;;326    	break;
;;;327    	
;;;328        case WM_INIT_DIALOG://重绘外观
;;;329        //
;;;330        // Initialization of 'Window'
;;;331        //
;;;332            hItem = pMsg->hWin;
;;;333            WINDOW_SetBkColor(hItem, GUI_BLACK);
;;;334    		WM_CreateTimer(hItem,ID_TimerTime1,500,0);//创建本窗口定时器
;;;335        //
;;;336        // Initialization of 'Button'
;;;337        //
;;;338    //         hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_6);
;;;339    // 		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;340    // 		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;341    // 		GUI_UC_SetEncodeUTF8();
;;;342    // 		BUTTON_SetText(hItem,"充放电");
;;;343        //
;;;344        // Initialization of 'Button'
;;;345        //
;;;346    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
;;;347    		TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;348    		TEXT_SetFont(hItem,&GUI_FontHZ14);
;;;349    		TEXT_SetText(hItem,"");
;;;350    		
;;;351    		
;;;352           if(lang == 0)
;;;353            {
;;;354                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_7);
;;;355                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;356                BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;357                GUI_UC_SetEncodeUTF8();
;;;358                BUTTON_SetText(hItem, "内阻测试");
;;;359            //
;;;360            // Initialization of 'Button'
;;;361            //
;;;362                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_8);
;;;363                BUTTON_SetPressed(hItem,1);
;;;364                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;365                BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;366                GUI_UC_SetEncodeUTF8();
;;;367                BUTTON_SetText(hItem, "程控负载");
;;;368            //
;;;369            // Initialization of 'Button'
;;;370            //
;;;371                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
;;;372                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;373                BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;374                GUI_UC_SetEncodeUTF8();
;;;375                BUTTON_SetText(hItem, "程控电源");
;;;376            //
;;;377            // Initialization of 'Button'
;;;378            //
;;;379                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_10);
;;;380                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;381                BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;382                GUI_UC_SetEncodeUTF8();
;;;383                BUTTON_SetText(hItem, "充放电");
;;;384            //
;;;385            // Initialization of 'Button'
;;;386            //
;;;387                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_11);
;;;388                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;389                BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;390                GUI_UC_SetEncodeUTF8();
;;;391                BUTTON_SetText(hItem, "曲线");
;;;392            }else{
;;;393                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_7);
;;;394                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;395                BUTTON_SetFont      (hItem,    &GUI_Font16B_ASCII);//设定按钮文本字体
;;;396                GUI_UC_SetEncodeUTF8();
;;;397                BUTTON_SetText(hItem, "I.R. TEST");
;;;398            //
;;;399            // Initialization of 'Button'
;;;400            //
;;;401                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_8);
;;;402                BUTTON_SetPressed(hItem,1);
;;;403                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;404                BUTTON_SetFont      (hItem,    &GUI_Font16B_ASCII);//设定按钮文本字体
;;;405                GUI_UC_SetEncodeUTF8();
;;;406                BUTTON_SetText(hItem, "LOAD");
;;;407            //
;;;408            // Initialization of 'Button'
;;;409            //
;;;410                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
;;;411                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;412                BUTTON_SetFont      (hItem,    &GUI_Font16B_ASCII);//设定按钮文本字体
;;;413                GUI_UC_SetEncodeUTF8();
;;;414                BUTTON_SetText(hItem, "POWER");
;;;415            //
;;;416            // Initialization of 'Button'
;;;417            //
;;;418                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_10);
;;;419                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;420                BUTTON_SetFont      (hItem,    &GUI_Font16B_ASCII);//设定按钮文本字体
;;;421                GUI_UC_SetEncodeUTF8();
;;;422                BUTTON_SetText(hItem, "C&DC");
;;;423            //
;;;424            // Initialization of 'Button'
;;;425            //
;;;426                hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_11);
;;;427                BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;428                BUTTON_SetFont      (hItem,    &GUI_Font16B_ASCII);//设定按钮文本字体
;;;429                GUI_UC_SetEncodeUTF8();
;;;430                BUTTON_SetText(hItem, "GRAPH");
;;;431            }
;;;432    		
;;;433    		
;;;434    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_11);
;;;435    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;436            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;437    		GUI_UC_SetEncodeUTF8();
;;;438    		TEXT_SetText(hItem,"V:");
;;;439    		
;;;440    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_12);
;;;441    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;442            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;443    		GUI_UC_SetEncodeUTF8();
;;;444    		TEXT_SetText(hItem,"I:");
;;;445            
;;;446            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_13);
;;;447    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;448            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;449    		GUI_UC_SetEncodeUTF8();
;;;450    		TEXT_SetText(hItem,"V");
;;;451    		
;;;452    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_14);
;;;453    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;454            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;455    		GUI_UC_SetEncodeUTF8();
;;;456    		TEXT_SetText(hItem,"A");
;;;457            
;;;458            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_48);
;;;459    		TEXT_SetTextColor(hItem, GUI_BLACK);//设置字体颜色
;;;460            TEXT_SetBkColor(hItem,0x00BFFFFF);
;;;461            if(lang == 0)
;;;462            {
;;;463                TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;464                GUI_UC_SetEncodeUTF8();
;;;465                TEXT_SetText(hItem,"负载电流");
;;;466            }else{
;;;467                TEXT_SetFont(hItem,&GUI_Font20_ASCII);//设定文本字体
;;;468                GUI_UC_SetEncodeUTF8();
;;;469                TEXT_SetText(hItem,"Load C");
;;;470            }
;;;471            
;;;472            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_49);
;;;473            sprintf(buf,"%.3f",dis_load_c);
;;;474    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;475            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;476    		GUI_UC_SetEncodeUTF8();     
;;;477    		TEXT_SetText(hItem,buf);
;;;478            
;;;479            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_143);
;;;480            sprintf(buf,"%.3f",load_cutoffv);
;;;481    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;482            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;483    		GUI_UC_SetEncodeUTF8();     
;;;484    		TEXT_SetText(hItem,buf);
;;;485            
;;;486            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;487            sprintf(buf,"%.3f",0.000);
;;;488    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;489            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;490    		GUI_UC_SetEncodeUTF8();        
;;;491    		TEXT_SetText(hItem,buf);
;;;492            
;;;493            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;494            sprintf(buf,"%.3f",0.000);
;;;495    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;496            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;497    		GUI_UC_SetEncodeUTF8();        
;;;498    		TEXT_SetText(hItem,buf);
;;;499            
;;;500            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_116);
;;;501            sprintf(buf,"%05d",0);
;;;502            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;503            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;504            GUI_UC_SetEncodeUTF8();        
;;;505            TEXT_SetText(hItem,buf);
;;;506            if(lang == 0)
;;;507            {
;;;508    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_120);
;;;509    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;510    			TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;511    			GUI_UC_SetEncodeUTF8();        
;;;512    			TEXT_SetText(hItem,"负载模式");
;;;513    			
;;;514    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_158);
;;;515    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;516    			TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;517    			GUI_UC_SetEncodeUTF8();        
;;;518    			TEXT_SetText(hItem,"截止电压");
;;;519    		}else{
;;;520    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_120);
;;;521    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;522    			TEXT_SetFont(hItem,&GUI_Font20_ASCII);//设定文本字体
;;;523    			GUI_UC_SetEncodeUTF8();        
;;;524    			TEXT_SetText(hItem,"Mode");
;;;525    			
;;;526    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_158);
;;;527    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;528    			TEXT_SetFont(hItem,&GUI_Font20_ASCII);//设定文本字体
;;;529    			GUI_UC_SetEncodeUTF8();        
;;;530    			TEXT_SetText(hItem,"Cutoff V");
;;;531    		}
;;;532            
;;;533            if(load_mode == 1)
;;;534            {
;;;535                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_121);
;;;536                TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;537                TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;538                GUI_UC_SetEncodeUTF8();
;;;539                GPIO_SetBits(GPIOC,GPIO_Pin_10);//CC
;;;540                TEXT_SetText(hItem,"CC");
;;;541                flag_Load_CC = 1;
;;;542            }else if(load_mode == 0){
;;;543                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_121);
;;;544                TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;545                TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;546                GUI_UC_SetEncodeUTF8();  
;;;547                GPIO_ResetBits(GPIOC,GPIO_Pin_10);//CV            
;;;548                TEXT_SetText(hItem,"CV");
;;;549                flag_Load_CC = 0;
;;;550            }
;;;551            
;;;552    		if(lang == 0)
;;;553            {
;;;554    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_122);
;;;555    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;556    			TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;557    			GUI_UC_SetEncodeUTF8();
;;;558    			TEXT_SetText(hItem,"负载电压");
;;;559    		}else{
;;;560    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_122);
;;;561    			TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;562    			TEXT_SetFont(hItem,&GUI_Font20_ASCII);//设定文本字体
;;;563    			GUI_UC_SetEncodeUTF8();
;;;564    			TEXT_SetText(hItem,"Load V");
;;;565    		}
;;;566            
;;;567            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_123);
;;;568            sprintf(buf,"%.3f",dis_load_v);
;;;569    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;570            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;571    		GUI_UC_SetEncodeUTF8();     
;;;572    		TEXT_SetText(hItem,buf);
;;;573            
;;;574            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_126);
;;;575            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;576            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体       
;;;577            sprintf(buf,"%.1f",temp);
;;;578            TEXT_SetText(hItem,buf);
;;;579            
;;;580    
;;;581        // USER START (Optionally insert additional code for further widget initialization)
;;;582        // USER END
;;;583        break;
;;;584      case WM_NOTIFY_PARENT:
;;;585        Id    = WM_GetId(pMsg->hWinSrc);
;;;586        NCode = pMsg->Data.v;
;;;587        switch(Id) {
;;;588        case ID_BUTTON_6: // Notifications sent by 'Button'
;;;589          switch(NCode) {
;;;590          case WM_NOTIFICATION_CLICKED:
;;;591            // USER START (Optionally insert code for reacting on notification message)
;;;592            // USER END
;;;593            break;
;;;594          case WM_NOTIFICATION_RELEASED:
;;;595            // USER START (Optionally insert code for reacting on notification message)
;;;596            // USER END
;;;597            break;
;;;598          // USER START (Optionally insert additional code for further notification handling)
;;;599          // USER END
;;;600          }
;;;601          break;
;;;602        case ID_BUTTON_7: // Notifications sent by 'Button'
;;;603          switch(NCode) {
;;;604          case WM_NOTIFICATION_CLICKED:
;;;605            // USER START (Optionally insert code for reacting on notification message)
;;;606            // USER END
;;;607            break;
;;;608          case WM_NOTIFICATION_RELEASED:
;;;609    				
;;;610            // USER START (Optionally insert code for reacting on notification message)
;;;611            // USER END
;;;612            break;
;;;613          // USER START (Optionally insert additional code for further notification handling)
;;;614          // USER END
;;;615          }
;;;616          break;
;;;617        case ID_BUTTON_8: // Notifications sent by 'Button'
;;;618          switch(NCode) {
;;;619          case WM_NOTIFICATION_CLICKED:
;;;620            // USER START (Optionally insert code for reacting on notification message)
;;;621            // USER END
;;;622            break;
;;;623          case WM_NOTIFICATION_RELEASED:
;;;624            // USER START (Optionally insert code for reacting on notification message)
;;;625            // USER END
;;;626            break;
;;;627          // USER START (Optionally insert additional code for further notification handling)
;;;628          // USER END
;;;629          }
;;;630          break;
;;;631        case ID_BUTTON_9: // Notifications sent by 'Button'
;;;632          switch(NCode) {
;;;633          case WM_NOTIFICATION_CLICKED:
;;;634            // USER START (Optionally insert code for reacting on notification message)
;;;635            // USER END
;;;636            break;
;;;637          case WM_NOTIFICATION_RELEASED:
;;;638            // USER START (Optionally insert code for reacting on notification message)
;;;639            // USER END
;;;640            break;
;;;641          // USER START (Optionally insert additional code for further notification handling)
;;;642          // USER END
;;;643          }
;;;644          break;
;;;645        case ID_BUTTON_10: // Notifications sent by 'Button'
;;;646          switch(NCode) {
;;;647          case WM_NOTIFICATION_CLICKED:
;;;648            // USER START (Optionally insert code for reacting on notification message)
;;;649            // USER END
;;;650            break;
;;;651          case WM_NOTIFICATION_RELEASED:
;;;652            // USER START (Optionally insert code for reacting on notification message)
;;;653            // USER END
;;;654            break;
;;;655          // USER START (Optionally insert additional code for further notification handling)
;;;656          // USER END
;;;657          }
;;;658          break;
;;;659        case ID_BUTTON_11: // Notifications sent by 'Button'
;;;660          switch(NCode) {
;;;661          case WM_NOTIFICATION_CLICKED:
;;;662            // USER START (Optionally insert code for reacting on notification message)
;;;663            // USER END
;;;664            break;
;;;665          case WM_NOTIFICATION_RELEASED:
;;;666            // USER START (Optionally insert code for reacting on notification message)
;;;667            // USER END
;;;668            break;
;;;669          // USER START (Optionally insert additional code for further notification handling)
;;;670          // USER END
;;;671          }
;;;672          break;
;;;673        // USER START (Optionally insert additional code for further Ids)
;;;674        // USER END
;;;675        }
;;;676        break;
;;;677      // USER START (Optionally insert additional message handling)
;;;678      // USER END
;;;679      default:
;;;680        WM_DefaultProc(pMsg);
000068  4620              MOV      r0,r4
00006a  f7fffffe          BL       WM_DefaultProc
                  |L8.110|
;;;681        break;
;;;682      }
;;;683    }
00006e  b003              ADD      sp,sp,#0xc
000070  ecbd8b06          VPOP     {d8-d10}
000074  e8bd8ff0          POP      {r4-r11,pc}
                  |L8.120|
000078  4650              MOV      r0,r10                ;118
00007a  f7fffffe          BL       GUI_SetColor
00007e  231a              MOVS     r3,#0x1a              ;119
000080  f44f72f0          MOV      r2,#0x1e0             ;119
000084  2119              MOVS     r1,#0x19              ;119
000086  2000              MOVS     r0,#0                 ;119
000088  f7fffffe          BL       GUI_FillRect
00008c  f24a50ff          MOV      r0,#0xa5ff            ;120
000090  f7fffffe          BL       GUI_SetColor
000094  48e2              LDR      r0,|L8.1056|
000096  f7fffffe          BL       GUI_SetFont
00009a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00009e  2002              MOVS     r0,#2                 ;123
0000a0  f7fffffe          BL       GUI_SetTextMode
0000a4  48df              LDR      r0,|L8.1060|
0000a6  7800              LDRB     r0,[r0,#0]            ;124  ; jkflag
0000a8  2801              CMP      r0,#1                 ;124
0000aa  d104              BNE      |L8.182|
0000ac  2201              MOVS     r2,#1                 ;126
0000ae  2105              MOVS     r1,#5                 ;126
0000b0  a0dd              ADR      r0,|L8.1064|
0000b2  f7fffffe          BL       GUI_DispStringAt
                  |L8.182|
0000b6  f8980000          LDRB     r0,[r8,#0]            ;128  ; lang
0000ba  2800              CMP      r0,#0                 ;128
0000bc  d050              BEQ      |L8.352|
0000be  4650              MOV      r0,r10                ;136
0000c0  f7fffffe          BL       GUI_SetColor
0000c4  48da              LDR      r0,|L8.1072|
0000c6  f7fffffe          BL       GUI_SetFont
0000ca  2203              MOVS     r2,#3                 ;138
0000cc  2182              MOVS     r1,#0x82              ;138
0000ce  a0d9              ADR      r0,|L8.1076|
0000d0  f7fffffe          BL       GUI_DispStringAt
                  |L8.212|
0000d4  48d9              LDR      r0,|L8.1084|
0000d6  f7fffffe          BL       GUI_SetFont
0000da  f44f74e1          MOV      r4,#0x1c2             ;146
0000de  224b              MOVS     r2,#0x4b              ;146
0000e0  4621              MOV      r1,r4                 ;146
0000e2  a0d7              ADR      r0,|L8.1088|
0000e4  f7fffffe          BL       GUI_DispStringAt
0000e8  2264              MOVS     r2,#0x64              ;147
0000ea  4621              MOV      r1,r4                 ;147
0000ec  a0d5              ADR      r0,|L8.1092|
0000ee  f7fffffe          BL       GUI_DispStringAt
0000f2  2296              MOVS     r2,#0x96              ;148
0000f4  4621              MOV      r1,r4                 ;148
0000f6  a0d3              ADR      r0,|L8.1092|
0000f8  f7fffffe          BL       GUI_DispStringAt
0000fc  48d2              LDR      r0,|L8.1096|
0000fe  f7fffffe          BL       GUI_SetFont
000102  4648              MOV      r0,r9                 ;151
000104  f7fffffe          BL       GUI_SetColor
000108  22be              MOVS     r2,#0xbe              ;152
00010a  211c              MOVS     r1,#0x1c              ;152
00010c  a0cf              ADR      r0,|L8.1100|
00010e  f7fffffe          BL       GUI_DispStringAt
000112  4648              MOV      r0,r9                 ;153
000114  f7fffffe          BL       GUI_SetColor
000118  22c4              MOVS     r2,#0xc4              ;154
00011a  21d9              MOVS     r1,#0xd9              ;154
00011c  a0cc              ADR      r0,|L8.1104|
00011e  f7fffffe          BL       GUI_DispStringAt
000122  22bb              MOVS     r2,#0xbb              ;155
000124  21ee              MOVS     r1,#0xee              ;155
000126  a0cb              ADR      r0,|L8.1108|
000128  f7fffffe          BL       GUI_DispStringAt
00012c  4630              MOV      r0,r6                 ;157
00012e  f7fffffe          BL       GUI_SetColor
000132  48c9              LDR      r0,|L8.1112|
000134  f7fffffe          BL       GUI_SetFont
000138  2202              MOVS     r2,#2                 ;159
00013a  f44f71ab          MOV      r1,#0x156             ;159
00013e  a0c7              ADR      r0,|L8.1116|
000140  f7fffffe          BL       GUI_DispStringAt
000144  48bd              LDR      r0,|L8.1084|
000146  f7fffffe          BL       GUI_SetFont
00014a  e002              B        |L8.338|
                  |L8.332|
00014c  e1cd              B        |L8.1258|
                  |L8.334|
00014e  e3b8              B        |L8.2242|
                  |L8.336|
000150  e017              B        |L8.386|
                  |L8.338|
000152  2202              MOVS     r2,#2                 ;161
000154  f44f71af          MOV      r1,#0x15e             ;161
000158  a0c1              ADR      r0,|L8.1120|
00015a  f7fffffe          BL       GUI_DispStringAt
                  |L8.350|
00015e  e786              B        |L8.110|
                  |L8.352|
000160  4650              MOV      r0,r10                ;130
000162  f7fffffe          BL       GUI_SetColor
000166  48bf              LDR      r0,|L8.1124|
000168  f7fffffe          BL       GUI_SetFont
00016c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000170  2002              MOVS     r0,#2                 ;133
000172  f7fffffe          BL       GUI_SetTextMode
000176  2203              MOVS     r2,#3                 ;134
000178  2182              MOVS     r1,#0x82              ;134
00017a  a0bb              ADR      r0,|L8.1128|
00017c  f7fffffe          BL       GUI_DispStringAt
000180  e7a8              B        |L8.212|
                  |L8.386|
000182  68e0              LDR      r0,[r4,#0xc]          ;180
000184  f7fffffe          BL       WM_GetTimerId
000188  2802              CMP      r0,#2                 ;180
00018a  d1e8              BNE      |L8.350|
00018c  48ba              LDR      r0,|L8.1144|
00018e  7800              LDRB     r0,[r0,#0]            ;211  ; lock
000190  2801              CMP      r0,#1                 ;211
000192  d01e              BEQ      |L8.466|
000194  4659              MOV      r1,r11                ;216
000196  6860              LDR      r0,[r4,#4]            ;216
000198  f7fffffe          BL       WM_GetDialogItem
00019c  a1b5              ADR      r1,|L8.1140|
00019e  f7fffffe          BL       TEXT_SetText
                  |L8.418|
0001a2  f8df92d8          LDR      r9,|L8.1148|
0001a6  49b6              LDR      r1,|L8.1152|
0001a8  f8d90000          LDR      r0,[r9,#0]            ;220  ; DISS_Voltage
0001ac  4288              CMP      r0,r1                 ;220
0001ae  da18              BGE      |L8.482|
0001b0  f6400191          MOV      r1,#0x891             ;222
0001b4  6860              LDR      r0,[r4,#4]            ;222
0001b6  f7fffffe          BL       WM_GetDialogItem
0001ba  4606              MOV      r6,r0                 ;222
0001bc  ec532b18          VMOV     r2,r3,d8              ;223
0001c0  a1b0              ADR      r1,|L8.1156|
0001c2  4668              MOV      r0,sp                 ;223
0001c4  f7fffffe          BL       __2sprintf
0001c8  4669              MOV      r1,sp                 ;224
0001ca  4630              MOV      r0,r6                 ;224
0001cc  f7fffffe          BL       TEXT_SetText
0001d0  e01d              B        |L8.526|
                  |L8.466|
0001d2  4659              MOV      r1,r11                ;213
0001d4  6860              LDR      r0,[r4,#4]            ;213
0001d6  f7fffffe          BL       WM_GetDialogItem
0001da  a1ac              ADR      r1,|L8.1164|
0001dc  f7fffffe          BL       TEXT_SetText
0001e0  e7df              B        |L8.418|
                  |L8.482|
0001e2  f6400191          MOV      r1,#0x891             ;226
0001e6  6860              LDR      r0,[r4,#4]            ;226
0001e8  f7fffffe          BL       WM_GetDialogItem
0001ec  4606              MOV      r6,r0                 ;226
0001ee  48a8              LDR      r0,|L8.1168|
0001f0  6800              LDR      r0,[r0,#0]            ;227  ; disloadv
0001f2  f7fffffe          BL       __aeabi_f2d
0001f6  ec410b10          VMOV     d0,r0,r1              ;227
0001fa  a1a2              ADR      r1,|L8.1156|
0001fc  ec532b10          VMOV     r2,r3,d0              ;227
000200  4668              MOV      r0,sp                 ;227
000202  f7fffffe          BL       __2sprintf
000206  4669              MOV      r1,sp                 ;228
000208  4630              MOV      r0,r6                 ;228
00020a  f7fffffe          BL       TEXT_SetText
                  |L8.526|
00020e  6928              LDR      r0,[r5,#0x10]         ;235  ; Run_Control
000210  f8dfb280          LDR      r11,|L8.1172|
000214  ee000a10          VMOV     s0,r0                 ;235
000218  2600              MOVS     r6,#0                 ;235
00021a  eeb80a40          VCVT.F32.U32 s0,s0                 ;235
00021e  eec00a29          VDIV.F32 s1,s0,s19             ;235
000222  ed990a00          VLDR     s0,[r9,#0]            ;235
000226  ee200a80          VMUL.F32 s0,s1,s0              ;235
00022a  ee100a10          VMOV     r0,s0                 ;235
00022e  4558              CMP      r0,r11                ;235
000230  dd3b              BLE      |L8.682|
000232  612e              STR      r6,[r5,#0x10]         ;236  ; Run_Control
000234  f640016e          MOV      r1,#0x86e             ;237
000238  6878              LDR      r0,[r7,#4]            ;237  ; load_wind
00023a  f7fffffe          BL       WM_GetDialogItem
00023e  9002              STR      r0,[sp,#8]            ;237
000240  f06f4170          MVN      r1,#0xf0000000        ;238
000244  9802              LDR      r0,[sp,#8]            ;238
000246  f7fffffe          BL       TEXT_SetBkColor
00024a  4651              MOV      r1,r10                ;239
00024c  9802              LDR      r0,[sp,#8]            ;239
00024e  f7fffffe          BL       TEXT_SetTextColor
000252  6928              LDR      r0,[r5,#0x10]         ;240  ; Run_Control
000254  f24d61d8          MOV      r1,#0xd6d8            ;240
000258  4288              CMP      r0,r1                 ;240
00025a  d80e              BHI      |L8.634|
00025c  6928              LDR      r0,[r5,#0x10]         ;240  ; Run_Control
00025e  ee000a10          VMOV     s0,r0                 ;240
000262  eeb80a40          VCVT.F32.U32 s0,s0                 ;240
000266  eec00a29          VDIV.F32 s1,s0,s19             ;240
00026a  ed990a00          VLDR     s0,[r9,#0]            ;240
00026e  ee200a80          VMUL.F32 s0,s1,s0              ;240
000272  ee100a10          VMOV     r0,s0                 ;240
000276  4558              CMP      r0,r11                ;240
000278  dd00              BLE      |L8.636|
                  |L8.634|
00027a  612e              STR      r6,[r5,#0x10]         ;241  ; Run_Control
                  |L8.636|
00027c  6928              LDR      r0,[r5,#0x10]         ;243  ; Run_Control
00027e  ee000a10          VMOV     s0,r0                 ;243
000282  eef80a40          VCVT.F32.U32 s1,s0                 ;243
000286  ee800aa9          VDIV.F32 s0,s1,s19             ;243
00028a  ee100a10          VMOV     r0,s0                 ;244
00028e  f7fffffe          BL       __aeabi_f2d
000292  ec410b10          VMOV     d0,r0,r1              ;244
000296  a17b              ADR      r1,|L8.1156|
000298  ec532b10          VMOV     r2,r3,d0              ;244
00029c  4668              MOV      r0,sp                 ;244
00029e  f7fffffe          BL       __2sprintf
0002a2  4669              MOV      r1,sp                 ;245
0002a4  9802              LDR      r0,[sp,#8]            ;245
0002a6  f7fffffe          BL       TEXT_SetText
                  |L8.682|
0002aa  7838              LDRB     r0,[r7,#0]            ;252  ; load_sw
0002ac  2801              CMP      r0,#1                 ;252
0002ae  d032              BEQ      |L8.790|
0002b0  f6400196          MOV      r1,#0x896             ;309
0002b4  6860              LDR      r0,[r4,#4]            ;309
0002b6  f7fffffe          BL       WM_GetDialogItem
0002ba  a16e              ADR      r1,|L8.1140|
0002bc  f7fffffe          BL       TEXT_SetText
0002c0  f6400192          MOV      r1,#0x892             ;312
0002c4  6860              LDR      r0,[r4,#4]            ;312
0002c6  f7fffffe          BL       WM_GetDialogItem
0002ca  4605              MOV      r5,r0                 ;312
0002cc  ec532b18          VMOV     r2,r3,d8              ;313
0002d0  a16c              ADR      r1,|L8.1156|
0002d2  4668              MOV      r0,sp                 ;313
0002d4  f7fffffe          BL       __2sprintf
0002d8  4669              MOV      r1,sp                 ;314
0002da  4628              MOV      r0,r5                 ;314
0002dc  f7fffffe          BL       TEXT_SetText
                  |L8.736|
0002e0  f6401112          MOV      r1,#0x912             ;320
0002e4  6860              LDR      r0,[r4,#4]            ;320
0002e6  f7fffffe          BL       WM_GetDialogItem
0002ea  4605              MOV      r5,r0                 ;320
0002ec  486a              LDR      r0,|L8.1176|
0002ee  6800              LDR      r0,[r0,#0]            ;321  ; temp
0002f0  f7fffffe          BL       __aeabi_f2d
0002f4  ec410b10          VMOV     d0,r0,r1              ;321
0002f8  a168              ADR      r1,|L8.1180|
0002fa  ec532b10          VMOV     r2,r3,d0              ;321
0002fe  4668              MOV      r0,sp                 ;321
000300  f7fffffe          BL       __2sprintf
000304  4669              MOV      r1,sp                 ;322
000306  4628              MOV      r0,r5                 ;322
000308  f7fffffe          BL       TEXT_SetText
00030c  2132              MOVS     r1,#0x32              ;324
00030e  68e0              LDR      r0,[r4,#0xc]          ;324
000310  f7fffffe          BL       WM_RestartTimer
000314  e6ab              B        |L8.110|
                  |L8.790|
000316  6929              LDR      r1,[r5,#0x10]         ;254  ; Run_Control
000318  f2475230          MOV      r2,#0x7530            ;254
00031c  4861              LDR      r0,|L8.1188|
00031e  2501              MOVS     r5,#1                 ;126
000320  4291              CMP      r1,r2                 ;254
000322  d301              BCC      |L8.808|
000324  7005              STRB     r5,[r0,#0]            ;256
000326  e000              B        |L8.810|
                  |L8.808|
000328  7006              STRB     r6,[r0,#0]            ;258
                  |L8.810|
00032a  485f              LDR      r0,|L8.1192|
00032c  f8dfa17c          LDR      r10,|L8.1196|
000330  ed900a00          VLDR     s0,[r0,#0]            ;260
000334  eebd0ac0          VCVT.S32.F32 s0,s0                 ;260
000338  ee100a10          VMOV     r0,s0                 ;260
00033c  f8ca0000          STR      r0,[r10,#0]           ;260  ; battery_c
000340  f640110d          MOV      r1,#0x90d             ;261
000344  6860              LDR      r0,[r4,#4]            ;261
000346  f7fffffe          BL       WM_GetDialogItem
00034a  4683              MOV      r11,r0                ;261
00034c  f8da2000          LDR      r2,[r10,#0]           ;262  ; battery_c
000350  a157              ADR      r1,|L8.1200|
000352  4668              MOV      r0,sp                 ;262
000354  f7fffffe          BL       __2sprintf
000358  4669              MOV      r1,sp                 ;263
00035a  4658              MOV      r0,r11                ;263
00035c  f7fffffe          BL       TEXT_SetText
000360  f6400192          MOV      r1,#0x892             ;265
000364  6860              LDR      r0,[r4,#4]            ;265
000366  f7fffffe          BL       WM_GetDialogItem
00036a  4682              MOV      r10,r0                ;265
00036c  4852              LDR      r0,|L8.1208|
00036e  6800              LDR      r0,[r0,#0]            ;266  ; DISS_Current
000370  f7fffffe          BL       __aeabi_f2d
000374  ec410b10          VMOV     d0,r0,r1              ;266
000378  a142              ADR      r1,|L8.1156|
00037a  ec532b10          VMOV     r2,r3,d0              ;266
00037e  4668              MOV      r0,sp                 ;266
000380  f7fffffe          BL       __2sprintf
000384  4669              MOV      r1,sp                 ;267
000386  4650              MOV      r0,r10                ;267
000388  f7fffffe          BL       TEXT_SetText
00038c  7878              LDRB     r0,[r7,#1]            ;268  ; status_flash
00038e  b320              CBZ      r0,|L8.986|
000390  f6400196          MOV      r1,#0x896             ;283
000394  6860              LDR      r0,[r4,#4]            ;283
000396  f7fffffe          BL       WM_GetDialogItem
00039a  a136              ADR      r1,|L8.1140|
00039c  f7fffffe          BL       TEXT_SetText
0003a0  707e              STRB     r6,[r7,#1]            ;285
                  |L8.930|
0003a2  ed970a02          VLDR     s0,[r7,#8]            ;287
0003a6  eeb50ac0          VCMPE.F32 s0,#0.0               ;287
0003aa  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;287
0003ae  d097              BEQ      |L8.736|
0003b0  edd90a00          VLDR     s1,[r9,#0]            ;287
0003b4  eef40ac0          VCMPE.F32 s1,s0                 ;287
0003b8  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;287
0003bc  d290              BCS      |L8.736|
0003be  483f              LDR      r0,|L8.1212|
0003c0  6801              LDR      r1,[r0,#0]            ;289  ; flagA
0003c2  f0210140          BIC      r1,r1,#0x40           ;289
0003c6  6001              STR      r1,[r0,#0]            ;289  ; flagA
0003c8  f44f4100          MOV      r1,#0x8000            ;290
0003cc  483c              LDR      r0,|L8.1216|
0003ce  f7fffffe          BL       GPIO_SetBits
0003d2  483c              LDR      r0,|L8.1220|
0003d4  7006              STRB     r6,[r0,#0]            ;291
0003d6  703e              STRB     r6,[r7,#0]            ;292
0003d8  e782              B        |L8.736|
                  |L8.986|
0003da  f6400196          MOV      r1,#0x896             ;269
0003de  6860              LDR      r0,[r4,#4]            ;269
0003e0  f7fffffe          BL       WM_GetDialogItem
0003e4  4682              MOV      r10,r0                ;269
0003e6  21ff              MOVS     r1,#0xff              ;270
0003e8  4650              MOV      r0,r10                ;270
0003ea  f7fffffe          BL       TEXT_SetTextColor
0003ee  f8980000          LDRB     r0,[r8,#0]            ;271  ; lang
0003f2  b130              CBZ      r0,|L8.1026|
0003f4  490e              LDR      r1,|L8.1072|
0003f6  4650              MOV      r0,r10                ;277
0003f8  f7fffffe          BL       TEXT_SetFont
0003fc  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000400  e062              B        |L8.1224|
                  |L8.1026|
000402  e067              B        |L8.1236|
                  |L8.1028|
                          DCD      Run_Control
                  |L8.1032|
000408  447a0000          DCFS     0x447a0000 ; 1000
                  |L8.1036|
                          DCD      0x00d3d3d3
                  |L8.1040|
000410  00000000          DCFD     0x0000000000000000 ; 0
000414  00000000
                  |L8.1048|
                          DCD      lang
                  |L8.1052|
                          DCD      ||.data||
                  |L8.1056|
                          DCD      GUI_Fontsymbol
                  |L8.1060|
                          DCD      jkflag
                  |L8.1064|
000428  4a696e6b          DCB      "Jinko",0
00042c  6f00    
00042e  00                DCB      0
00042f  00                DCB      0
                  |L8.1072|
                          DCD      GUI_Font20_ASCII
                  |L8.1076|
000434  44495350          DCB      "DISPLAY",0
000438  4c415900
                  |L8.1084|
                          DCD      GUI_Font24_1
                  |L8.1088|
000440  4100              DCB      "A",0
000442  00                DCB      0
000443  00                DCB      0
                  |L8.1092|
000444  5600              DCB      "V",0
000446  00                DCB      0
000447  00                DCB      0
                  |L8.1096|
                          DCD      GUI_FontEN40
                  |L8.1100|
00044c  433a00            DCB      "C:",0
00044f  00                DCB      0
                  |L8.1104|
000450  6d00              DCB      "m",0
000452  00                DCB      0
000453  00                DCB      0
                  |L8.1108|
000454  414800            DCB      "AH",0
000457  00                DCB      0
                  |L8.1112|
                          DCD      GUI_Fontunit
                  |L8.1116|
00045c  c2b000            DCB      194,176,0
00045f  00                DCB      0
                  |L8.1120|
000460  4300              DCB      "C",0
000462  00                DCB      0
000463  00                DCB      0
                  |L8.1124|
                          DCD      GUI_FontHZ20S
                  |L8.1128|
000468  e6b58be9          DCB      230,181,139,233,135,143,230,152,190,231,164,186
00046c  878fe698
000470  bee7a4ba
                  |L8.1140|
000474  00                DCB      0
000475  00                DCB      0
000476  00                DCB      0
000477  00                DCB      0
                  |L8.1144|
                          DCD      lock
                  |L8.1148|
                          DCD      DISS_Voltage
                  |L8.1152|
                          DCD      0x3e99999a
                  |L8.1156|
000484  252e3366          DCB      "%.3f",0
000488  00      
000489  00                DCB      0
00048a  00                DCB      0
00048b  00                DCB      0
                  |L8.1164|
00048c  e9948100          DCB      233,148,129,0
                  |L8.1168|
                          DCD      disloadv
                  |L8.1172|
                          DCD      0x43480000
                  |L8.1176|
                          DCD      temp
                  |L8.1180|
00049c  252e3166          DCB      "%.1f",0
0004a0  00      
0004a1  00                DCB      0
0004a2  00                DCB      0
0004a3  00                DCB      0
                  |L8.1188|
                          DCD      alert_flag
                  |L8.1192|
                          DCD      bc_raw
                  |L8.1196|
                          DCD      battery_c
                  |L8.1200|
0004b0  25303564          DCB      "%05d",0
0004b4  00      
0004b5  00                DCB      0
0004b6  00                DCB      0
0004b7  00                DCB      0
                  |L8.1208|
                          DCD      DISS_Current
                  |L8.1212|
                          DCD      flagA
                  |L8.1216|
                          DCD      0x40020000
                  |L8.1220|
                          DCD      mode_sw
                  |L8.1224|
0004c8  a1fe              ADR      r1,|L8.2244|
0004ca  4650              MOV      r0,r10                ;279
0004cc  f7fffffe          BL       TEXT_SetText
                  |L8.1232|
0004d0  707d              STRB     r5,[r7,#1]            ;281
0004d2  e766              B        |L8.930|
                  |L8.1236|
0004d4  49fe              LDR      r1,|L8.2256|
0004d6  4650              MOV      r0,r10                ;273
0004d8  f7fffffe          BL       TEXT_SetFont
0004dc  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0004e0  a1fc              ADR      r1,|L8.2260|
0004e2  4650              MOV      r0,r10                ;275
0004e4  f7fffffe          BL       TEXT_SetText
0004e8  e7f2              B        |L8.1232|
                  |L8.1258|
0004ea  6865              LDR      r5,[r4,#4]            ;332
0004ec  2100              MOVS     r1,#0                 ;333
0004ee  4628              MOV      r0,r5                 ;333
0004f0  f7fffffe          BL       WINDOW_SetBkColor
0004f4  2300              MOVS     r3,#0                 ;334
0004f6  f44f72fa          MOV      r2,#0x1f4             ;334
0004fa  2102              MOVS     r1,#2                 ;334
0004fc  4628              MOV      r0,r5                 ;334
0004fe  f7fffffe          BL       WM_CreateTimer
000502  4659              MOV      r1,r11                ;346
000504  6860              LDR      r0,[r4,#4]            ;346
000506  f7fffffe          BL       WM_GetDialogItem
00050a  4605              MOV      r5,r0                 ;346
00050c  21ff              MOVS     r1,#0xff              ;347
00050e  4628              MOV      r0,r5                 ;347
000510  f7fffffe          BL       TEXT_SetTextColor
000514  49f2              LDR      r1,|L8.2272|
000516  4628              MOV      r0,r5                 ;348
000518  f7fffffe          BL       TEXT_SetFont
00051c  f2af01ac          ADR      r1,|L8.1140|
000520  4628              MOV      r0,r5                 ;349
000522  f7fffffe          BL       TEXT_SetText
000526  f8980000          LDRB     r0,[r8,#0]            ;352  ; lang
00052a  f640010b          MOV      r1,#0x80b             ;354
00052e  1c8d              ADDS     r5,r1,#2              ;371
000530  f6400b0c          MOV      r11,#0x80c            ;362
000534  2800              CMP      r0,#0                 ;352
000536  d07d              BEQ      |L8.1588|
000538  6860              LDR      r0,[r4,#4]            ;393
00053a  f7fffffe          BL       WM_GetDialogItem
00053e  9002              STR      r0,[sp,#8]            ;393
000540  2200              MOVS     r2,#0                 ;394
000542  4611              MOV      r1,r2                 ;394
000544  9802              LDR      r0,[sp,#8]            ;394
000546  f7fffffe          BL       BUTTON_SetTextColor
00054a  49e6              LDR      r1,|L8.2276|
00054c  9802              LDR      r0,[sp,#8]            ;395
00054e  f7fffffe          BL       BUTTON_SetFont
000552  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000556  a1e4              ADR      r1,|L8.2280|
000558  9802              LDR      r0,[sp,#8]            ;397
00055a  f7fffffe          BL       BUTTON_SetText
00055e  4659              MOV      r1,r11                ;401
000560  6860              LDR      r0,[r4,#4]            ;401
000562  f7fffffe          BL       WM_GetDialogItem
000566  4683              MOV      r11,r0                ;401
000568  2101              MOVS     r1,#1                 ;402
00056a  4658              MOV      r0,r11                ;402
00056c  f7fffffe          BL       BUTTON_SetPressed
000570  2200              MOVS     r2,#0                 ;403
000572  4611              MOV      r1,r2                 ;403
000574  4658              MOV      r0,r11                ;403
000576  f7fffffe          BL       BUTTON_SetTextColor
00057a  49da              LDR      r1,|L8.2276|
00057c  4658              MOV      r0,r11                ;404
00057e  f7fffffe          BL       BUTTON_SetFont
000582  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000586  a1db              ADR      r1,|L8.2292|
000588  4658              MOV      r0,r11                ;406
00058a  f7fffffe          BL       BUTTON_SetText
00058e  4629              MOV      r1,r5                 ;410
000590  6860              LDR      r0,[r4,#4]            ;410
000592  f7fffffe          BL       WM_GetDialogItem
000596  4605              MOV      r5,r0                 ;410
000598  2200              MOVS     r2,#0                 ;411
00059a  4611              MOV      r1,r2                 ;411
00059c  4628              MOV      r0,r5                 ;411
00059e  f7fffffe          BL       BUTTON_SetTextColor
0005a2  49d0              LDR      r1,|L8.2276|
0005a4  4628              MOV      r0,r5                 ;412
0005a6  f7fffffe          BL       BUTTON_SetFont
0005aa  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005ae  a1d3              ADR      r1,|L8.2300|
0005b0  4628              MOV      r0,r5                 ;414
0005b2  f7fffffe          BL       BUTTON_SetText
0005b6  f640010e          MOV      r1,#0x80e             ;418
0005ba  6860              LDR      r0,[r4,#4]            ;418
0005bc  f7fffffe          BL       WM_GetDialogItem
0005c0  4605              MOV      r5,r0                 ;418
0005c2  2200              MOVS     r2,#0                 ;419
0005c4  4611              MOV      r1,r2                 ;419
0005c6  4628              MOV      r0,r5                 ;419
0005c8  f7fffffe          BL       BUTTON_SetTextColor
0005cc  49c5              LDR      r1,|L8.2276|
0005ce  4628              MOV      r0,r5                 ;420
0005d0  f7fffffe          BL       BUTTON_SetFont
0005d4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005d8  a1ca              ADR      r1,|L8.2308|
0005da  4628              MOV      r0,r5                 ;422
0005dc  f7fffffe          BL       BUTTON_SetText
0005e0  f640010f          MOV      r1,#0x80f             ;426
0005e4  6860              LDR      r0,[r4,#4]            ;426
0005e6  f7fffffe          BL       WM_GetDialogItem
0005ea  4605              MOV      r5,r0                 ;426
0005ec  2200              MOVS     r2,#0                 ;427
0005ee  4611              MOV      r1,r2                 ;427
0005f0  4628              MOV      r0,r5                 ;427
0005f2  f7fffffe          BL       BUTTON_SetTextColor
0005f6  49bb              LDR      r1,|L8.2276|
0005f8  4628              MOV      r0,r5                 ;428
0005fa  f7fffffe          BL       BUTTON_SetFont
0005fe  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000602  a1c2              ADR      r1,|L8.2316|
000604  4628              MOV      r0,r5                 ;430
000606  f7fffffe          BL       BUTTON_SetText
                  |L8.1546|
00060a  f44f6101          MOV      r1,#0x810             ;434
00060e  6860              LDR      r0,[r4,#4]            ;434
000610  f7fffffe          BL       WM_GetDialogItem
000614  4605              MOV      r5,r0                 ;434
000616  4649              MOV      r1,r9                 ;435
000618  4628              MOV      r0,r5                 ;435
00061a  f7fffffe          BL       TEXT_SetTextColor
00061e  49bd              LDR      r1,|L8.2324|
000620  4628              MOV      r0,r5                 ;436
000622  f7fffffe          BL       TEXT_SetFont
000626  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00062a  a1bb              ADR      r1,|L8.2328|
00062c  4628              MOV      r0,r5                 ;438
00062e  f7fffffe          BL       TEXT_SetText
000632  e000              B        |L8.1590|
                  |L8.1588|
000634  e126              B        |L8.2180|
                  |L8.1590|
000636  f6400111          MOV      r1,#0x811             ;440
00063a  6860              LDR      r0,[r4,#4]            ;440
00063c  f7fffffe          BL       WM_GetDialogItem
000640  4605              MOV      r5,r0                 ;440
000642  4649              MOV      r1,r9                 ;441
000644  4628              MOV      r0,r5                 ;441
000646  f7fffffe          BL       TEXT_SetTextColor
00064a  49b2              LDR      r1,|L8.2324|
00064c  4628              MOV      r0,r5                 ;442
00064e  f7fffffe          BL       TEXT_SetFont
000652  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000656  a1b1              ADR      r1,|L8.2332|
000658  4628              MOV      r0,r5                 ;444
00065a  f7fffffe          BL       TEXT_SetText
00065e  f640011e          MOV      r1,#0x81e             ;446
000662  6860              LDR      r0,[r4,#4]            ;446
000664  f7fffffe          BL       WM_GetDialogItem
000668  4605              MOV      r5,r0                 ;446
00066a  4649              MOV      r1,r9                 ;447
00066c  4628              MOV      r0,r5                 ;447
00066e  f7fffffe          BL       TEXT_SetTextColor
000672  49a8              LDR      r1,|L8.2324|
000674  4628              MOV      r0,r5                 ;448
000676  f7fffffe          BL       TEXT_SetFont
00067a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00067e  f2af213c          ADR      r1,|L8.1092|
000682  4628              MOV      r0,r5                 ;450
000684  f7fffffe          BL       TEXT_SetText
000688  f640011f          MOV      r1,#0x81f             ;452
00068c  6860              LDR      r0,[r4,#4]            ;452
00068e  f7fffffe          BL       WM_GetDialogItem
000692  4605              MOV      r5,r0                 ;452
000694  4649              MOV      r1,r9                 ;453
000696  4628              MOV      r0,r5                 ;453
000698  f7fffffe          BL       TEXT_SetTextColor
00069c  499d              LDR      r1,|L8.2324|
00069e  4628              MOV      r0,r5                 ;454
0006a0  f7fffffe          BL       TEXT_SetFont
0006a4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006a8  f2af216c          ADR      r1,|L8.1088|
0006ac  4628              MOV      r0,r5                 ;456
0006ae  f7fffffe          BL       TEXT_SetText
0006b2  f640016d          MOV      r1,#0x86d             ;458
0006b6  6860              LDR      r0,[r4,#4]            ;458
0006b8  f7fffffe          BL       WM_GetDialogItem
0006bc  4605              MOV      r5,r0                 ;458
0006be  2100              MOVS     r1,#0                 ;459
0006c0  4628              MOV      r0,r5                 ;459
0006c2  f7fffffe          BL       TEXT_SetTextColor
0006c6  4996              LDR      r1,|L8.2336|
0006c8  4628              MOV      r0,r5                 ;460
0006ca  f7fffffe          BL       TEXT_SetBkColor
0006ce  f8980000          LDRB     r0,[r8,#0]            ;461  ; lang
0006d2  2800              CMP      r0,#0                 ;461
0006d4  d07e              BEQ      |L8.2004|
0006d6  4993              LDR      r1,|L8.2340|
0006d8  4628              MOV      r0,r5                 ;467
0006da  f7fffffe          BL       TEXT_SetFont
0006de  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006e2  a191              ADR      r1,|L8.2344|
0006e4  4628              MOV      r0,r5                 ;469
0006e6  f7fffffe          BL       TEXT_SetText
                  |L8.1770|
0006ea  f640016e          MOV      r1,#0x86e             ;472
0006ee  6860              LDR      r0,[r4,#4]            ;472
0006f0  f7fffffe          BL       WM_GetDialogItem
0006f4  4605              MOV      r5,r0                 ;472
0006f6  ee1a0a10          VMOV     r0,s20                ;473
0006fa  f7fffffe          BL       __aeabi_f2d
0006fe  ec410b10          VMOV     d0,r0,r1              ;473
000702  ec532b10          VMOV     r2,r3,d0              ;473
000706  f2af2184          ADR      r1,|L8.1156|
00070a  4668              MOV      r0,sp                 ;473
00070c  f7fffffe          BL       __2sprintf
000710  4651              MOV      r1,r10                ;474
000712  4628              MOV      r0,r5                 ;474
000714  f7fffffe          BL       TEXT_SetTextColor
000718  4985              LDR      r1,|L8.2352|
00071a  4628              MOV      r0,r5                 ;475
00071c  f7fffffe          BL       TEXT_SetFont
000720  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000724  4669              MOV      r1,sp                 ;477
000726  4628              MOV      r0,r5                 ;477
000728  f7fffffe          BL       TEXT_SetText
00072c  f640112d          MOV      r1,#0x92d             ;479
000730  6860              LDR      r0,[r4,#4]            ;479
000732  f7fffffe          BL       WM_GetDialogItem
000736  4605              MOV      r5,r0                 ;479
000738  68b8              LDR      r0,[r7,#8]            ;480  ; load_cutoffv
00073a  f7fffffe          BL       __aeabi_f2d
00073e  ec410b10          VMOV     d0,r0,r1              ;480
000742  ec532b10          VMOV     r2,r3,d0              ;480
000746  f2af21c4          ADR      r1,|L8.1156|
00074a  4668              MOV      r0,sp                 ;480
00074c  f7fffffe          BL       __2sprintf
000750  4651              MOV      r1,r10                ;481
000752  4628              MOV      r0,r5                 ;481
000754  f7fffffe          BL       TEXT_SetTextColor
000758  4975              LDR      r1,|L8.2352|
00075a  4628              MOV      r0,r5                 ;482
00075c  f7fffffe          BL       TEXT_SetFont
000760  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000764  4669              MOV      r1,sp                 ;484
000766  4628              MOV      r0,r5                 ;484
000768  f7fffffe          BL       TEXT_SetText
00076c  f6400191          MOV      r1,#0x891             ;486
000770  6860              LDR      r0,[r4,#4]            ;486
000772  f7fffffe          BL       WM_GetDialogItem
000776  4605              MOV      r5,r0                 ;486
000778  ec532b18          VMOV     r2,r3,d8              ;487
00077c  f2af21fc          ADR      r1,|L8.1156|
000780  4668              MOV      r0,sp                 ;487
000782  f7fffffe          BL       __2sprintf
000786  4631              MOV      r1,r6                 ;488
000788  4628              MOV      r0,r5                 ;488
00078a  f7fffffe          BL       TEXT_SetTextColor
00078e  4969              LDR      r1,|L8.2356|
000790  4628              MOV      r0,r5                 ;489
000792  f7fffffe          BL       TEXT_SetFont
000796  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00079a  4669              MOV      r1,sp                 ;491
00079c  4628              MOV      r0,r5                 ;491
00079e  f7fffffe          BL       TEXT_SetText
0007a2  f6400192          MOV      r1,#0x892             ;493
0007a6  6860              LDR      r0,[r4,#4]            ;493
0007a8  f7fffffe          BL       WM_GetDialogItem
0007ac  4605              MOV      r5,r0                 ;493
0007ae  ec532b18          VMOV     r2,r3,d8              ;494
0007b2  f2af3130          ADR      r1,|L8.1156|
0007b6  4668              MOV      r0,sp                 ;494
0007b8  f7fffffe          BL       __2sprintf
0007bc  4631              MOV      r1,r6                 ;495
0007be  4628              MOV      r0,r5                 ;495
0007c0  f7fffffe          BL       TEXT_SetTextColor
0007c4  495b              LDR      r1,|L8.2356|
0007c6  4628              MOV      r0,r5                 ;496
0007c8  f7fffffe          BL       TEXT_SetFont
0007cc  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0007d0  4669              MOV      r1,sp                 ;498
0007d2  e000              B        |L8.2006|
                  |L8.2004|
0007d4  e115              B        |L8.2562|
                  |L8.2006|
0007d6  4628              MOV      r0,r5                 ;498
0007d8  f7fffffe          BL       TEXT_SetText
0007dc  f640110d          MOV      r1,#0x90d             ;500
0007e0  6860              LDR      r0,[r4,#4]            ;500
0007e2  f7fffffe          BL       WM_GetDialogItem
0007e6  4605              MOV      r5,r0                 ;500
0007e8  2200              MOVS     r2,#0                 ;501
0007ea  f2af313c          ADR      r1,|L8.1200|
0007ee  4668              MOV      r0,sp                 ;501
0007f0  f7fffffe          BL       __2sprintf
0007f4  4631              MOV      r1,r6                 ;502
0007f6  4628              MOV      r0,r5                 ;502
0007f8  f7fffffe          BL       TEXT_SetTextColor
0007fc  494d              LDR      r1,|L8.2356|
0007fe  4628              MOV      r0,r5                 ;503
000800  f7fffffe          BL       TEXT_SetFont
000804  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000808  4669              MOV      r1,sp                 ;505
00080a  4628              MOV      r0,r5                 ;505
00080c  f7fffffe          BL       TEXT_SetText
000810  f8980000          LDRB     r0,[r8,#0]            ;506  ; lang
000814  f640110e          MOV      r1,#0x90e             ;508
000818  f6401539          MOV      r5,#0x939             ;514
00081c  2800              CMP      r0,#0                 ;506
00081e  d04f              BEQ      |L8.2240|
000820  6860              LDR      r0,[r4,#4]            ;520
000822  f7fffffe          BL       WM_GetDialogItem
000826  4681              MOV      r9,r0                 ;520
000828  4651              MOV      r1,r10                ;521
00082a  4648              MOV      r0,r9                 ;521
00082c  f7fffffe          BL       TEXT_SetTextColor
000830  493c              LDR      r1,|L8.2340|
000832  4648              MOV      r0,r9                 ;522
000834  f7fffffe          BL       TEXT_SetFont
000838  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00083c  a13e              ADR      r1,|L8.2360|
00083e  4648              MOV      r0,r9                 ;524
000840  f7fffffe          BL       TEXT_SetText
000844  4629              MOV      r1,r5                 ;526
000846  6860              LDR      r0,[r4,#4]            ;526
000848  f7fffffe          BL       WM_GetDialogItem
00084c  4605              MOV      r5,r0                 ;526
00084e  4651              MOV      r1,r10                ;527
000850  4628              MOV      r0,r5                 ;527
000852  f7fffffe          BL       TEXT_SetTextColor
000856  4933              LDR      r1,|L8.2340|
000858  4628              MOV      r0,r5                 ;528
00085a  f7fffffe          BL       TEXT_SetFont
00085e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000862  a137              ADR      r1,|L8.2368|
000864  4628              MOV      r0,r5                 ;530
000866  f7fffffe          BL       TEXT_SetText
                  |L8.2154|
00086a  78b8              LDRB     r0,[r7,#2]            ;533  ; load_mode
00086c  f8df90dc          LDR      r9,|L8.2380|
000870  4d37              LDR      r5,|L8.2384|
000872  f640110f          MOV      r1,#0x90f             ;535
000876  f44f6780          MOV      r7,#0x400             ;539
00087a  2801              CMP      r0,#1                 ;533
00087c  d072              BEQ      |L8.2404|
00087e  2800              CMP      r0,#0                 ;542
000880  d071              BEQ      |L8.2406|
000882  e124              B        |L8.2766|
                  |L8.2180|
000884  6860              LDR      r0,[r4,#4]            ;354
000886  f7fffffe          BL       WM_GetDialogItem
00088a  9002              STR      r0,[sp,#8]            ;354
00088c  2200              MOVS     r2,#0                 ;355
00088e  4611              MOV      r1,r2                 ;355
000890  9802              LDR      r0,[sp,#8]            ;355
000892  f7fffffe          BL       BUTTON_SetTextColor
000896  490e              LDR      r1,|L8.2256|
000898  9802              LDR      r0,[sp,#8]            ;356
00089a  f7fffffe          BL       BUTTON_SetFont
00089e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0008a2  a12c              ADR      r1,|L8.2388|
0008a4  9802              LDR      r0,[sp,#8]            ;358
0008a6  f7fffffe          BL       BUTTON_SetText
0008aa  4659              MOV      r1,r11                ;362
0008ac  6860              LDR      r0,[r4,#4]            ;362
0008ae  f7fffffe          BL       WM_GetDialogItem
0008b2  4683              MOV      r11,r0                ;362
0008b4  2101              MOVS     r1,#1                 ;363
0008b6  4658              MOV      r0,r11                ;363
0008b8  f7fffffe          BL       BUTTON_SetPressed
0008bc  2200              MOVS     r2,#0                 ;364
0008be  e053              B        |L8.2408|
                  |L8.2240|
0008c0  e0aa              B        |L8.2584|
                  |L8.2242|
0008c2  e175              B        |L8.2992|
                  |L8.2244|
0008c4  44697363          DCB      "Discharging",0
0008c8  68617267
0008cc  696e6700
                  |L8.2256|
                          DCD      GUI_FontHZ16
                  |L8.2260|
0008d4  e694bee7          DCB      230,148,190,231,148,181,228,184,173,0
0008d8  94b5e4b8
0008dc  ad00    
0008de  00                DCB      0
0008df  00                DCB      0
                  |L8.2272|
                          DCD      GUI_FontHZ14
                  |L8.2276|
                          DCD      GUI_Font16B_ASCII
                  |L8.2280|
0008e8  492e522e          DCB      "I.R. TEST",0
0008ec  20544553
0008f0  5400    
0008f2  00                DCB      0
0008f3  00                DCB      0
                  |L8.2292|
0008f4  4c4f4144          DCB      "LOAD",0
0008f8  00      
0008f9  00                DCB      0
0008fa  00                DCB      0
0008fb  00                DCB      0
                  |L8.2300|
0008fc  504f5745          DCB      "POWER",0
000900  5200    
000902  00                DCB      0
000903  00                DCB      0
                  |L8.2308|
000904  43264443          DCB      "C&DC",0
000908  00      
000909  00                DCB      0
00090a  00                DCB      0
00090b  00                DCB      0
                  |L8.2316|
00090c  47524150          DCB      "GRAPH",0
000910  4800    
000912  00                DCB      0
000913  00                DCB      0
                  |L8.2324|
                          DCD      GUI_FontEN40
                  |L8.2328|
000918  563a00            DCB      "V:",0
00091b  00                DCB      0
                  |L8.2332|
00091c  493a00            DCB      "I:",0
00091f  00                DCB      0
                  |L8.2336|
                          DCD      0x00bfffff
                  |L8.2340|
                          DCD      GUI_Font20_ASCII
                  |L8.2344|
000928  4c6f6164          DCB      "Load C",0
00092c  204300  
00092f  00                DCB      0
                  |L8.2352|
                          DCD      GUI_Font24_1
                  |L8.2356|
                          DCD      GUI_FontD24x32
                  |L8.2360|
000938  4d6f6465          DCB      "Mode",0
00093c  00      
00093d  00                DCB      0
00093e  00                DCB      0
00093f  00                DCB      0
                  |L8.2368|
000940  4375746f          DCB      "Cutoff V",0
000944  66662056
000948  00      
000949  00                DCB      0
00094a  00                DCB      0
00094b  00                DCB      0
                  |L8.2380|
                          DCD      0x40020800
                  |L8.2384|
                          DCD      flagD
                  |L8.2388|
000954  e58685e9          DCB      229,134,133,233,152,187,230,181,139,232,175,149,0
000958  98bbe6b5
00095c  8be8af95
000960  00      
000961  00                DCB      0
000962  00                DCB      0
000963  00                DCB      0
                  |L8.2404|
000964  e07e              B        |L8.2660|
                  |L8.2406|
000966  e098              B        |L8.2714|
                  |L8.2408|
000968  4611              MOV      r1,r2                 ;364
00096a  4658              MOV      r0,r11                ;364
00096c  f7fffffe          BL       BUTTON_SetTextColor
000970  4991              LDR      r1,|L8.3000|
000972  4658              MOV      r0,r11                ;365
000974  f7fffffe          BL       BUTTON_SetFont
000978  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00097c  a18f              ADR      r1,|L8.3004|
00097e  4658              MOV      r0,r11                ;367
000980  f7fffffe          BL       BUTTON_SetText
000984  4629              MOV      r1,r5                 ;371
000986  6860              LDR      r0,[r4,#4]            ;371
000988  f7fffffe          BL       WM_GetDialogItem
00098c  4605              MOV      r5,r0                 ;371
00098e  2200              MOVS     r2,#0                 ;372
000990  4611              MOV      r1,r2                 ;372
000992  4628              MOV      r0,r5                 ;372
000994  f7fffffe          BL       BUTTON_SetTextColor
000998  4987              LDR      r1,|L8.3000|
00099a  4628              MOV      r0,r5                 ;373
00099c  f7fffffe          BL       BUTTON_SetFont
0009a0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0009a4  a189              ADR      r1,|L8.3020|
0009a6  4628              MOV      r0,r5                 ;375
0009a8  f7fffffe          BL       BUTTON_SetText
0009ac  f640010e          MOV      r1,#0x80e             ;379
0009b0  6860              LDR      r0,[r4,#4]            ;379
0009b2  f7fffffe          BL       WM_GetDialogItem
0009b6  4605              MOV      r5,r0                 ;379
0009b8  2200              MOVS     r2,#0                 ;380
0009ba  4611              MOV      r1,r2                 ;380
0009bc  4628              MOV      r0,r5                 ;380
0009be  f7fffffe          BL       BUTTON_SetTextColor
0009c2  497d              LDR      r1,|L8.3000|
0009c4  4628              MOV      r0,r5                 ;381
0009c6  f7fffffe          BL       BUTTON_SetFont
0009ca  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0009ce  a183              ADR      r1,|L8.3036|
0009d0  4628              MOV      r0,r5                 ;383
0009d2  f7fffffe          BL       BUTTON_SetText
0009d6  f640010f          MOV      r1,#0x80f             ;387
0009da  6860              LDR      r0,[r4,#4]            ;387
0009dc  f7fffffe          BL       WM_GetDialogItem
0009e0  4605              MOV      r5,r0                 ;387
0009e2  2200              MOVS     r2,#0                 ;388
0009e4  4611              MOV      r1,r2                 ;388
0009e6  4628              MOV      r0,r5                 ;388
0009e8  f7fffffe          BL       BUTTON_SetTextColor
0009ec  4972              LDR      r1,|L8.3000|
0009ee  4628              MOV      r0,r5                 ;389
0009f0  f7fffffe          BL       BUTTON_SetFont
0009f4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0009f8  a17b              ADR      r1,|L8.3048|
0009fa  4628              MOV      r0,r5                 ;391
0009fc  f7fffffe          BL       BUTTON_SetText
000a00  e603              B        |L8.1546|
                  |L8.2562|
000a02  497b              LDR      r1,|L8.3056|
000a04  4628              MOV      r0,r5                 ;463
000a06  f7fffffe          BL       TEXT_SetFont
000a0a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000a0e  a179              ADR      r1,|L8.3060|
000a10  4628              MOV      r0,r5                 ;465
000a12  f7fffffe          BL       TEXT_SetText
000a16  e668              B        |L8.1770|
                  |L8.2584|
000a18  6860              LDR      r0,[r4,#4]            ;508
000a1a  f7fffffe          BL       WM_GetDialogItem
000a1e  4681              MOV      r9,r0                 ;508
000a20  4651              MOV      r1,r10                ;509
000a22  4648              MOV      r0,r9                 ;509
000a24  f7fffffe          BL       TEXT_SetTextColor
000a28  4971              LDR      r1,|L8.3056|
000a2a  4648              MOV      r0,r9                 ;510
000a2c  f7fffffe          BL       TEXT_SetFont
000a30  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000a34  a173              ADR      r1,|L8.3076|
000a36  4648              MOV      r0,r9                 ;512
000a38  f7fffffe          BL       TEXT_SetText
000a3c  4629              MOV      r1,r5                 ;514
000a3e  6860              LDR      r0,[r4,#4]            ;514
000a40  f7fffffe          BL       WM_GetDialogItem
000a44  4605              MOV      r5,r0                 ;514
000a46  4651              MOV      r1,r10                ;515
000a48  4628              MOV      r0,r5                 ;515
000a4a  f7fffffe          BL       TEXT_SetTextColor
000a4e  4968              LDR      r1,|L8.3056|
000a50  4628              MOV      r0,r5                 ;516
000a52  f7fffffe          BL       TEXT_SetFont
000a56  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000a5a  a16e              ADR      r1,|L8.3092|
000a5c  4628              MOV      r0,r5                 ;518
000a5e  f7fffffe          BL       TEXT_SetText
000a62  e702              B        |L8.2154|
                  |L8.2660|
000a64  6860              LDR      r0,[r4,#4]            ;535
000a66  f7fffffe          BL       WM_GetDialogItem
000a6a  4683              MOV      r11,r0                ;535
000a6c  4651              MOV      r1,r10                ;536
000a6e  4658              MOV      r0,r11                ;536
000a70  f7fffffe          BL       TEXT_SetTextColor
000a74  496b              LDR      r1,|L8.3108|
000a76  4658              MOV      r0,r11                ;537
000a78  f7fffffe          BL       TEXT_SetFont
000a7c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000a80  4639              MOV      r1,r7                 ;539
000a82  4648              MOV      r0,r9                 ;539
000a84  f7fffffe          BL       GPIO_SetBits
000a88  a167              ADR      r1,|L8.3112|
000a8a  4658              MOV      r0,r11                ;540
000a8c  f7fffffe          BL       TEXT_SetText
000a90  6828              LDR      r0,[r5,#0]            ;541  ; flagD
000a92  f0400080          ORR      r0,r0,#0x80           ;541
000a96  6028              STR      r0,[r5,#0]            ;541  ; flagD
000a98  e019              B        |L8.2766|
                  |L8.2714|
000a9a  6860              LDR      r0,[r4,#4]            ;543
000a9c  f7fffffe          BL       WM_GetDialogItem
000aa0  4683              MOV      r11,r0                ;543
000aa2  4651              MOV      r1,r10                ;544
000aa4  4658              MOV      r0,r11                ;544
000aa6  f7fffffe          BL       TEXT_SetTextColor
000aaa  495e              LDR      r1,|L8.3108|
000aac  4658              MOV      r0,r11                ;545
000aae  f7fffffe          BL       TEXT_SetFont
000ab2  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000ab6  4639              MOV      r1,r7                 ;547
000ab8  4648              MOV      r0,r9                 ;547
000aba  f7fffffe          BL       GPIO_ResetBits
000abe  a15b              ADR      r1,|L8.3116|
000ac0  4658              MOV      r0,r11                ;548
000ac2  f7fffffe          BL       TEXT_SetText
000ac6  6828              LDR      r0,[r5,#0]            ;549  ; flagD
000ac8  f0200080          BIC      r0,r0,#0x80           ;549
000acc  6028              STR      r0,[r5,#0]            ;549  ; flagD
                  |L8.2766|
000ace  f8980000          LDRB     r0,[r8,#0]            ;552  ; lang
000ad2  f44f6111          MOV      r1,#0x910             ;554
000ad6  b3e8              CBZ      r0,|L8.2900|
000ad8  6860              LDR      r0,[r4,#4]            ;560
000ada  f7fffffe          BL       WM_GetDialogItem
000ade  4605              MOV      r5,r0                 ;560
000ae0  4651              MOV      r1,r10                ;561
000ae2  4628              MOV      r0,r5                 ;561
000ae4  f7fffffe          BL       TEXT_SetTextColor
000ae8  4951              LDR      r1,|L8.3120|
000aea  4628              MOV      r0,r5                 ;562
000aec  f7fffffe          BL       TEXT_SetFont
000af0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000af4  a14f              ADR      r1,|L8.3124|
000af6  4628              MOV      r0,r5                 ;564
000af8  f7fffffe          BL       TEXT_SetText
                  |L8.2812|
000afc  f6401111          MOV      r1,#0x911             ;567
000b00  6860              LDR      r0,[r4,#4]            ;567
000b02  f7fffffe          BL       WM_GetDialogItem
000b06  4605              MOV      r5,r0                 ;567
000b08  ee190a10          VMOV     r0,s18                ;568
000b0c  f7fffffe          BL       __aeabi_f2d
000b10  ec410b10          VMOV     d0,r0,r1              ;568
000b14  ec532b10          VMOV     r2,r3,d0              ;568
000b18  f2af6198          ADR      r1,|L8.1156|
000b1c  4668              MOV      r0,sp                 ;568
000b1e  f7fffffe          BL       __2sprintf
000b22  4651              MOV      r1,r10                ;569
000b24  4628              MOV      r0,r5                 ;569
000b26  f7fffffe          BL       TEXT_SetTextColor
000b2a  493e              LDR      r1,|L8.3108|
000b2c  4628              MOV      r0,r5                 ;570
000b2e  f7fffffe          BL       TEXT_SetFont
000b32  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000b36  4669              MOV      r1,sp                 ;572
000b38  4628              MOV      r0,r5                 ;572
000b3a  f7fffffe          BL       TEXT_SetText
000b3e  f6401112          MOV      r1,#0x912             ;574
000b42  6860              LDR      r0,[r4,#4]            ;574
000b44  f7fffffe          BL       WM_GetDialogItem
000b48  4604              MOV      r4,r0                 ;574
000b4a  4631              MOV      r1,r6                 ;575
000b4c  4620              MOV      r0,r4                 ;575
000b4e  f7fffffe          BL       TEXT_SetTextColor
000b52  e000              B        |L8.2902|
                  |L8.2900|
000b54  e019              B        |L8.2954|
                  |L8.2902|
000b56  4933              LDR      r1,|L8.3108|
000b58  4620              MOV      r0,r4                 ;576
000b5a  f7fffffe          BL       TEXT_SetFont
000b5e  4837              LDR      r0,|L8.3132|
000b60  6800              LDR      r0,[r0,#0]            ;577  ; temp
000b62  f7fffffe          BL       __aeabi_f2d
000b66  ec410b10          VMOV     d0,r0,r1              ;577
000b6a  ec532b10          VMOV     r2,r3,d0              ;577
000b6e  f2af61d4          ADR      r1,|L8.1180|
000b72  4668              MOV      r0,sp                 ;577
000b74  f7fffffe          BL       __2sprintf
000b78  4669              MOV      r1,sp                 ;578
000b7a  4620              MOV      r0,r4                 ;578
000b7c  f7fffffe          BL       TEXT_SetText
                  |L8.2944|
000b80  b003              ADD      sp,sp,#0xc
000b82  ecbd8b06          VPOP     {d8-d10}
000b86  e8bd8ff0          POP      {r4-r11,pc}
                  |L8.2954|
000b8a  6860              LDR      r0,[r4,#4]            ;554
000b8c  f7fffffe          BL       WM_GetDialogItem
000b90  4605              MOV      r5,r0                 ;554
000b92  4651              MOV      r1,r10                ;555
000b94  4628              MOV      r0,r5                 ;555
000b96  f7fffffe          BL       TEXT_SetTextColor
000b9a  4915              LDR      r1,|L8.3056|
000b9c  4628              MOV      r0,r5                 ;556
000b9e  f7fffffe          BL       TEXT_SetFont
000ba2  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000ba6  a126              ADR      r1,|L8.3136|
000ba8  4628              MOV      r0,r5                 ;558
000baa  f7fffffe          BL       TEXT_SetText
000bae  e7a5              B        |L8.2812|
                  |L8.2992|
000bb0  68a0              LDR      r0,[r4,#8]            ;585
000bb2  f7fffffe          BL       WM_GetId
000bb6  e7e3              B        |L8.2944|
;;;684    
                          ENDP

                  |L8.3000|
                          DCD      GUI_FontHZ16
                  |L8.3004|
000bbc  e7a88be6          DCB      231,168,139,230,142,167,232,180,159,232,189,189,0
000bc0  8ea7e8b4
000bc4  9fe8bdbd
000bc8  00      
000bc9  00                DCB      0
000bca  00                DCB      0
000bcb  00                DCB      0
                  |L8.3020|
000bcc  e7a88be6          DCB      231,168,139,230,142,167,231,148,181,230,186,144,0
000bd0  8ea7e794
000bd4  b5e6ba90
000bd8  00      
000bd9  00                DCB      0
000bda  00                DCB      0
000bdb  00                DCB      0
                  |L8.3036|
000bdc  e58585e6          DCB      229,133,133,230,148,190,231,148,181,0
000be0  94bee794
000be4  b500    
000be6  00                DCB      0
000be7  00                DCB      0
                  |L8.3048|
000be8  e69bb2e7          DCB      230,155,178,231,186,191,0
000bec  babf00  
000bef  00                DCB      0
                  |L8.3056|
                          DCD      GUI_Fontset_font
                  |L8.3060|
000bf4  e8b49fe8          DCB      232,180,159,232,189,189,231,148,181,230,181,129,0
000bf8  bdbde794
000bfc  b5e6b581
000c00  00      
000c01  00                DCB      0
000c02  00                DCB      0
000c03  00                DCB      0
                  |L8.3076|
000c04  e8b49fe8          DCB      232,180,159,232,189,189,230,168,161,229,188,143,0
000c08  bdbde6a8
000c0c  a1e5bc8f
000c10  00      
000c11  00                DCB      0
000c12  00                DCB      0
000c13  00                DCB      0
                  |L8.3092|
000c14  e688aae6          DCB      230,136,170,230,173,162,231,148,181,229,142,139,0
000c18  ada2e794
000c1c  b5e58e8b
000c20  00      
000c21  00                DCB      0
000c22  00                DCB      0
000c23  00                DCB      0
                  |L8.3108|
                          DCD      GUI_Font24_1
                  |L8.3112|
000c28  434300            DCB      "CC",0
000c2b  00                DCB      0
                  |L8.3116|
000c2c  435600            DCB      "CV",0
000c2f  00                DCB      0
                  |L8.3120|
                          DCD      GUI_Font20_ASCII
                  |L8.3124|
000c34  4c6f6164          DCB      "Load V",0
000c38  205600  
000c3b  00                DCB      0
                  |L8.3132|
                          DCD      temp
                  |L8.3136|
000c40  e8b49fe8          DCB      232,180,159,232,189,189,231,148,181,229,142,139,0
000c44  bdbde794
000c48  b5e58e8b
000c4c  00      
000c4d  00                DCB      0
000c4e  00                DCB      0
000c4f  00                DCB      0

                          AREA ||i.test_load||, CODE, READONLY, ALIGN=2

                  test_load PROC
;;;1430   
;;;1431   void test_load(void)
000000  b570              PUSH     {r4-r6,lr}
;;;1432   {
;;;1433   
;;;1434       if(load_sw == load_on && para_set1 == set_1_on)
000002  4827              LDR      r0,|L9.160|
000004  7802              LDRB     r2,[r0,#0]  ; load_sw
;;;1435       {
;;;1436           if(DISS_Voltage*100 > set_max_v || DISS_Voltage*100 < set_min_v)
;;;1437           {
;;;1438              if(para_set4 == set_4_on){
;;;1439                   BEEP_Tiggr();
;;;1440               }
;;;1441               TM1650_SET_LED(0x68,0x70);//FAIL灯
;;;1442               GPIO_SetBits(GPIOD,GPIO_Pin_12);//            
000006  4d27              LDR      r5,|L9.164|
000008  f44f5480          MOV      r4,#0x1000
00000c  2a01              CMP      r2,#1                 ;1434
00000e  d103              BNE      |L9.24|
000010  4825              LDR      r0,|L9.168|
000012  7800              LDRB     r0,[r0,#0]            ;1434  ; para_set1
000014  28ff              CMP      r0,#0xff              ;1434
000016  d009              BEQ      |L9.44|
                  |L9.24|
;;;1443           }else{
;;;1444               GPIO_ResetBits(GPIOD,GPIO_Pin_12);
;;;1445               TM1650_SET_LED(0x48,0x71);
;;;1446               TM1650_SET_LED(0x68,0xF2);//PASS灯
;;;1447           }        
;;;1448       }else
;;;1449       {
;;;1450           TM1650_SET_LED(0x68,0x70);
000018  2170              MOVS     r1,#0x70
00001a  2068              MOVS     r0,#0x68
00001c  f7fffffe          BL       TM1650_SET_LED
;;;1451           GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
000020  4621              MOV      r1,r4
000022  4628              MOV      r0,r5
000024  e8bd4070          POP      {r4-r6,lr}
000028  f7ffbffe          B.W      GPIO_ResetBits
                  |L9.44|
00002c  4a1f              LDR      r2,|L9.172|
00002e  ed9f0a20          VLDR     s0,|L9.176|
000032  edd20a00          VLDR     s1,[r2,#0]            ;1436
000036  4a1f              LDR      r2,|L9.180|
000038  ee200a80          VMUL.F32 s0,s1,s0              ;1436
00003c  6b93              LDR      r3,[r2,#0x38]         ;1436  ; Run_Control
00003e  ee003a90          VMOV     s1,r3                 ;1436
000042  eef80a60          VCVT.F32.U32 s1,s1                 ;1436
000046  eeb40ae0          VCMPE.F32 s0,s1                 ;1436
00004a  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1436
00004e  dc09              BGT      |L9.100|
000050  6bd2              LDR      r2,[r2,#0x3c]         ;1436  ; Run_Control
000052  ee002a90          VMOV     s1,r2                 ;1436
000056  eef80a60          VCVT.F32.U32 s1,s1                 ;1436
00005a  eeb40ae0          VCMPE.F32 s0,s1                 ;1436
00005e  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1436
000062  d20f              BCS      |L9.132|
                  |L9.100|
000064  4814              LDR      r0,|L9.184|
000066  7800              LDRB     r0,[r0,#0]            ;1438  ; para_set4
000068  28ff              CMP      r0,#0xff              ;1438
00006a  d101              BNE      |L9.112|
00006c  f7fffffe          BL       BEEP_Tiggr
                  |L9.112|
000070  2170              MOVS     r1,#0x70              ;1441
000072  2068              MOVS     r0,#0x68              ;1441
000074  f7fffffe          BL       TM1650_SET_LED
000078  4621              MOV      r1,r4                 ;1442
00007a  4628              MOV      r0,r5                 ;1442
00007c  e8bd4070          POP      {r4-r6,lr}            ;1442
000080  f7ffbffe          B.W      GPIO_SetBits
                  |L9.132|
000084  4621              MOV      r1,r4                 ;1444
000086  4628              MOV      r0,r5                 ;1444
000088  f7fffffe          BL       GPIO_ResetBits
00008c  2171              MOVS     r1,#0x71              ;1445
00008e  2048              MOVS     r0,#0x48              ;1445
000090  f7fffffe          BL       TM1650_SET_LED
000094  e8bd4070          POP      {r4-r6,lr}            ;1446
000098  21f2              MOVS     r1,#0xf2              ;1446
00009a  2068              MOVS     r0,#0x68              ;1446
00009c  f7ffbffe          B.W      TM1650_SET_LED
;;;1452       }
;;;1453   }
                          ENDP

                  |L9.160|
                          DCD      ||.data||
                  |L9.164|
                          DCD      0x40020c00
                  |L9.168|
                          DCD      para_set1
                  |L9.172|
                          DCD      DISS_Voltage
                  |L9.176|
0000b0  42c80000          DCFS     0x42c80000 ; 100
                  |L9.180|
                          DCD      Run_Control
                  |L9.184|
                          DCD      para_set4

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aDialogCreate2
                          DCD      WINDOW_CreateIndirect
                          DCD      ||.conststring||
000008  08090000          DCW      0x0809,0x0000
00000c  000001e0          DCW      0x0000,0x01e0
000010  01100000          DCW      0x0110,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  080b0053          DCW      0x080b,0x0053
000028  00e2004d          DCW      0x00e2,0x004d
00002c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000040  080c00a3          DCW      0x080c,0x00a3
000044  00e2004d          DCW      0x00e2,0x004d
000048  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
00005c  080d00f3          DCW      0x080d,0x00f3
000060  00e2004d          DCW      0x00e2,0x004d
000064  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000078  080e0143          DCW      0x080e,0x0143
00007c  00e2004d          DCW      0x00e2,0x004d
000080  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000094  080f0193          DCW      0x080f,0x0193
000098  00e2004d          DCW      0x00e2,0x004d
00009c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000b0  0810001c          DCW      0x0810,0x001c
0000b4  00320040          DCW      0x0032,0x0040
0000b8  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000cc  0811001c          DCW      0x0811,0x001c
0000d0  00780040          DCW      0x0078,0x0040
0000d4  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000e8  081e00f0          DCW      0x081e,0x00f0
0000ec  00320020          DCW      0x0032,0x0020
0000f0  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000104  081f00f0          DCW      0x081f,0x00f0
000108  00790020          DCW      0x0079,0x0020
00010c  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000120  086d0122          DCW      0x086d,0x0122
000124  004b0050          DCW      0x004b,0x0050
000128  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00013c  086e017c          DCW      0x086e,0x017c
000140  004b0041          DCW      0x004b,0x0041
000144  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000158  090e0122          DCW      0x090e,0x0122
00015c  007d0050          DCW      0x007d,0x0050
000160  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000174  09390122          DCW      0x0939,0x0122
000178  00960050          DCW      0x0096,0x0050
00017c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000190  090f017c          DCW      0x090f,0x017c
000194  007d0041          DCW      0x007d,0x0041
000198  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001ac  09100122          DCW      0x0910,0x0122
0001b0  00640050          DCW      0x0064,0x0050
0001b4  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001c8  0911017c          DCW      0x0911,0x017c
0001cc  00640041          DCW      0x0064,0x0041
0001d0  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001e4  0891005f          DCW      0x0891,0x005f
0001e8  00300096          DCW      0x0030,0x0096
0001ec  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000200  0892005f          DCW      0x0892,0x005f
000204  00740096          DCW      0x0074,0x0096
000208  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00021c  08960190          DCW      0x0896,0x0190
000220  00040050          DCW      0x0004,0x0050
000224  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000238  090d005f          DCW      0x090d,0x005f
00023c  00b80096          DCW      0x00b8,0x0096
000240  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000254  0912012c          DCW      0x0912,0x012c
000258  00020050          DCW      0x0002,0x0050
00025c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000270  092d017c          DCW      0x092d,0x017c
000274  00960041          DCW      0x0096,0x0041
000278  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00028c  093d017c          DCW      0x093d,0x017c
000290  00080014          DCW      0x0008,0x0014
000294  000f0000          DCW      0x000f,0x0000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  57696e64          DCB      "Window",0
000004  6f7700  
000007  00                DCB      0
000008  42757474          DCB      "Button",0
00000c  6f6e00  
00000f  00                DCB      0
000010  54657874          DCB      "Text",0
000014  00      

                          AREA ||.data||, DATA, ALIGN=2

                  load_sw
000000  00                DCB      0x00
                  status_flash
000001  00                DCB      0x00
                  load_mode
000002  0000              DCB      0x00,0x00
                  load_wind
                          DCD      0x00000000
                  load_cutoffv
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\APP\\load_Face.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_load_Face_c_load_sw____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_load_Face_c_load_sw____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_load_Face_c_load_sw____REVSH|
#line 144
|__asm___11_load_Face_c_load_sw____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
