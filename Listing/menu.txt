; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\menu.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\menu.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\menu.crf --no_multibyte_chars ..\APP\menu.c]
                          THUMB

                          AREA ||i.CreateWindow||, CODE, READONLY, ALIGN=2

                  CreateWindow PROC
;;;491    
;;;492    WM_HWIN CreateWindow(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;493      if(page_sw == face_graph || page_sw == face_menu)
000002  4c27              LDR      r4,|L1.160|
000004  7820              LDRB     r0,[r4,#0]  ; page_sw
000006  2800              CMP      r0,#0
000008  d015              BEQ      |L1.54|
00000a  7820              LDRB     r0,[r4,#0]  ; page_sw
00000c  2802              CMP      r0,#2
00000e  d012              BEQ      |L1.54|
;;;494      {      
;;;495      }else{
;;;496    	  GPIO_SetBits(GPIOA,GPIO_Pin_15);//µç×Ó¸ºÔØOFF
000010  f44f4100          MOV      r1,#0x8000
000014  4823              LDR      r0,|L1.164|
000016  f7fffffe          BL       GPIO_SetBits
;;;497    	  GPIO_ResetBits(GPIOC,GPIO_Pin_1);//¹Ø±ÕµçÔ´Êä³ö
00001a  4d23              LDR      r5,|L1.168|
00001c  2102              MOVS     r1,#2
00001e  4628              MOV      r0,r5
000020  f7fffffe          BL       GPIO_ResetBits
;;;498    	  Delay_ms(500);
000024  f44f70fa          MOV      r0,#0x1f4
000028  f7fffffe          BL       Delay_ms
;;;499    	  GPIO_SetBits(GPIOC,GPIO_Pin_13);//¹Ø±ÕµçÔ´Êä³ö¼ÌµçÆ
00002c  f44f5100          MOV      r1,#0x2000
000030  4628              MOV      r0,r5
000032  f7fffffe          BL       GPIO_SetBits
                  |L1.54|
;;;500    //      IO_OFF();
;;;501    	  
;;;502      }
;;;503      page_sw = face_menu;
000036  2002              MOVS     r0,#2
000038  7020              STRB     r0,[r4,#0]
;;;504      track = face_menu;
00003a  491c              LDR      r1,|L1.172|
00003c  7008              STRB     r0,[r1,#0]
;;;505      set_sw = set_10;
00003e  491c              LDR      r1,|L1.176|
000040  2009              MOVS     r0,#9
000042  7008              STRB     r0,[r1,#0]
;;;506      SET_Voltage = pow_v;
000044  481b              LDR      r0,|L1.180|
000046  f8d01098          LDR      r1,[r0,#0x98]  ; Run_Control
00004a  6041              STR      r1,[r0,#4]  ; Run_Control
;;;507      SET_Current = pow_c;
00004c  f8d010a0          LDR      r1,[r0,#0xa0]  ; Run_Control
000050  6081              STR      r1,[r0,#8]  ; Run_Control
;;;508      pow_cutoffc = (float)set_pow_cutoffc/1000;
000052  4819              LDR      r0,|L1.184|
000054  eddf0a19          VLDR     s1,|L1.188|
000058  4d19              LDR      r5,|L1.192|
00005a  ed900a05          VLDR     s0,[r0,#0x14]
00005e  eeb80ac0          VCVT.F32.S32 s0,s0
000062  ee801a20          VDIV.F32 s2,s0,s1
000066  ed851a02          VSTR     s2,[r5,#8]
;;;509      pass = 0;
00006a  4816              LDR      r0,|L1.196|
00006c  2400              MOVS     r4,#0
00006e  7004              STRB     r4,[r0,#0]
;;;510      mode_sw = mode_pow;
000070  4915              LDR      r1,|L1.200|
000072  2003              MOVS     r0,#3
000074  7008              STRB     r0,[r1,#0]
;;;511    //  USART_SendData(USART3,1);//连接电源
;;;512      TM1650_SET_LED(0x68,0x70);
000076  2170              MOVS     r1,#0x70
000078  2068              MOVS     r0,#0x68
00007a  f7fffffe          BL       TM1650_SET_LED
;;;513      GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
00007e  f44f5180          MOV      r1,#0x1000
000082  4812              LDR      r0,|L1.204|
000084  f7fffffe          BL       GPIO_ResetBits
;;;514      hWinWind = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog, WM_HBKWIN, 0, 0);
000088  f7fffffe          BL       WM_GetDesktopWindow
00008c  4603              MOV      r3,r0
00008e  9400              STR      r4,[sp,#0]
000090  4a0f              LDR      r2,|L1.208|
000092  2116              MOVS     r1,#0x16
000094  480f              LDR      r0,|L1.212|
000096  9401              STR      r4,[sp,#4]
000098  f7fffffe          BL       GUI_CreateDialogBox
00009c  6068              STR      r0,[r5,#4]  ; hWinWind
;;;515      return hWinWind;
;;;516    }
00009e  bd7c              POP      {r2-r6,pc}
;;;517    
                          ENDP

                  |L1.160|
                          DCD      page_sw
                  |L1.164|
                          DCD      0x40020000
                  |L1.168|
                          DCD      0x40020800
                  |L1.172|
                          DCD      track
                  |L1.176|
                          DCD      set_sw
                  |L1.180|
                          DCD      Run_Control
                  |L1.184|
                          DCD      InFlashSave
                  |L1.188|
0000bc  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.192|
                          DCD      ||.data||
                  |L1.196|
                          DCD      pass
                  |L1.200|
                          DCD      mode_sw
                  |L1.204|
                          DCD      0x40020c00
                  |L1.208|
                          DCD      _cbDialog
                  |L1.212|
                          DCD      ||.constdata||

                          AREA ||i.DEL_POW||, CODE, READONLY, ALIGN=2

                  DEL_POW PROC
;;;789    }
;;;790    void DEL_POW(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;791    {
;;;792    	switch(set_sw){
000004  4828              LDR      r0,|L2.168|
000006  7800              LDRB     r0,[r0,#0]  ; set_sw
;;;793    		case set_18:
;;;794            {
;;;795    			WM_HWIN hItem;
;;;796    //            WM_InvalidateWindow(hWinWind);
;;;797                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
000008  4a28              LDR      r2,|L2.172|
;;;798    			if(bit > 0)
;;;799    			{
;;;800    				bit --;
;;;801    				set_limit[bit] = '\0';
00000a  4f29              LDR      r7,|L2.176|
00000c  2400              MOVS     r4,#0
00000e  4d29              LDR      r5,|L2.180|
;;;802    			}
;;;803    			if(bit == dot_flag)
000010  4e29              LDR      r6,|L2.184|
000012  2811              CMP      r0,#0x11              ;792
000014  d019              BEQ      |L2.74|
000016  2812              CMP      r0,#0x12              ;792
000018  d02d              BEQ      |L2.118|
00001a  2858              CMP      r0,#0x58              ;792
00001c  d141              BNE      |L2.162|
;;;804    			{
;;;805    				dot_flag = 0;
;;;806    			}
;;;807    			TEXT_SetText(hItem,set_limit);
;;;808    		}break;
;;;809    		case set_19:
;;;810            {
;;;811    			WM_HWIN hItem;
;;;812    //            WM_InvalidateWindow(hWinWind);
;;;813                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;814    			if(bit > 0)
;;;815    			{
;;;816    				bit --;
;;;817    				set_limit[bit] = '\0';
;;;818    			}
;;;819    			if(bit == dot_flag)
;;;820    			{
;;;821    				dot_flag = 0;
;;;822    			}
;;;823    			TEXT_SetText(hItem,set_limit);
;;;824    		}break;
;;;825    		case set_89:
;;;826            {
;;;827                WM_HWIN hItem;
;;;828    //            WM_InvalidateWindow(hWinWind);
;;;829                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
00001e  f640112e          MOV      r1,#0x92e
000022  6850              LDR      r0,[r2,#4]  ; hWinWind
000024  f7fffffe          BL       WM_GetDialogItem
;;;830    			if(bit > 0)
000028  7829              LDRB     r1,[r5,#0]  ; bit
00002a  b121              CBZ      r1,|L2.54|
;;;831    			{
;;;832    				bit --;
00002c  7829              LDRB     r1,[r5,#0]  ; bit
00002e  1e49              SUBS     r1,r1,#1
000030  7029              STRB     r1,[r5,#0]
;;;833    				set_limit[bit] = '\0';
000032  7829              LDRB     r1,[r5,#0]  ; bit
000034  547c              STRB     r4,[r7,r1]
                  |L2.54|
;;;834    			}
;;;835    			if(bit == dot_flag)
000036  7829              LDRB     r1,[r5,#0]  ; bit
000038  7832              LDRB     r2,[r6,#0]  ; dot_flag
00003a  4291              CMP      r1,r2
00003c  d100              BNE      |L2.64|
;;;836    			{
;;;837    				dot_flag = 0;
00003e  7034              STRB     r4,[r6,#0]
                  |L2.64|
;;;838    			}
;;;839    			TEXT_SetText(hItem,set_limit);
000040  e8bd41f0          POP      {r4-r8,lr}
000044  491a              LDR      r1,|L2.176|
000046  f7ffbffe          B.W      TEXT_SetText
                  |L2.74|
00004a  f6400166          MOV      r1,#0x866             ;797
00004e  6850              LDR      r0,[r2,#4]            ;797  ; hWinWind
000050  f7fffffe          BL       WM_GetDialogItem
000054  7829              LDRB     r1,[r5,#0]            ;798  ; bit
000056  b121              CBZ      r1,|L2.98|
000058  7829              LDRB     r1,[r5,#0]            ;800  ; bit
00005a  1e49              SUBS     r1,r1,#1              ;800
00005c  7029              STRB     r1,[r5,#0]            ;800
00005e  7829              LDRB     r1,[r5,#0]            ;801  ; bit
000060  547c              STRB     r4,[r7,r1]            ;801
                  |L2.98|
000062  7829              LDRB     r1,[r5,#0]            ;803  ; bit
000064  7832              LDRB     r2,[r6,#0]            ;803  ; dot_flag
000066  4291              CMP      r1,r2                 ;803
000068  d100              BNE      |L2.108|
00006a  7034              STRB     r4,[r6,#0]            ;805
                  |L2.108|
00006c  e8bd41f0          POP      {r4-r8,lr}            ;807
000070  490f              LDR      r1,|L2.176|
000072  f7ffbffe          B.W      TEXT_SetText
                  |L2.118|
000076  f6400167          MOV      r1,#0x867             ;813
00007a  6850              LDR      r0,[r2,#4]            ;813  ; hWinWind
00007c  f7fffffe          BL       WM_GetDialogItem
000080  7829              LDRB     r1,[r5,#0]            ;814  ; bit
000082  b121              CBZ      r1,|L2.142|
000084  7829              LDRB     r1,[r5,#0]            ;816  ; bit
000086  1e49              SUBS     r1,r1,#1              ;816
000088  7029              STRB     r1,[r5,#0]            ;816
00008a  7829              LDRB     r1,[r5,#0]            ;817  ; bit
00008c  547c              STRB     r4,[r7,r1]            ;817
                  |L2.142|
00008e  7829              LDRB     r1,[r5,#0]            ;819  ; bit
000090  7832              LDRB     r2,[r6,#0]            ;819  ; dot_flag
000092  4291              CMP      r1,r2                 ;819
000094  d100              BNE      |L2.152|
000096  7034              STRB     r4,[r6,#0]            ;821
                  |L2.152|
000098  e8bd41f0          POP      {r4-r8,lr}            ;823
00009c  4904              LDR      r1,|L2.176|
00009e  f7ffbffe          B.W      TEXT_SetText
                  |L2.162|
;;;840    		}break;
;;;841    	}
;;;842    }
0000a2  e8bd81f0          POP      {r4-r8,pc}
;;;843    
                          ENDP

0000a6  0000              DCW      0x0000
                  |L2.168|
                          DCD      set_sw
                  |L2.172|
                          DCD      ||.data||
                  |L2.176|
                          DCD      set_limit
                  |L2.180|
                          DCD      bit
                  |L2.184|
                          DCD      dot_flag

                          AREA ||i.INPUT_POW||, CODE, READONLY, ALIGN=2

                  INPUT_POW PROC
;;;846    void INPUT_POW(char* num);            
;;;847    void INPUT_POW(char* num){ 
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  4681              MOV      r9,r0
;;;848    	u8 i;
;;;849        switch(set_sw){
000006  4854              LDR      r0,|L3.344|
000008  7800              LDRB     r0,[r0,#0]  ; set_sw
;;;850    		case set_18:
;;;851            {
;;;852                WM_HWIN hItem;
;;;853    //            WM_InvalidateWindow(hWinWind);
;;;854                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
00000a  4a54              LDR      r2,|L3.348|
;;;855    			if(bit < 6)
;;;856    			{
;;;857    				strcat(set_limit,num);
;;;858    				if(dot_flag != 0 && strcmp(num,".") == 0)
00000c  f8df8150          LDR      r8,|L3.352|
000010  4f54              LDR      r7,|L3.356|
000012  2400              MOVS     r4,#0                 ;855
000014  4d54              LDR      r5,|L3.360|
000016  2811              CMP      r0,#0x11              ;849
000018  d01e              BEQ      |L3.88|
00001a  2812              CMP      r0,#0x12              ;849
00001c  d04d              BEQ      |L3.186|
00001e  2858              CMP      r0,#0x58              ;849
000020  d16f              BNE      |L3.258|
;;;859    				{
;;;860    					
;;;861    				}else{			
;;;862    					
;;;863    					if(dot_flag == 0 && strcmp(num,".") == 0)
;;;864    					{
;;;865    						dot_flag = bit;
;;;866    					}
;;;867    					bit ++;
;;;868    				}
;;;869    			}else{
;;;870    				bit = 0;
;;;871    				for(i=0;i<6;i++)
;;;872    				{
;;;873    					set_limit[i] = '\0';
;;;874    				}
;;;875    			}
;;;876    			
;;;877    			TEXT_SetText(hItem,set_limit);
;;;878    //            switch(bit){
;;;879    //                case 1:
;;;880    //                {
;;;881    //					for(i=0;i<6;i++)
;;;882    //					{
;;;883    //						set_limit[i] = '\0';
;;;884    //					}
;;;885    //                    pow_v = atoi(num) * 100;
;;;886    //                    strcat(set_limit,num);            
;;;887    //                    TEXT_SetText(hItem,set_limit);
;;;888    //                    bit = 2;
;;;889    //                    break;
;;;890    //                }
;;;891    //                case 2:
;;;892    //                {
;;;893    //                    strcat(set_limit,num);
;;;894    //					if(set_limit[bit-1] == 0x62){
;;;895    //						set_limit[bit-1] = '\0';
;;;896    //						set_limit[bit-2] = '\0';
;;;897    //						bit -= 1;
;;;898    //						pow_v = pow_v - atoi(num) * 100;
;;;899    //						TEXT_SetText(hItem,set_limit);
;;;900    //						break;
;;;901    //					}
;;;902    //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;903    //                    {
;;;904    //                        dot_flag = 1;
;;;905    //                    }else{
;;;906    //                        pow_v = pow_v * 10 + atoi(num) * 100;
;;;907    //                    }           
;;;908    //                    TEXT_SetText(hItem,set_limit);
;;;909    //                    bit = 3;
;;;910    //                    break;
;;;911    //                }
;;;912    //                case 3:
;;;913    //                {
;;;914    //                    strcat(set_limit,num);
;;;915    //					if(set_limit[bit-1] == 0x62){
;;;916    //						set_limit[bit-1] = '\0';
;;;917    //						set_limit[bit-2] = '\0';
;;;918    //						bit -= 1;
;;;919    //						TEXT_SetText(hItem,set_limit);
;;;920    //						break;
;;;921    //					}
;;;922    //                    if(dot_flag == 0)
;;;923    //                    {
;;;924    //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;925    //                        {                            
;;;926    //                            dot_flag = 2;
;;;927    //                        }else{
;;;928    //                            pow_v = /*3000*/ 6200;
;;;929    //                        }
;;;930    //                    }else{
;;;931    //						pow_v = pow_v + atoi(num) * 10;
;;;932    //                    }
;;;933    //                    TEXT_SetText(hItem,set_limit);                  
;;;934    //                    bit = 4;
;;;935    //                    break;
;;;936    //                }
;;;937    //                case 4:
;;;938    //                {
;;;939    //                    strcat(set_limit,num);
;;;940    //					if(set_limit[bit-1] == 0x62){
;;;941    //						set_limit[bit-1] = '\0';
;;;942    //						set_limit[bit-2] = '\0';
;;;943    //						bit -= 1;
;;;944    //						TEXT_SetText(hItem,set_limit);
;;;945    //						pow_v = pow_v - atoi(num) * 10;
;;;946    //						break;
;;;947    //					}
;;;948    //                    if(dot_flag == 0)
;;;949    //                    {
;;;950    //                        pow_v = /*3000*/ 6200;
;;;951    //                    }else if(dot_flag == 2){
;;;952    //                        pow_v = pow_v + atoi(num) * 10;
;;;953    //                    }else{
;;;954    //                        pow_v = pow_v + atoi(num);
;;;955    //                    }
;;;956    //                    TEXT_SetText(hItem,set_limit);                   
;;;957    //                    bit = 5;
;;;958    //                    break;
;;;959    //                }
;;;960    //                case 5:
;;;961    //                {
;;;962    //                    strcat(set_limit,num);
;;;963    //					if(set_limit[bit-1] == 0x62){
;;;964    //						set_limit[bit-1] = '\0';
;;;965    //						set_limit[bit-2] = '\0';
;;;966    //						bit -= 1;
;;;967    //						TEXT_SetText(hItem,set_limit);
;;;968    //						break;
;;;969    //					}
;;;970    //                    if(dot_flag == 0)
;;;971    //                    {
;;;972    //                        pow_v = /*3000*/ 6200;
;;;973    //                    }else if(dot_flag == 1){
;;;974    //                        pow_v = pow_v;
;;;975    //                    }else{
;;;976    //                        pow_v = pow_v + atoi(num);
;;;977    //                    }
;;;978    //                    TEXT_SetText(hItem,set_limit);                   
;;;979    //                    bit = 0;
;;;980    //                    break;
;;;981    //                }
;;;982    //            }
;;;983                break;
;;;984            }
;;;985            case set_19:
;;;986            {
;;;987                WM_HWIN hItem;
;;;988    //            WM_InvalidateWindow(hWinWind);
;;;989                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;990    			if(bit < 6)
;;;991    			{
;;;992    				strcat(set_limit,num);
;;;993    				if(dot_flag != 0 && strcmp(num,".") == 0)
;;;994    				{
;;;995    					
;;;996    				}else{			
;;;997    					
;;;998    					if(dot_flag == 0 && strcmp(num,".") == 0)
;;;999    					{
;;;1000   						dot_flag = bit;
;;;1001   					}
;;;1002   					bit ++;
;;;1003   				}
;;;1004   			}else{
;;;1005   				bit = 0;
;;;1006   				for(i=0;i<6;i++)
;;;1007   				{
;;;1008   					set_limit[i] = '\0';
;;;1009   				}
;;;1010   			}
;;;1011   			TEXT_SetText(hItem,set_limit);
;;;1012   //            switch(bit){
;;;1013   //                case 1:
;;;1014   //                {
;;;1015   //					for(i=0;i<6;i++)
;;;1016   //					{
;;;1017   //						set_limit[i] = '\0';
;;;1018   //					}
;;;1019   //                    pow_c = atoi(num) * 1000;
;;;1020   //                    strcat(set_limit,num);            
;;;1021   //                    TEXT_SetText(hItem,set_limit);
;;;1022   //                    bit = 2;
;;;1023   //                    break;
;;;1024   //                }
;;;1025   //                case 2:
;;;1026   //                {
;;;1027   //                    strcat(set_limit,num);            
;;;1028   //                    TEXT_SetText(hItem,set_limit);
;;;1029   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1030   //                    {
;;;1031   //                        dot_flag = 1;
;;;1032   //                    }else{
;;;1033   //                        pow_c = pow_c * 10 + atoi(num) * 1000;
;;;1034   //                    }
;;;1035   //                    bit = 3;
;;;1036   //                    break;
;;;1037   //                }
;;;1038   //                case 3:
;;;1039   //                {
;;;1040   //                    strcat(set_limit,num);
;;;1041   //                    TEXT_SetText(hItem,set_limit);
;;;1042   //                    if(dot_flag == 0)
;;;1043   //                    {
;;;1044   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1045   //                        {                            
;;;1046   //                            dot_flag = 2;
;;;1047   //                        }else{
;;;1048   //                            pow_c = 5000;
;;;1049   //                        }
;;;1050   //                    }else{
;;;1051   //                        pow_c = pow_c + atoi(num) * 100;
;;;1052   //                    }
;;;1053   //                                       
;;;1054   //                    bit = 4;
;;;1055   //                    break;
;;;1056   //                }
;;;1057   //                case 4:
;;;1058   //                {
;;;1059   //                    strcat(set_limit,num);
;;;1060   //                    TEXT_SetText(hItem,set_limit);
;;;1061   //                    if(dot_flag == 0)
;;;1062   //                    {
;;;1063   //                        pow_c = 5000;
;;;1064   //                    }else if(dot_flag == 2){
;;;1065   //                        pow_c = pow_c + atoi(num) * 100;
;;;1066   //                    }else{
;;;1067   //                        pow_c = pow_c + atoi(num) * 10;
;;;1068   //                    }
;;;1069   //                                       
;;;1070   //                    bit = 5;
;;;1071   //                    break;
;;;1072   //                }
;;;1073   //                case 5:
;;;1074   //                {
;;;1075   //                    strcat(set_limit,num);
;;;1076   //                    TEXT_SetText(hItem,set_limit);
;;;1077   //                    if(dot_flag == 0)
;;;1078   //                    {
;;;1079   //                        pow_c = 5000;
;;;1080   //                    }else if(dot_flag == 1){
;;;1081   //                        pow_c = pow_c + atoi(num);
;;;1082   //                    }else{
;;;1083   //                        pow_c = pow_c + atoi(num) * 10;
;;;1084   //                    }
;;;1085   //                                       
;;;1086   //                    bit = 6;
;;;1087   //                    break;
;;;1088   //                }
;;;1089   //                case 6:
;;;1090   //                {
;;;1091   //                    strcat(set_limit,num);
;;;1092   //                    TEXT_SetText(hItem,set_limit);
;;;1093   //                    if(dot_flag == 0)
;;;1094   //                    {
;;;1095   //                        pow_c = 0;
;;;1096   //                    }else if(dot_flag == 2){
;;;1097   //                        pow_c = pow_c + atoi(num);
;;;1098   //                    }                 
;;;1099   //                    bit = 0;
;;;1100   //                    break;
;;;1101   //                }
;;;1102   //            }
;;;1103           }
;;;1104           break;
;;;1105   		case set_89:
;;;1106           {
;;;1107               WM_HWIN hItem;
;;;1108   //            WM_InvalidateWindow(hWinWind);
;;;1109               hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
000022  f640112e          MOV      r1,#0x92e
000026  6850              LDR      r0,[r2,#4]  ; hWinWind
000028  f7fffffe          BL       WM_GetDialogItem
00002c  4606              MOV      r6,r0
;;;1110   			if(bit < 6)
00002e  7838              LDRB     r0,[r7,#0]  ; bit
000030  2806              CMP      r0,#6
000032  d267              BCS      |L3.260|
;;;1111   			{
;;;1112   				strcat(set_limit,num);
000034  4649              MOV      r1,r9
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       strcat
;;;1113   				if(dot_flag != 0 && strcmp(num,".") == 0)
00003c  f8980000          LDRB     r0,[r8,#0]  ; dot_flag
000040  b128              CBZ      r0,|L3.78|
000042  a14a              ADR      r1,|L3.364|
000044  4648              MOV      r0,r9
000046  f7fffffe          BL       strcmp
00004a  2800              CMP      r0,#0
00004c  d07b              BEQ      |L3.326|
                  |L3.78|
;;;1114   				{
;;;1115   					
;;;1116   				}else{			
;;;1117   					
;;;1118   					if(dot_flag == 0 && strcmp(num,".") == 0)
00004e  f8980000          LDRB     r0,[r8,#0]  ; dot_flag
000052  2800              CMP      r0,#0
000054  d064              BEQ      |L3.288|
000056  e06b              B        |L3.304|
                  |L3.88|
000058  f6400166          MOV      r1,#0x866             ;854
00005c  6850              LDR      r0,[r2,#4]            ;854  ; hWinWind
00005e  f7fffffe          BL       WM_GetDialogItem
000062  4606              MOV      r6,r0                 ;854
000064  7838              LDRB     r0,[r7,#0]            ;855  ; bit
000066  2806              CMP      r0,#6                 ;855
000068  d21a              BCS      |L3.160|
00006a  4649              MOV      r1,r9                 ;857
00006c  483e              LDR      r0,|L3.360|
00006e  f7fffffe          BL       strcat
000072  f8980000          LDRB     r0,[r8,#0]            ;858  ; dot_flag
000076  b120              CBZ      r0,|L3.130|
000078  a13c              ADR      r1,|L3.364|
00007a  4648              MOV      r0,r9                 ;858
00007c  f7fffffe          BL       strcmp
000080  b1a8              CBZ      r0,|L3.174|
                  |L3.130|
000082  f8980000          LDRB     r0,[r8,#0]            ;863  ; dot_flag
000086  b938              CBNZ     r0,|L3.152|
000088  a138              ADR      r1,|L3.364|
00008a  4648              MOV      r0,r9                 ;863
00008c  f7fffffe          BL       strcmp
000090  b910              CBNZ     r0,|L3.152|
000092  7838              LDRB     r0,[r7,#0]            ;865  ; bit
000094  f8880000          STRB     r0,[r8,#0]            ;865
                  |L3.152|
000098  7838              LDRB     r0,[r7,#0]            ;867  ; bit
00009a  1c40              ADDS     r0,r0,#1              ;867
00009c  7038              STRB     r0,[r7,#0]            ;867
00009e  e006              B        |L3.174|
                  |L3.160|
0000a0  703c              STRB     r4,[r7,#0]            ;870
0000a2  2000              MOVS     r0,#0                 ;871
                  |L3.164|
0000a4  542c              STRB     r4,[r5,r0]            ;873
0000a6  1c40              ADDS     r0,r0,#1              ;871
0000a8  b2c0              UXTB     r0,r0                 ;871
0000aa  2806              CMP      r0,#6                 ;871
0000ac  d3fa              BCC      |L3.164|
                  |L3.174|
0000ae  4630              MOV      r0,r6                 ;877
0000b0  e8bd47f0          POP      {r4-r10,lr}           ;877
0000b4  492c              LDR      r1,|L3.360|
0000b6  f7ffbffe          B.W      TEXT_SetText
                  |L3.186|
0000ba  f6400167          MOV      r1,#0x867             ;989
0000be  6850              LDR      r0,[r2,#4]            ;989  ; hWinWind
0000c0  f7fffffe          BL       WM_GetDialogItem
0000c4  4606              MOV      r6,r0                 ;989
0000c6  7838              LDRB     r0,[r7,#0]            ;990  ; bit
0000c8  2806              CMP      r0,#6                 ;990
0000ca  d21c              BCS      |L3.262|
0000cc  4649              MOV      r1,r9                 ;992
0000ce  4826              LDR      r0,|L3.360|
0000d0  f7fffffe          BL       strcat
0000d4  f8980000          LDRB     r0,[r8,#0]            ;993  ; dot_flag
0000d8  b120              CBZ      r0,|L3.228|
0000da  a124              ADR      r1,|L3.364|
0000dc  4648              MOV      r0,r9                 ;993
0000de  f7fffffe          BL       strcmp
0000e2  b1b8              CBZ      r0,|L3.276|
                  |L3.228|
0000e4  f8980000          LDRB     r0,[r8,#0]            ;998  ; dot_flag
0000e8  b938              CBNZ     r0,|L3.250|
0000ea  a120              ADR      r1,|L3.364|
0000ec  4648              MOV      r0,r9                 ;998
0000ee  f7fffffe          BL       strcmp
0000f2  b910              CBNZ     r0,|L3.250|
0000f4  7838              LDRB     r0,[r7,#0]            ;1000  ; bit
0000f6  f8880000          STRB     r0,[r8,#0]            ;1000
                  |L3.250|
0000fa  7838              LDRB     r0,[r7,#0]            ;1002  ; bit
0000fc  1c40              ADDS     r0,r0,#1              ;1002
0000fe  7038              STRB     r0,[r7,#0]            ;1002
000100  e008              B        |L3.276|
                  |L3.258|
000102  e026              B        |L3.338|
                  |L3.260|
000104  e018              B        |L3.312|
                  |L3.262|
000106  703c              STRB     r4,[r7,#0]            ;1005
000108  2000              MOVS     r0,#0                 ;1006
                  |L3.266|
00010a  542c              STRB     r4,[r5,r0]            ;1008
00010c  1c40              ADDS     r0,r0,#1              ;1006
00010e  b2c0              UXTB     r0,r0                 ;1006
000110  2806              CMP      r0,#6                 ;1006
000112  d3fa              BCC      |L3.266|
                  |L3.276|
000114  4630              MOV      r0,r6                 ;1011
000116  e8bd47f0          POP      {r4-r10,lr}           ;1011
00011a  4913              LDR      r1,|L3.360|
00011c  f7ffbffe          B.W      TEXT_SetText
                  |L3.288|
000120  a112              ADR      r1,|L3.364|
000122  4648              MOV      r0,r9
000124  f7fffffe          BL       strcmp
000128  b910              CBNZ     r0,|L3.304|
;;;1119   					{
;;;1120   						dot_flag = bit;
00012a  7838              LDRB     r0,[r7,#0]  ; bit
00012c  f8880000          STRB     r0,[r8,#0]
                  |L3.304|
;;;1121   					}
;;;1122   					bit ++;
000130  7838              LDRB     r0,[r7,#0]  ; bit
000132  1c40              ADDS     r0,r0,#1
000134  7038              STRB     r0,[r7,#0]
000136  e006              B        |L3.326|
                  |L3.312|
;;;1123   				}
;;;1124   			}else{
;;;1125   				bit = 0;
000138  703c              STRB     r4,[r7,#0]
;;;1126   				for(i=0;i<6;i++)
00013a  2000              MOVS     r0,#0
                  |L3.316|
;;;1127   				{
;;;1128   					set_limit[i] = '\0';
00013c  542c              STRB     r4,[r5,r0]
00013e  1c40              ADDS     r0,r0,#1              ;1126
000140  b2c0              UXTB     r0,r0                 ;1126
000142  2806              CMP      r0,#6                 ;1126
000144  d3fa              BCC      |L3.316|
                  |L3.326|
;;;1129   				}
;;;1130   			}
;;;1131   			TEXT_SetText(hItem,set_limit);
000146  4630              MOV      r0,r6
000148  e8bd47f0          POP      {r4-r10,lr}
00014c  4906              LDR      r1,|L3.360|
00014e  f7ffbffe          B.W      TEXT_SetText
                  |L3.338|
;;;1132   //            switch(bit){
;;;1133   //                case 1:
;;;1134   //                {
;;;1135   //					for(i=0;i<6;i++)
;;;1136   //					{
;;;1137   //						set_limit[i] = '\0';
;;;1138   //					}
;;;1139   //                    set_pow_cutoffc = atoi(num) * 1000;
;;;1140   //                    strcat(set_limit,num);            
;;;1141   //                    TEXT_SetText(hItem,set_limit);
;;;1142   //                    bit = 2;
;;;1143   //                    break;
;;;1144   //                }
;;;1145   //                case 2:
;;;1146   //                {
;;;1147   //                    strcat(set_limit,num);            
;;;1148   //                    TEXT_SetText(hItem,set_limit);
;;;1149   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1150   //                    {
;;;1151   //                        dot_flag = 1;
;;;1152   //                    }else{
;;;1153   //                        set_pow_cutoffc = set_pow_cutoffc * 10 + atoi(num) * 1000;
;;;1154   //                    }
;;;1155   //                    bit = 3;
;;;1156   //                    break;
;;;1157   //                }
;;;1158   //                case 3:
;;;1159   //                {
;;;1160   //                    strcat(set_limit,num);
;;;1161   //                    TEXT_SetText(hItem,set_limit);
;;;1162   //                    if(dot_flag == 0)
;;;1163   //                    {
;;;1164   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1165   //                        {                            
;;;1166   //                            dot_flag = 2;
;;;1167   //                        }else{
;;;1168   //                            set_pow_cutoffc = 5000;
;;;1169   //                        }
;;;1170   //                    }else{
;;;1171   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 100;
;;;1172   //                    }
;;;1173   //                                       
;;;1174   //                    bit = 4;
;;;1175   //                    break;
;;;1176   //                }
;;;1177   //                case 4:
;;;1178   //                {
;;;1179   //                    strcat(set_limit,num);
;;;1180   //                    TEXT_SetText(hItem,set_limit);
;;;1181   //                    if(dot_flag == 0)
;;;1182   //                    {
;;;1183   //                        set_pow_cutoffc = 5000;
;;;1184   //                    }else if(dot_flag == 2){
;;;1185   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 100;
;;;1186   //                    }else{
;;;1187   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 10;
;;;1188   //                    }
;;;1189   //                                       
;;;1190   //                    bit = 5;
;;;1191   //                    break;
;;;1192   //                }
;;;1193   //                case 5:
;;;1194   //                {
;;;1195   //                    strcat(set_limit,num);
;;;1196   //                    TEXT_SetText(hItem,set_limit);
;;;1197   //                    if(dot_flag == 0)
;;;1198   //                    {
;;;1199   //                        set_pow_cutoffc = 5000;
;;;1200   //                    }else if(dot_flag == 1){
;;;1201   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num);
;;;1202   //                    }else{
;;;1203   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 10;
;;;1204   //                    }
;;;1205   //                                       
;;;1206   //                    bit = 6;
;;;1207   //                    break;
;;;1208   //                }
;;;1209   //                case 6:
;;;1210   //                {
;;;1211   //                    strcat(set_limit,num);
;;;1212   //                    TEXT_SetText(hItem,set_limit);
;;;1213   //                    if(dot_flag == 0)
;;;1214   //                    {
;;;1215   //                        set_pow_cutoffc = 0;
;;;1216   //                    }else if(dot_flag == 2){
;;;1217   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num);
;;;1218   //                    }                 
;;;1219   //                    bit = 0;
;;;1220   //                    break;
;;;1221   //                }
;;;1222   //            }
;;;1223           }
;;;1224           break;
;;;1225       }    
;;;1226   }
000152  e8bd87f0          POP      {r4-r10,pc}
;;;1227   
                          ENDP

000156  0000              DCW      0x0000
                  |L3.344|
                          DCD      set_sw
                  |L3.348|
                          DCD      ||.data||
                  |L3.352|
                          DCD      dot_flag
                  |L3.356|
                          DCD      bit
                  |L3.360|
                          DCD      set_limit
                  |L3.364|
00016c  2e00              DCB      ".",0
00016e  00                DCB      0
00016f  00                DCB      0

                          AREA ||i.MENU_OP_DOWN||, CODE, READONLY, ALIGN=2

                  MENU_OP_DOWN PROC
;;;525    void MENU_OP_DOWN(void);
;;;526    void MENU_OP_DOWN(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;527    {
;;;528        switch(set_sw)
000004  4c25              LDR      r4,|L4.156|
000006  7820              LDRB     r0,[r4,#0]  ; set_sw
;;;529        {
;;;530            case set_10:
;;;531            {
;;;532                WM_HWIN hItem;
;;;533                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_33);
000008  4d25              LDR      r5,|L4.160|
;;;534                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;535                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;536                
;;;537                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
;;;538                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00000a  4e26              LDR      r6,|L4.164|
00000c  f06f4770          MVN      r7,#0xf0000000        ;534
000010  f06f487f          MVN      r8,#0xff000000        ;535
000014  f640093e          MOV      r9,#0x83e             ;537
000018  2809              CMP      r0,#9                 ;528
00001a  d020              BEQ      |L4.94|
00001c  280a              CMP      r0,#0xa               ;528
00001e  d11c              BNE      |L4.90|
;;;539                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;540    
;;;541                set_sw = set_11;
;;;542                break;
;;;543            }
;;;544            case set_11:
;;;545            {
;;;546                WM_HWIN hItem;
;;;547    //            WM_InvalidateWindow(hWinWind);
;;;548                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
000020  4649              MOV      r1,r9
000022  6868              LDR      r0,[r5,#4]  ; hWinWind
000024  f7fffffe          BL       WM_GetDialogItem
000028  4681              MOV      r9,r0
;;;549                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00002a  4639              MOV      r1,r7
00002c  4648              MOV      r0,r9
00002e  f7fffffe          BL       TEXT_SetBkColor
;;;550                TEXT_SetTextColor(hItem, GUI_WHITE);
000032  4641              MOV      r1,r8
000034  4648              MOV      r0,r9
000036  f7fffffe          BL       TEXT_SetTextColor
;;;551                
;;;552                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
00003a  f640113a          MOV      r1,#0x93a
00003e  6868              LDR      r0,[r5,#4]  ; hWinWind
000040  f7fffffe          BL       WM_GetDialogItem
000044  4605              MOV      r5,r0
;;;553                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000046  4631              MOV      r1,r6
000048  4628              MOV      r0,r5
00004a  f7fffffe          BL       TEXT_SetBkColor
;;;554                TEXT_SetTextColor(hItem, GUI_BLACK);
00004e  2100              MOVS     r1,#0
000050  4628              MOV      r0,r5
000052  f7fffffe          BL       TEXT_SetTextColor
;;;555    
;;;556                set_sw = set_88;
000056  2057              MOVS     r0,#0x57
000058  7020              STRB     r0,[r4,#0]
                  |L4.90|
;;;557                break;
;;;558            }                     
;;;559            default: break;
;;;560        }
;;;561    }
00005a  e8bd87f0          POP      {r4-r10,pc}
                  |L4.94|
00005e  f640013d          MOV      r1,#0x83d             ;533
000062  6868              LDR      r0,[r5,#4]            ;533  ; hWinWind
000064  f7fffffe          BL       WM_GetDialogItem
000068  4682              MOV      r10,r0                ;533
00006a  4639              MOV      r1,r7                 ;534
00006c  4650              MOV      r0,r10                ;534
00006e  f7fffffe          BL       TEXT_SetBkColor
000072  4641              MOV      r1,r8                 ;535
000074  4650              MOV      r0,r10                ;535
000076  f7fffffe          BL       TEXT_SetTextColor
00007a  4649              MOV      r1,r9                 ;537
00007c  6868              LDR      r0,[r5,#4]            ;537  ; hWinWind
00007e  f7fffffe          BL       WM_GetDialogItem
000082  4605              MOV      r5,r0                 ;537
000084  4631              MOV      r1,r6                 ;538
000086  4628              MOV      r0,r5                 ;538
000088  f7fffffe          BL       TEXT_SetBkColor
00008c  2100              MOVS     r1,#0                 ;539
00008e  4628              MOV      r0,r5                 ;539
000090  f7fffffe          BL       TEXT_SetTextColor
000094  200a              MOVS     r0,#0xa               ;541
000096  7020              STRB     r0,[r4,#0]            ;541
000098  e7df              B        |L4.90|
;;;562    
                          ENDP

00009a  0000              DCW      0x0000
                  |L4.156|
                          DCD      set_sw
                  |L4.160|
                          DCD      ||.data||
                  |L4.164|
                          DCD      0x00bfffff

                          AREA ||i.MENU_OP_UP||, CODE, READONLY, ALIGN=2

                  MENU_OP_UP PROC
;;;563    void MENU_OP_UP(void);
;;;564    void MENU_OP_UP(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;565    {
;;;566        switch(set_sw)
000004  4c25              LDR      r4,|L5.156|
000006  7820              LDRB     r0,[r4,#0]  ; set_sw
;;;567        {
;;;568            case set_11:
;;;569    		{
;;;570    			 WM_HWIN hItem;
;;;571    //                 WM_InvalidateWindow(hWinWind);
;;;572    			 hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
000008  4d25              LDR      r5,|L5.160|
;;;573    			 TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;574    			 TEXT_SetTextColor(hItem, GUI_WHITE);
;;;575    		   
;;;576    			 hItem = WM_GetDialogItem(hWinWind, ID_TEXT_33);
;;;577    			 TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00000a  4e26              LDR      r6,|L5.164|
00000c  f640093e          MOV      r9,#0x83e             ;572
000010  f06f4770          MVN      r7,#0xf0000000        ;573
000014  f06f487f          MVN      r8,#0xff000000        ;574
000018  280a              CMP      r0,#0xa               ;566
00001a  d020              BEQ      |L5.94|
00001c  2857              CMP      r0,#0x57              ;566
00001e  d11c              BNE      |L5.90|
;;;578    			 TEXT_SetTextColor(hItem, GUI_BLACK);
;;;579    
;;;580    			 set_sw = set_10;
;;;581    			 break;
;;;582    		 } 
;;;583    		case set_88:
;;;584    		{
;;;585    			 WM_HWIN hItem;
;;;586    //                 WM_InvalidateWindow(hWinWind);
;;;587    			 hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
000020  f640113a          MOV      r1,#0x93a
000024  6868              LDR      r0,[r5,#4]  ; hWinWind
000026  f7fffffe          BL       WM_GetDialogItem
00002a  4682              MOV      r10,r0
;;;588    			 TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00002c  4639              MOV      r1,r7
00002e  4650              MOV      r0,r10
000030  f7fffffe          BL       TEXT_SetBkColor
;;;589    			 TEXT_SetTextColor(hItem, GUI_WHITE);
000034  4641              MOV      r1,r8
000036  4650              MOV      r0,r10
000038  f7fffffe          BL       TEXT_SetTextColor
;;;590    		   
;;;591    			 hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
00003c  4649              MOV      r1,r9
00003e  6868              LDR      r0,[r5,#4]  ; hWinWind
000040  f7fffffe          BL       WM_GetDialogItem
000044  4605              MOV      r5,r0
;;;592    			 TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000046  4631              MOV      r1,r6
000048  4628              MOV      r0,r5
00004a  f7fffffe          BL       TEXT_SetBkColor
;;;593    			 TEXT_SetTextColor(hItem, GUI_BLACK);
00004e  2100              MOVS     r1,#0
000050  4628              MOV      r0,r5
000052  f7fffffe          BL       TEXT_SetTextColor
;;;594    
;;;595    			 set_sw = set_11;
000056  200a              MOVS     r0,#0xa
000058  7020              STRB     r0,[r4,#0]
                  |L5.90|
;;;596    			 break;
;;;597    		 }                     
;;;598    		 default: break;
;;;599        }
;;;600    }
00005a  e8bd87f0          POP      {r4-r10,pc}
                  |L5.94|
00005e  4649              MOV      r1,r9                 ;572
000060  6868              LDR      r0,[r5,#4]            ;572  ; hWinWind
000062  f7fffffe          BL       WM_GetDialogItem
000066  4681              MOV      r9,r0                 ;572
000068  4639              MOV      r1,r7                 ;573
00006a  4648              MOV      r0,r9                 ;573
00006c  f7fffffe          BL       TEXT_SetBkColor
000070  4641              MOV      r1,r8                 ;574
000072  4648              MOV      r0,r9                 ;574
000074  f7fffffe          BL       TEXT_SetTextColor
000078  f640013d          MOV      r1,#0x83d             ;576
00007c  6868              LDR      r0,[r5,#4]            ;576  ; hWinWind
00007e  f7fffffe          BL       WM_GetDialogItem
000082  4605              MOV      r5,r0                 ;576
000084  4631              MOV      r1,r6                 ;577
000086  4628              MOV      r0,r5                 ;577
000088  f7fffffe          BL       TEXT_SetBkColor
00008c  2100              MOVS     r1,#0                 ;578
00008e  4628              MOV      r0,r5                 ;578
000090  f7fffffe          BL       TEXT_SetTextColor
000094  2009              MOVS     r0,#9                 ;580
000096  7020              STRB     r0,[r4,#0]            ;580
000098  e7df              B        |L5.90|
;;;601    
                          ENDP

00009a  0000              DCW      0x0000
                  |L5.156|
                          DCD      set_sw
                  |L5.160|
                          DCD      ||.data||
                  |L5.164|
                          DCD      0x00bfffff

                          AREA ||i.MENU_SET||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  MENU_SET PROC
;;;603    void MENU_SET(void);
;;;604    void MENU_SET(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;605    {
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b085              SUB      sp,sp,#0x14
;;;606        vu8 i;
;;;607        char buf[6];    
;;;608    
;;;609        float dis_output_v;
;;;610        float dis_output_c; 
;;;611        
;;;612        if(SET_Voltage > /*3000*/ 6200)
00000a  f8df8414          LDR      r8,|L6.1056|
00000e  f8d80004          LDR      r0,[r8,#4]  ; Run_Control
000012  f6410b38          MOV      r11,#0x1838
000016  4558              CMP      r0,r11
000018  d901              BLS      |L6.30|
;;;613        {
;;;614          SET_Voltage = /*3000*/ 6200;
00001a  f8c8b004          STR      r11,[r8,#4]  ; Run_Control
                  |L6.30|
;;;615        }
;;;616        if(SET_Current > 5000)
00001e  f8d80008          LDR      r0,[r8,#8]  ; Run_Control
000022  f2413688          MOV      r6,#0x1388
000026  42b0              CMP      r0,r6
000028  d901              BLS      |L6.46|
;;;617        {
;;;618          SET_Current = 5000;
00002a  f8c86008          STR      r6,[r8,#8]  ; Run_Control
                  |L6.46|
;;;619        }
;;;620        switch(set_sw){
00002e  4dfd              LDR      r5,|L6.1060|
000030  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;621            case set_10:
;;;622            {
;;;623                WM_HWIN hItem;
;;;624    //            WM_InvalidateWindow(hWinWind);
;;;625                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_33);
;;;626                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;627                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;628                       
;;;629                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
;;;630                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;631                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;632                for(i=0;i<6;i++)
;;;633                {
;;;634                    set_limit[i] = '\0';
;;;635                }
;;;636    
;;;637                set_sw = set_18;
;;;638                break;                        
;;;639            }
;;;640            case set_18:
;;;641            {           
;;;642                WM_HWIN hItem;
;;;643    //            WM_InvalidateWindow(hWinWind);
;;;644                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
;;;645                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;646                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;647    			if(dot_flag == 0){
;;;648    				pow_v = atoi(set_limit)*100;					
;;;649    			}else if(dot_flag != 0){
;;;650    				memset(buf, '\0', sizeof(buf));
;;;651    				strncpy(buf,set_limit,dot_flag + 3);
;;;652    				pow_v = atof(buf)*100;
;;;653    			}
;;;654    			if(pow_v > 6200)
;;;655    			{
;;;656    				pow_v = 6200;
;;;657    			}
;;;658                SET_Voltage = pow_v;
;;;659                if(SET_Voltage/100 * SET_Current/1000 > 250)
;;;660                {
;;;661                    SET_Voltage = 0;
;;;662                }
;;;663                dis_output_v = (float)SET_Voltage/100;
;;;664                
;;;665                sprintf(buf,"%.2f",dis_output_v);
;;;666                TEXT_SetText(hItem,buf);
;;;667                
;;;668                                                                         
;;;669                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_33);
;;;670                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;671                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;672                                
;;;673                Write_Limits();
;;;674                set_sw = set_10;
;;;675                bit = 0;
000032  f8df93f4          LDR      r9,|L6.1064|
;;;676                dot_flag = 0;
;;;677                break; 
;;;678             }
;;;679             case set_11:
;;;680             {
;;;681                WM_HWIN hItem;
;;;682    //            WM_InvalidateWindow(hWinWind);
;;;683                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
;;;684                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;685                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;686                                    
;;;687                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;688                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;689                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;690                for(i=0;i<6;i++)
;;;691                {
;;;692                    set_limit[i] = '\0';
;;;693                }
;;;694    
;;;695                set_sw = set_19;
;;;696                break;                        
;;;697             }
;;;698             case set_19:
;;;699             {           
;;;700                WM_HWIN hItem;
;;;701    //            WM_InvalidateWindow(hWinWind);
;;;702                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;703                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;704                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;705    			if(dot_flag == 0){
;;;706    				pow_c = atoi(set_limit)*1000;					
;;;707    			}else if(dot_flag != 0){
;;;708    				memset(buf, '\0', sizeof(buf));
;;;709    				strncpy(buf,set_limit,dot_flag + 4);
;;;710    				pow_c = atof(buf)*1000;
000036  ed9f9bfd          VLDR     d9,|L6.1068|
;;;711    			}
;;;712                  
;;;713                if(pow_c > 5000)
;;;714                {
;;;715                    pow_c = 5000;               
;;;716                }
;;;717    			SET_Current = pow_c;
;;;718                if(SET_Voltage/100 * SET_Current/1000 > 250)
;;;719                {
;;;720                    SET_Current = 0;
;;;721                }
;;;722                dis_output_c = (float)SET_Current/1000;
00003a  ed9f8afe          VLDR     s16,|L6.1076|
00003e  f8dfa3f8          LDR      r10,|L6.1080|
000042  48fe              LDR      r0,|L6.1084|
000044  2400              MOVS     r4,#0                 ;625
000046  4ffe              LDR      r7,|L6.1088|
000048  2912              CMP      r1,#0x12              ;620
00004a  d07d              BEQ      |L6.328|
00004c  dc7d              BGT      |L6.330|
00004e  f6400666          MOV      r6,#0x866             ;629
000052  2909              CMP      r1,#9                 ;620
000054  d07a              BEQ      |L6.332|
000056  290a              CMP      r1,#0xa               ;620
000058  d079              BEQ      |L6.334|
00005a  2911              CMP      r1,#0x11              ;620
00005c  d172              BNE      |L6.324|
00005e  4682              MOV      r10,r0                ;644
000060  4631              MOV      r1,r6                 ;644
000062  6840              LDR      r0,[r0,#4]            ;644  ; hWinWind
000064  f7fffffe          BL       WM_GetDialogItem
000068  4606              MOV      r6,r0                 ;644
00006a  f06f4170          MVN      r1,#0xf0000000        ;645
00006e  4630              MOV      r0,r6                 ;645
000070  f7fffffe          BL       TEXT_SetBkColor
000074  f06f417f          MVN      r1,#0xff000000        ;646
000078  4630              MOV      r0,r6                 ;646
00007a  f7fffffe          BL       TEXT_SetTextColor
00007e  7838              LDRB     r0,[r7,#0]            ;647  ; dot_flag
000080  2800              CMP      r0,#0                 ;647
000082  d065              BEQ      |L6.336|
000084  7838              LDRB     r0,[r7,#0]            ;649  ; dot_flag
000086  b1b0              CBZ      r0,|L6.182|
000088  9402              STR      r4,[sp,#8]            ;650
00008a  9403              STR      r4,[sp,#0xc]          ;650
00008c  783a              LDRB     r2,[r7,#0]            ;651  ; dot_flag
00008e  49ea              LDR      r1,|L6.1080|
000090  1cd2              ADDS     r2,r2,#3              ;651
000092  a802              ADD      r0,sp,#8              ;651
000094  f7fffffe          BL       strncpy
000098  a802              ADD      r0,sp,#8              ;652
00009a  f7fffffe          BL       __hardfp_atof
00009e  ed9f1be9          VLDR     d1,|L6.1092|
0000a2  ec510b10          VMOV     r0,r1,d0              ;652
0000a6  ec532b11          VMOV     r2,r3,d1              ;652
0000aa  f7fffffe          BL       __aeabi_dmul
0000ae  f7fffffe          BL       __aeabi_d2uiz
0000b2  f8c80098          STR      r0,[r8,#0x98]         ;652  ; Run_Control
                  |L6.182|
0000b6  f8d80098          LDR      r0,[r8,#0x98]         ;654  ; Run_Control
0000ba  4558              CMP      r0,r11                ;654
0000bc  d901              BLS      |L6.194|
0000be  f8c8b098          STR      r11,[r8,#0x98]        ;656  ; Run_Control
                  |L6.194|
0000c2  f8d80098          LDR      r0,[r8,#0x98]         ;658  ; Run_Control
0000c6  f8c80004          STR      r0,[r8,#4]            ;658  ; Run_Control
0000ca  f8d81004          LDR      r1,[r8,#4]            ;659  ; Run_Control
0000ce  2064              MOVS     r0,#0x64              ;659
0000d0  fbb1f0f0          UDIV     r0,r1,r0              ;659
0000d4  f8d81008          LDR      r1,[r8,#8]            ;659  ; Run_Control
0000d8  4348              MULS     r0,r1,r0              ;659
0000da  49dc              LDR      r1,|L6.1100|
0000dc  4288              CMP      r0,r1                 ;659
0000de  d901              BLS      |L6.228|
0000e0  f8c84004          STR      r4,[r8,#4]            ;661  ; Run_Control
                  |L6.228|
0000e4  f8d80004          LDR      r0,[r8,#4]            ;663  ; Run_Control
0000e8  ee000a10          VMOV     s0,r0                 ;663
0000ec  eef80a40          VCVT.F32.U32 s1,s0                 ;663
0000f0  ed9f1ad7          VLDR     s2,|L6.1104|
0000f4  ee800a81          VDIV.F32 s0,s1,s2              ;663
0000f8  ee100a10          VMOV     r0,s0                 ;665
0000fc  f7fffffe          BL       __aeabi_f2d
000100  ec410b10          VMOV     d0,r0,r1              ;665
000104  a1d3              ADR      r1,|L6.1108|
000106  ec532b10          VMOV     r2,r3,d0              ;665
00010a  a802              ADD      r0,sp,#8              ;665
00010c  f7fffffe          BL       __2sprintf
000110  a902              ADD      r1,sp,#8              ;666
000112  4630              MOV      r0,r6                 ;666
000114  f7fffffe          BL       TEXT_SetText
000118  f640013d          MOV      r1,#0x83d             ;669
00011c  f8da0004          LDR      r0,[r10,#4]           ;669  ; hWinWind
000120  f7fffffe          BL       WM_GetDialogItem
000124  4606              MOV      r6,r0                 ;669
000126  49cd              LDR      r1,|L6.1116|
000128  4630              MOV      r0,r6                 ;670
00012a  f7fffffe          BL       TEXT_SetBkColor
00012e  2100              MOVS     r1,#0                 ;671
000130  4630              MOV      r0,r6                 ;671
000132  f7fffffe          BL       TEXT_SetTextColor
000136  f7fffffe          BL       Write_Limits
00013a  2009              MOVS     r0,#9                 ;674
00013c  7028              STRB     r0,[r5,#0]            ;674
00013e  f8894000          STRB     r4,[r9,#0]            ;675
000142  703c              STRB     r4,[r7,#0]            ;676
                  |L6.324|
;;;723                sprintf(buf,"%.3f",dis_output_c);
;;;724                TEXT_SetText(hItem,buf);            
;;;725                       
;;;726                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
;;;727                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;728                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;729                                                     
;;;730                Write_Limits();
;;;731                set_sw = set_11;
;;;732                bit = 0;
;;;733                dot_flag = 0;
;;;734                break; 
;;;735             }
;;;736    		 case set_88:
;;;737             {
;;;738                WM_HWIN hItem;
;;;739    //            WM_InvalidateWindow(hWinWind);
;;;740                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
;;;741                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;742                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;743                                    
;;;744                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
;;;745                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;746                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;747                for(i=0;i<6;i++)
;;;748                {
;;;749                    set_limit[i] = '\0';
;;;750                }
;;;751    
;;;752                set_sw = set_89;
;;;753                break;                        
;;;754             }
;;;755             case set_89:
;;;756             {           
;;;757                WM_HWIN hItem;
;;;758    //            WM_InvalidateWindow(hWinWind);
;;;759                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
;;;760                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;761                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;762    			if(dot_flag == 0){
;;;763    				set_pow_cutoffc = atoi(set_limit)*1000;					
;;;764    			}else if(dot_flag != 0){
;;;765    				memset(buf, '\0', sizeof(buf));
;;;766    				strncpy(buf,set_limit,dot_flag + 3);
;;;767    				set_pow_cutoffc = atof(buf)*1000;
;;;768    			}
;;;769                if(set_pow_cutoffc > 5000)
;;;770                {
;;;771                    set_pow_cutoffc = 5000;               
;;;772                }
;;;773                pow_cutoffc = (float)set_pow_cutoffc/1000;
;;;774                sprintf(buf,"%.3f",pow_cutoffc);
;;;775                TEXT_SetText(hItem,buf);            
;;;776                       
;;;777                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
;;;778                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;779                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;780                                                     
;;;781                Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
;;;782                set_sw = set_88;
;;;783                bit = 0;
;;;784                dot_flag = 0;
;;;785                break; 
;;;786             }
;;;787             default:break;
;;;788         }
;;;789    }
000144  b005              ADD      sp,sp,#0x14
000146  e004              B        |L6.338|
                  |L6.328|
000148  e0dc              B        |L6.772|
                  |L6.330|
00014a  e006              B        |L6.346|
                  |L6.332|
00014c  e070              B        |L6.560|
                  |L6.334|
00014e  e0a9              B        |L6.676|
                  |L6.336|
000150  e0a0              B        |L6.660|
                  |L6.338|
000152  ecbd8b04          VPOP     {d8-d9}
000156  e8bd8ff0          POP      {r4-r11,pc}
                  |L6.346|
00015a  f6401b3a          MOV      r11,#0x93a            ;740
00015e  f640182e          MOV      r8,#0x92e             ;744
000162  2957              CMP      r1,#0x57              ;620
000164  d07d              BEQ      |L6.610|
000166  2958              CMP      r1,#0x58              ;620
000168  d1ec              BNE      |L6.324|
00016a  4682              MOV      r10,r0                ;759
00016c  4641              MOV      r1,r8                 ;759
00016e  6840              LDR      r0,[r0,#4]            ;759  ; hWinWind
000170  f7fffffe          BL       WM_GetDialogItem
000174  9001              STR      r0,[sp,#4]            ;759
000176  f06f4170          MVN      r1,#0xf0000000        ;760
00017a  9801              LDR      r0,[sp,#4]            ;760
00017c  f7fffffe          BL       TEXT_SetBkColor
000180  f06f417f          MVN      r1,#0xff000000        ;761
000184  9801              LDR      r0,[sp,#4]            ;761
000186  f7fffffe          BL       TEXT_SetTextColor
00018a  7838              LDRB     r0,[r7,#0]            ;762  ; dot_flag
00018c  f8df82d0          LDR      r8,|L6.1120|
000190  2800              CMP      r0,#0                 ;762
000192  d067              BEQ      |L6.612|
000194  7838              LDRB     r0,[r7,#0]            ;764  ; dot_flag
000196  b1a0              CBZ      r0,|L6.450|
000198  9402              STR      r4,[sp,#8]            ;765
00019a  9403              STR      r4,[sp,#0xc]          ;765
00019c  783a              LDRB     r2,[r7,#0]            ;766  ; dot_flag
00019e  49a6              LDR      r1,|L6.1080|
0001a0  1cd2              ADDS     r2,r2,#3              ;766
0001a2  a802              ADD      r0,sp,#8              ;766
0001a4  f7fffffe          BL       strncpy
0001a8  a802              ADD      r0,sp,#8              ;767
0001aa  f7fffffe          BL       __hardfp_atof
0001ae  ec532b19          VMOV     r2,r3,d9              ;767
0001b2  ec510b10          VMOV     r0,r1,d0              ;767
0001b6  f7fffffe          BL       __aeabi_dmul
0001ba  f7fffffe          BL       __aeabi_d2iz
0001be  f8c80014          STR      r0,[r8,#0x14]         ;767  ; InFlashSave
                  |L6.450|
0001c2  f8d80014          LDR      r0,[r8,#0x14]         ;769  ; InFlashSave
0001c6  42b0              CMP      r0,r6                 ;769
0001c8  dd01              BLE      |L6.462|
0001ca  f8c86014          STR      r6,[r8,#0x14]         ;771  ; InFlashSave
                  |L6.462|
0001ce  ed980a05          VLDR     s0,[r8,#0x14]         ;773
0001d2  eef80ac0          VCVT.F32.S32 s1,s0                 ;773
0001d6  ee800a88          VDIV.F32 s0,s1,s16             ;773
0001da  ed8a0a02          VSTR     s0,[r10,#8]           ;773
0001de  ee100a10          VMOV     r0,s0                 ;774
0001e2  f7fffffe          BL       __aeabi_f2d
0001e6  ec410b10          VMOV     d0,r0,r1              ;774
0001ea  a19e              ADR      r1,|L6.1124|
0001ec  ec532b10          VMOV     r2,r3,d0              ;774
0001f0  a802              ADD      r0,sp,#8              ;774
0001f2  f7fffffe          BL       __2sprintf
0001f6  a902              ADD      r1,sp,#8              ;775
0001f8  9801              LDR      r0,[sp,#4]            ;775
0001fa  f7fffffe          BL       TEXT_SetText
0001fe  4659              MOV      r1,r11                ;777
000200  f8da0004          LDR      r0,[r10,#4]           ;777  ; hWinWind
000204  f7fffffe          BL       WM_GetDialogItem
000208  4606              MOV      r6,r0                 ;777
00020a  4994              LDR      r1,|L6.1116|
00020c  4630              MOV      r0,r6                 ;778
00020e  f7fffffe          BL       TEXT_SetBkColor
000212  2100              MOVS     r1,#0                 ;779
000214  4630              MOV      r0,r6                 ;779
000216  f7fffffe          BL       TEXT_SetTextColor
00021a  4a91              LDR      r2,|L6.1120|
00021c  2128              MOVS     r1,#0x28              ;781
00021e  4893              LDR      r0,|L6.1132|
000220  f7fffffe          BL       Flash_Write32BitDatas
000224  2057              MOVS     r0,#0x57              ;782
000226  7028              STRB     r0,[r5,#0]            ;782
000228  f8894000          STRB     r4,[r9,#0]            ;783
00022c  703c              STRB     r4,[r7,#0]            ;784
00022e  e789              B        |L6.324|
                  |L6.560|
000230  4607              MOV      r7,r0                 ;625
000232  f640013d          MOV      r1,#0x83d             ;625
000236  6840              LDR      r0,[r0,#4]            ;625  ; hWinWind
000238  f7fffffe          BL       WM_GetDialogItem
00023c  4680              MOV      r8,r0                 ;625
00023e  f06f4170          MVN      r1,#0xf0000000        ;626
000242  4640              MOV      r0,r8                 ;626
000244  f7fffffe          BL       TEXT_SetBkColor
000248  f06f417f          MVN      r1,#0xff000000        ;627
00024c  4640              MOV      r0,r8                 ;627
00024e  f7fffffe          BL       TEXT_SetTextColor
000252  4631              MOV      r1,r6                 ;629
000254  6878              LDR      r0,[r7,#4]            ;629  ; hWinWind
000256  f7fffffe          BL       WM_GetDialogItem
00025a  4606              MOV      r6,r0                 ;629
00025c  497f              LDR      r1,|L6.1116|
00025e  4630              MOV      r0,r6                 ;630
000260  e001              B        |L6.614|
                  |L6.610|
000262  e0ca              B        |L6.1018|
                  |L6.612|
000264  e120              B        |L6.1192|
                  |L6.614|
000266  f7fffffe          BL       TEXT_SetBkColor
00026a  2100              MOVS     r1,#0                 ;631
00026c  4630              MOV      r0,r6                 ;631
00026e  f7fffffe          BL       TEXT_SetTextColor
000272  9404              STR      r4,[sp,#0x10]         ;632
000274  e007              B        |L6.646|
                  |L6.630|
000276  f89d0010          LDRB     r0,[sp,#0x10]         ;634
00027a  f80a4000          STRB     r4,[r10,r0]           ;634
00027e  f89d0010          LDRB     r0,[sp,#0x10]         ;632
000282  1c40              ADDS     r0,r0,#1              ;632
000284  9004              STR      r0,[sp,#0x10]         ;632
                  |L6.646|
000286  f89d0010          LDRB     r0,[sp,#0x10]         ;632
00028a  2806              CMP      r0,#6                 ;632
00028c  d3f3              BCC      |L6.630|
00028e  2011              MOVS     r0,#0x11              ;637
000290  7028              STRB     r0,[r5,#0]            ;637
000292  e757              B        |L6.324|
                  |L6.660|
000294  4868              LDR      r0,|L6.1080|
000296  f7fffffe          BL       atoi
00029a  2164              MOVS     r1,#0x64              ;648
00029c  4348              MULS     r0,r1,r0              ;648
00029e  f8c80098          STR      r0,[r8,#0x98]         ;648  ; Run_Control
0002a2  e708              B        |L6.182|
                  |L6.676|
0002a4  4606              MOV      r6,r0                 ;683
0002a6  f640013e          MOV      r1,#0x83e             ;683
0002aa  6840              LDR      r0,[r0,#4]            ;683  ; hWinWind
0002ac  f7fffffe          BL       WM_GetDialogItem
0002b0  4607              MOV      r7,r0                 ;683
0002b2  f06f4170          MVN      r1,#0xf0000000        ;684
0002b6  4638              MOV      r0,r7                 ;684
0002b8  f7fffffe          BL       TEXT_SetBkColor
0002bc  f06f417f          MVN      r1,#0xff000000        ;685
0002c0  4638              MOV      r0,r7                 ;685
0002c2  f7fffffe          BL       TEXT_SetTextColor
0002c6  f6400167          MOV      r1,#0x867             ;687
0002ca  6870              LDR      r0,[r6,#4]            ;687  ; hWinWind
0002cc  f7fffffe          BL       WM_GetDialogItem
0002d0  4606              MOV      r6,r0                 ;687
0002d2  4962              LDR      r1,|L6.1116|
0002d4  4630              MOV      r0,r6                 ;688
0002d6  f7fffffe          BL       TEXT_SetBkColor
0002da  2100              MOVS     r1,#0                 ;689
0002dc  4630              MOV      r0,r6                 ;689
0002de  f7fffffe          BL       TEXT_SetTextColor
0002e2  9404              STR      r4,[sp,#0x10]         ;690
0002e4  e007              B        |L6.758|
                  |L6.742|
0002e6  f89d0010          LDRB     r0,[sp,#0x10]         ;692
0002ea  f80a4000          STRB     r4,[r10,r0]           ;692
0002ee  f89d0010          LDRB     r0,[sp,#0x10]         ;690
0002f2  1c40              ADDS     r0,r0,#1              ;690
0002f4  9004              STR      r0,[sp,#0x10]         ;690
                  |L6.758|
0002f6  f89d0010          LDRB     r0,[sp,#0x10]         ;690
0002fa  2806              CMP      r0,#6                 ;690
0002fc  d3f3              BCC      |L6.742|
0002fe  2012              MOVS     r0,#0x12              ;695
000300  7028              STRB     r0,[r5,#0]            ;695
000302  e71f              B        |L6.324|
                  |L6.772|
000304  4682              MOV      r10,r0                ;702
000306  f6400167          MOV      r1,#0x867             ;702
00030a  6840              LDR      r0,[r0,#4]            ;702  ; hWinWind
00030c  f7fffffe          BL       WM_GetDialogItem
000310  4683              MOV      r11,r0                ;702
000312  f06f4170          MVN      r1,#0xf0000000        ;703
000316  4658              MOV      r0,r11                ;703
000318  f7fffffe          BL       TEXT_SetBkColor
00031c  f06f417f          MVN      r1,#0xff000000        ;704
000320  4658              MOV      r0,r11                ;704
000322  f7fffffe          BL       TEXT_SetTextColor
000326  7838              LDRB     r0,[r7,#0]            ;705  ; dot_flag
000328  b3f0              CBZ      r0,|L6.936|
00032a  7838              LDRB     r0,[r7,#0]            ;707  ; dot_flag
00032c  b1a0              CBZ      r0,|L6.856|
00032e  9402              STR      r4,[sp,#8]            ;708
000330  9403              STR      r4,[sp,#0xc]          ;708
000332  783a              LDRB     r2,[r7,#0]            ;709  ; dot_flag
000334  4940              LDR      r1,|L6.1080|
000336  1d12              ADDS     r2,r2,#4              ;709
000338  a802              ADD      r0,sp,#8              ;709
00033a  f7fffffe          BL       strncpy
00033e  a802              ADD      r0,sp,#8              ;710
000340  f7fffffe          BL       __hardfp_atof
000344  ec532b19          VMOV     r2,r3,d9              ;710
000348  ec510b10          VMOV     r0,r1,d0              ;710
00034c  f7fffffe          BL       __aeabi_dmul
000350  f7fffffe          BL       __aeabi_d2uiz
000354  f8c800a0          STR      r0,[r8,#0xa0]         ;710  ; Run_Control
                  |L6.856|
000358  f8d800a0          LDR      r0,[r8,#0xa0]         ;713  ; Run_Control
00035c  42b0              CMP      r0,r6                 ;713
00035e  d901              BLS      |L6.868|
000360  f8c860a0          STR      r6,[r8,#0xa0]         ;715  ; Run_Control
                  |L6.868|
000364  f8d800a0          LDR      r0,[r8,#0xa0]         ;717  ; Run_Control
000368  f8c80008          STR      r0,[r8,#8]            ;717  ; Run_Control
00036c  f8d81004          LDR      r1,[r8,#4]            ;718  ; Run_Control
000370  2064              MOVS     r0,#0x64              ;718
000372  fbb1f0f0          UDIV     r0,r1,r0              ;718
000376  f8d81008          LDR      r1,[r8,#8]            ;718  ; Run_Control
00037a  4348              MULS     r0,r1,r0              ;718
00037c  4933              LDR      r1,|L6.1100|
00037e  4288              CMP      r0,r1                 ;718
000380  d901              BLS      |L6.902|
000382  f8c84008          STR      r4,[r8,#8]            ;720  ; Run_Control
                  |L6.902|
000386  f8d80008          LDR      r0,[r8,#8]            ;722  ; Run_Control
00038a  ee000a10          VMOV     s0,r0                 ;722
00038e  eef80a40          VCVT.F32.U32 s1,s0                 ;722
000392  ee800a88          VDIV.F32 s0,s1,s16             ;722
000396  ee100a10          VMOV     r0,s0                 ;723
00039a  f7fffffe          BL       __aeabi_f2d
00039e  ec410b10          VMOV     d0,r0,r1              ;723
0003a2  ec532b10          VMOV     r2,r3,d0              ;723
0003a6  e000              B        |L6.938|
                  |L6.936|
0003a8  e01e              B        |L6.1000|
                  |L6.938|
0003aa  a12e              ADR      r1,|L6.1124|
0003ac  a802              ADD      r0,sp,#8              ;723
0003ae  f7fffffe          BL       __2sprintf
0003b2  a902              ADD      r1,sp,#8              ;724
0003b4  4658              MOV      r0,r11                ;724
0003b6  f7fffffe          BL       TEXT_SetText
0003ba  f640013e          MOV      r1,#0x83e             ;726
0003be  f8da0004          LDR      r0,[r10,#4]           ;726  ; hWinWind
0003c2  f7fffffe          BL       WM_GetDialogItem
0003c6  4606              MOV      r6,r0                 ;726
0003c8  4924              LDR      r1,|L6.1116|
0003ca  4630              MOV      r0,r6                 ;727
0003cc  f7fffffe          BL       TEXT_SetBkColor
0003d0  2100              MOVS     r1,#0                 ;728
0003d2  4630              MOV      r0,r6                 ;728
0003d4  f7fffffe          BL       TEXT_SetTextColor
0003d8  f7fffffe          BL       Write_Limits
0003dc  200a              MOVS     r0,#0xa               ;731
0003de  7028              STRB     r0,[r5,#0]            ;731
0003e0  f8894000          STRB     r4,[r9,#0]            ;732
0003e4  703c              STRB     r4,[r7,#0]            ;733
0003e6  e6ad              B        |L6.324|
                  |L6.1000|
0003e8  4813              LDR      r0,|L6.1080|
0003ea  f7fffffe          BL       atoi
0003ee  f44f717a          MOV      r1,#0x3e8             ;706
0003f2  4348              MULS     r0,r1,r0              ;706
0003f4  f8c800a0          STR      r0,[r8,#0xa0]         ;706  ; Run_Control
0003f8  e7ae              B        |L6.856|
                  |L6.1018|
0003fa  4606              MOV      r6,r0                 ;740
0003fc  4659              MOV      r1,r11                ;740
0003fe  6840              LDR      r0,[r0,#4]            ;740  ; hWinWind
000400  f7fffffe          BL       WM_GetDialogItem
000404  4607              MOV      r7,r0                 ;740
000406  f06f4170          MVN      r1,#0xf0000000        ;741
00040a  4638              MOV      r0,r7                 ;741
00040c  f7fffffe          BL       TEXT_SetBkColor
000410  f06f417f          MVN      r1,#0xff000000        ;742
000414  4638              MOV      r0,r7                 ;742
000416  f7fffffe          BL       TEXT_SetTextColor
00041a  4641              MOV      r1,r8                 ;744
00041c  6870              LDR      r0,[r6,#4]            ;744  ; hWinWind
00041e  e027              B        |L6.1136|
                  |L6.1056|
                          DCD      Run_Control
                  |L6.1060|
                          DCD      set_sw
                  |L6.1064|
                          DCD      bit
                  |L6.1068|
00042c  00000000          DCFD     0x408f400000000000 ; 1000
000430  408f4000
                  |L6.1076|
000434  447a0000          DCFS     0x447a0000 ; 1000
                  |L6.1080|
                          DCD      set_limit
                  |L6.1084|
                          DCD      ||.data||
                  |L6.1088|
                          DCD      dot_flag
                  |L6.1092|
000444  00000000          DCFD     0x4059000000000000 ; 100
000448  40590000
                  |L6.1100|
                          DCD      0x0003d477
                  |L6.1104|
000450  42c80000          DCFS     0x42c80000 ; 100
                  |L6.1108|
000454  252e3266          DCB      "%.2f",0
000458  00      
000459  00                DCB      0
00045a  00                DCB      0
00045b  00                DCB      0
                  |L6.1116|
                          DCD      0x00bfffff
                  |L6.1120|
                          DCD      InFlashSave
                  |L6.1124|
000464  252e3366          DCB      "%.3f",0
000468  00      
000469  00                DCB      0
00046a  00                DCB      0
00046b  00                DCB      0
                  |L6.1132|
                          DCD      0x080e0000
                  |L6.1136|
000470  f7fffffe          BL       WM_GetDialogItem
000474  4606              MOV      r6,r0                 ;744
000476  4911              LDR      r1,|L6.1212|
000478  4630              MOV      r0,r6                 ;745
00047a  f7fffffe          BL       TEXT_SetBkColor
00047e  2100              MOVS     r1,#0                 ;746
000480  4630              MOV      r0,r6                 ;746
000482  f7fffffe          BL       TEXT_SetTextColor
000486  9404              STR      r4,[sp,#0x10]         ;747
000488  e007              B        |L6.1178|
                  |L6.1162|
00048a  f89d0010          LDRB     r0,[sp,#0x10]         ;749
00048e  f80a4000          STRB     r4,[r10,r0]           ;749
000492  f89d0010          LDRB     r0,[sp,#0x10]         ;747
000496  1c40              ADDS     r0,r0,#1              ;747
000498  9004              STR      r0,[sp,#0x10]         ;747
                  |L6.1178|
00049a  f89d0010          LDRB     r0,[sp,#0x10]         ;747
00049e  2806              CMP      r0,#6                 ;747
0004a0  d3f3              BCC      |L6.1162|
0004a2  2058              MOVS     r0,#0x58              ;752
0004a4  7028              STRB     r0,[r5,#0]            ;752
0004a6  e64d              B        |L6.324|
                  |L6.1192|
0004a8  4805              LDR      r0,|L6.1216|
0004aa  f7fffffe          BL       atoi
0004ae  f44f717a          MOV      r1,#0x3e8             ;763
0004b2  4348              MULS     r0,r1,r0              ;763
0004b4  f8c80014          STR      r0,[r8,#0x14]         ;763  ; InFlashSave
0004b8  e683              B        |L6.450|
;;;790    void DEL_POW(void)
                          ENDP

0004ba  0000              DCW      0x0000
                  |L6.1212|
                          DCD      0x00bfffff
                  |L6.1216|
                          DCD      set_limit

                          AREA ||i.ResetPow||, CODE, READONLY, ALIGN=2

                  ResetPow PROC
;;;517    
;;;518    WM_HWIN ResetPow(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;519        hWinWind = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog, WM_HBKWIN, 0, 0);
000002  f7fffffe          BL       WM_GetDesktopWindow
000006  4603              MOV      r3,r0
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
00000c  9001              STR      r0,[sp,#4]
00000e  4a04              LDR      r2,|L7.32|
000010  2116              MOVS     r1,#0x16
000012  4804              LDR      r0,|L7.36|
000014  f7fffffe          BL       GUI_CreateDialogBox
000018  4903              LDR      r1,|L7.40|
00001a  6048              STR      r0,[r1,#4]  ; hWinWind
;;;520    //    WM_InvalidateWindow(hWinWind);
;;;521        return hWinWind;
;;;522    }
00001c  bd1c              POP      {r2-r4,pc}
;;;523    
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      _cbDialog
                  |L7.36|
                          DCD      ||.constdata||
                  |L7.40|
                          DCD      ||.data||

                          AREA ||i._cbDialog||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  _cbDialog PROC
;;;82     
;;;83     static void _cbDialog(WM_MESSAGE * pMsg) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b083              SUB      sp,sp,#0xc
00000a  4604              MOV      r4,r0
;;;84       WM_HWIN hItem;
;;;85       int     NCode;
;;;86       int     Id;
;;;87       static vu8 status_flash;
;;;88       char buf[5];    
;;;89     
;;;90       float dis_output_v = (float)SET_Voltage/100;
00000c  48fe              LDR      r0,|L8.1032|
00000e  6841              LDR      r1,[r0,#4]  ; Run_Control
000010  ee001a10          VMOV     s0,r1
000014  eeb80a40          VCVT.F32.U32 s0,s0
000018  eddf0afc          VLDR     s1,|L8.1036|
00001c  eec09a20          VDIV.F32 s19,s0,s1
;;;91       float dis_output_c = (float)SET_Current/1000;
000020  6880              LDR      r0,[r0,#8]  ; Run_Control
000022  ee000a10          VMOV     s0,r0
000026  eeb80a40          VCVT.F32.U32 s0,s0
00002a  eddf0af9          VLDR     s1,|L8.1040|
00002e  ee809a20          VDIV.F32 s18,s0,s1
;;;92       static u8 cdelay;
;;;93     
;;;94       
;;;95       // USER START (Optionally insert additional variables)
;;;96       // USER END
;;;97     
;;;98       switch (pMsg->MsgId) {
000032  6820              LDR      r0,[r4,#0]
;;;99     
;;;100    	case WM_PAINT://无效化重绘
;;;101    		GUI_SetColor(GUI_WHITE);//设置画笔颜色
;;;102            GUI_FillRect(0,25,480,26);//画一条实线
;;;103            GUI_SetColor(GUI_ORANGE);
;;;104            GUI_SetFont(&GUI_Fontsymbol);
;;;105            GUI_UC_SetEncodeUTF8();
;;;106            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;107            GUI_DispStringAt("Jinko", 5, 1);//SET
;;;108            GUI_SetColor(GUI_WHITE);
;;;109            GUI_SetFont(&GUI_FontHZ20S);
;;;110            GUI_UC_SetEncodeUTF8();
;;;111            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明       
;;;112            GUI_DispStringAt("测量显示", 130, 3);//SET
;;;113            GUI_SetColor(GUI_WHITE);//设置前景色为白色
;;;114    //      GUI_SetFont(&GUI_FontD24x32);//
;;;115    // 		GUI_GotoXY(95,72);//设置显示坐标
;;;116    // 		GUI_DispFloatFix(DISS_POW_Voltage,5,2);//显示电压值
;;;117    // 		GUI_GotoXY(95,140);//设置显示坐标
;;;118    // 		GUI_DispFloatFix(DISS_POW_Current,5,2);//显示电流值
;;;119            GUI_SetFont(&GUI_Font24_1);
;;;120            GUI_DispStringAt("V",435,75);
;;;121            GUI_DispStringAt("A",435,100);
;;;122            GUI_DispStringAt("A",435,150);
;;;123            
;;;124            GUI_SetFont(&GUI_FontEN40);
;;;125            GUI_SetColor(GUI_LIGHTGRAY);
000034  f8df83dc          LDR      r8,|L8.1044|
000038  f06f497f          MVN      r9,#0xff000000        ;101
;;;126            GUI_DispStringAt("C:", 28, 190);
;;;127            GUI_SetColor(GUI_LIGHTGRAY);
;;;128            GUI_DispStringAt("m", 217, 196);
;;;129            GUI_DispStringAt("AH", 238, 187);
;;;130            
;;;131            GUI_SetColor(GUI_GREEN);
00003c  f44f467f          MOV      r6,#0xff00
000040  280f              CMP      r0,#0xf               ;98
000042  d015              BEQ      |L8.112|
;;;132            GUI_SetFont(&GUI_Fontunit);
;;;133            GUI_DispStringAt("°",342, 2);
;;;134            GUI_SetFont(&GUI_Font24_1);
;;;135            GUI_DispStringAt("C",350, 2);
;;;136    //        DrawLock();
;;;137    //        GUI_SetColor(GUI_WHITE);
;;;138    //        GUI_SetFont(&GUI_Fontset_font);
;;;139    //        GUI_DispStringAt("过充电压",290, 150);
;;;140    		break;
;;;141        
;;;142    	case WM_TIMER://定时模块消息
;;;143    	if(WM_GetTimerId(pMsg->Data.v) == ID_TimerTime2)
;;;144    	{
;;;145    //        lockstat2 = lockstat1;
;;;146    //        lockstat1 = lock;
;;;147    //        if(lockstat1 != lockstat2)
;;;148    //        {
;;;149    //            WM_InvalidateWindow(hWinWind);
;;;150    //        }
;;;151    //         if(clear_flag2 == 1)
;;;152    //         {
;;;153    		if(lock == 1)
;;;154    		{
;;;155    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_161);
;;;156    			TEXT_SetText(hItem,"锁");
;;;157    		}else{
;;;158    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_161);
;;;159    			TEXT_SetText(hItem,"");
;;;160    		}
;;;161                if(DISS_POW_Voltage < 0.1)
;;;162                {
;;;163                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;164                    sprintf(buf,"%.3f",0.00);       
;;;165                    TEXT_SetText(hItem,buf);
;;;166                }else{
;;;167                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;168                    sprintf(buf,"%.3f",DISS_Voltage);       
;;;169                    TEXT_SetText(hItem,buf);
;;;170                }
;;;171    //         }else{
;;;172    //             hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;173    //             sprintf(buf,"%.2f",DISS_POW_Voltage);       
;;;174    //             TEXT_SetText(hItem,buf);
;;;175    //         }
;;;176            
;;;177            
;;;178           
;;;179            
;;;180    //        test_pow();
;;;181            if(pow_sw == pow_on)
;;;182            {
;;;183                battery_c = (int)bc_raw;
;;;184                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_115);
;;;185                sprintf(buf,"%05d",battery_c);      
;;;186                TEXT_SetText(hItem,buf);
;;;187                 hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_87);
;;;188                sprintf(buf,"%.3f",DISS_POW_Current);        
;;;189                TEXT_SetText(hItem,buf);
;;;190                if(status_flash == 0){
;;;191                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_88);
;;;192                    TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;193                    TEXT_SetFont(hItem,&GUI_FontHZ16);//设定文本字体
;;;194                    GUI_UC_SetEncodeUTF8();        
;;;195                    TEXT_SetText(hItem,"充电中");
;;;196                    status_flash = 1;
;;;197                }else{
;;;198                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_88);
;;;199                    TEXT_SetText(hItem,"");
;;;200                    status_flash = 0;
;;;201               }
;;;202               if(pow_cutoffc != 0 && DISS_POW_Current < pow_cutoffc && cdelay > 20)
;;;203               {
;;;204                  GPIO_ResetBits(GPIOC,GPIO_Pin_1);
;;;205                  GPIO_SetBits(GPIOC,GPIO_Pin_13);
;;;206                  mode_sw = 0;
;;;207                  pow_sw = pow_off;
;;;208                  cdelay = 0;
;;;209               }else{
;;;210                   cdelay++;
;;;211               }
;;;212            }else{
;;;213                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_88);
;;;214                TEXT_SetText(hItem,"");
;;;215                
;;;216                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_87);
;;;217                sprintf(buf,"%.3f",0.000);        
;;;218                TEXT_SetText(hItem,buf);
;;;219                
;;;220                cdelay = 0;
;;;221            }
;;;222    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_144);       
;;;223    //        sprintf(buf,"%.3f",overchargev);
;;;224    //        TEXT_SetText(hItem,buf);
;;;225            
;;;226            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_125);       
;;;227            sprintf(buf,"%.1f",temp);
000044  4ff4              LDR      r7,|L8.1048|
000046  f6401a3c          MOV      r10,#0x93c            ;155
00004a  ed9f8bf4          VLDR     d8,|L8.1052|
00004e  4df5              LDR      r5,|L8.1060|
000050  281d              CMP      r0,#0x1d              ;98
000052  d07d              BEQ      |L8.336|
000054  2826              CMP      r0,#0x26              ;98
000056  d07c              BEQ      |L8.338|
000058  f5a07080          SUB      r0,r0,#0x100          ;98
00005c  3813              SUBS     r0,r0,#0x13           ;98
00005e  d07a              BEQ      |L8.342|
;;;228            TEXT_SetText(hItem,buf);
;;;229            
;;;230    		WM_RestartTimer(pMsg->Data.v, 50);//复位定时器数值越大刷新时间越短
;;;231    	}
;;;232    	break;
;;;233      case WM_INIT_DIALOG://重绘外观
;;;234        //
;;;235        // Initialization of 'Window'
;;;236        //
;;;237            hItem = pMsg->hWin;
;;;238            WINDOW_SetBkColor(hItem, GUI_BLACK);
;;;239            WM_CreateTimer(hItem,ID_TimerTime2,1000,0);//创建本窗口定时器
;;;240        //
;;;241        // Initialization of 'Button'
;;;242        //
;;;243    //         hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_0);
;;;244    // 		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;245    // 		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;246    // 		GUI_UC_SetEncodeUTF8();
;;;247    // 		BUTTON_SetText(hItem,"充放电");
;;;248        //
;;;249        // Initialization of 'Button'
;;;250        //
;;;251    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_161);
;;;252    		TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;253    		TEXT_SetFont(hItem,&GUI_FontHZ14);
;;;254    		TEXT_SetText(hItem,"");
;;;255    		
;;;256    		
;;;257            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_1);
;;;258    //		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;259    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;260    		GUI_UC_SetEncodeUTF8();
;;;261            BUTTON_SetText(hItem, "内阻测试");
;;;262        //
;;;263        // Initialization of 'Button'
;;;264        //
;;;265            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_2);
;;;266    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;267    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;268    		GUI_UC_SetEncodeUTF8();
;;;269            BUTTON_SetText(hItem, "程控负载");
;;;270        //
;;;271        // Initialization of 'Button'
;;;272        //
;;;273            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_3);
;;;274            BUTTON_SetPressed(hItem,1);
;;;275    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;276    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;277    		GUI_UC_SetEncodeUTF8();
;;;278            BUTTON_SetText(hItem, "程控电源");
;;;279        //
;;;280        // Initialization of 'Button'
;;;281        //
;;;282            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_4);
;;;283    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;284    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;285    		GUI_UC_SetEncodeUTF8();
;;;286            BUTTON_SetText(hItem, "充放电");
;;;287        //
;;;288        // Initialization of 'Button'
;;;289        //
;;;290            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_5);
;;;291    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;292    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;293    		GUI_UC_SetEncodeUTF8();
;;;294            BUTTON_SetText(hItem, "曲线");
;;;295    		
;;;296    		
;;;297    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_9);
;;;298    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;299            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;300    		GUI_UC_SetEncodeUTF8();
;;;301    		TEXT_SetText(hItem,"V:");
;;;302    		
;;;303    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_10);
;;;304    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;305            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;306    		GUI_UC_SetEncodeUTF8();
;;;307    		TEXT_SetText(hItem,"I:");
;;;308            
;;;309            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_15);
;;;310    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;311            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;312    		GUI_UC_SetEncodeUTF8();
;;;313    		TEXT_SetText(hItem,"V");
;;;314    		
;;;315    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_16);
;;;316    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;317            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;318    		GUI_UC_SetEncodeUTF8();
;;;319    		TEXT_SetText(hItem,"A");
;;;320            
;;;321            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_33);
;;;322    		TEXT_SetTextColor(hItem, GUI_BLACK);//设置字体颜色
;;;323            TEXT_SetBkColor(hItem,0x00BFFFFF);
;;;324            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;325    		GUI_UC_SetEncodeUTF8();
;;;326    		TEXT_SetText(hItem,"输出电压");        
;;;327            
;;;328            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_34);
;;;329    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;330            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;331    		GUI_UC_SetEncodeUTF8();
;;;332    		TEXT_SetText(hItem,"限制电流");
;;;333    		
;;;334    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_159);
;;;335    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;336            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;337    		GUI_UC_SetEncodeUTF8();
;;;338    		TEXT_SetText(hItem,"截止电流");
;;;339            
;;;340            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_41);
;;;341            sprintf(buf,"%.2f",dis_output_v);
;;;342    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;343            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;344    		GUI_UC_SetEncodeUTF8();        
;;;345    		TEXT_SetText(hItem,buf);
;;;346            
;;;347            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_42);
;;;348            sprintf(buf,"%.3f",dis_output_c);
;;;349    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;350            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;351    		GUI_UC_SetEncodeUTF8();        
;;;352    		TEXT_SetText(hItem,buf);
;;;353            
;;;354            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;355            sprintf(buf,"%.3f",0.00);
;;;356    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;357            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;358    		GUI_UC_SetEncodeUTF8();        
;;;359    		TEXT_SetText(hItem,buf);
;;;360            
;;;361            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_87);
;;;362            sprintf(buf,"%.3f",0.000);
;;;363    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;364            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;365    		GUI_UC_SetEncodeUTF8();        
;;;366    		TEXT_SetText(hItem,buf);
;;;367            
;;;368            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_115);
;;;369            sprintf(buf,"%05d",0);
;;;370            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;371            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;372            GUI_UC_SetEncodeUTF8();        
;;;373            TEXT_SetText(hItem,buf);
;;;374            
;;;375            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_125);
;;;376            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;377            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体       
;;;378            sprintf(buf,"%.1f",temp);
;;;379            TEXT_SetText(hItem,buf);
;;;380            
;;;381            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_144);
;;;382            sprintf(buf,"%.3f",pow_cutoffc);
;;;383    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;384            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;385    		GUI_UC_SetEncodeUTF8();     
;;;386    		TEXT_SetText(hItem,buf);
;;;387            
;;;388        // USER START (Optionally insert additional code for further widget initialization)
;;;389        // USER END
;;;390        break;
;;;391      case WM_NOTIFY_PARENT:
;;;392        Id    = WM_GetId(pMsg->hWinSrc);
;;;393        NCode = pMsg->Data.v;
;;;394        switch(Id) {
;;;395        case ID_BUTTON_0: // Notifications sent by 'Button'
;;;396          switch(NCode) {
;;;397          case WM_NOTIFICATION_CLICKED:
;;;398            // USER START (Optionally insert code for reacting on notification message)
;;;399            // USER END
;;;400            break;
;;;401          case WM_NOTIFICATION_RELEASED:
;;;402            // USER START (Optionally insert code for reacting on notification message)
;;;403            // USER END
;;;404            break;
;;;405          // USER START (Optionally insert additional code for further notification handling)
;;;406          // USER END
;;;407          }
;;;408          break;
;;;409        case ID_BUTTON_1: // Notifications sent by 'Button'
;;;410          switch(NCode) {
;;;411          case WM_NOTIFICATION_CLICKED:
;;;412            // USER START (Optionally insert code for reacting on notification message)
;;;413            // USER END
;;;414            break;
;;;415          case WM_NOTIFICATION_RELEASED:
;;;416    				
;;;417            // USER START (Optionally insert code for reacting on notification message)
;;;418            // USER END
;;;419            break;
;;;420          // USER START (Optionally insert additional code for further notification handling)
;;;421          // USER END
;;;422          }
;;;423          break;
;;;424        case ID_BUTTON_2: // Notifications sent by 'Button'
;;;425          switch(NCode) {
;;;426          case WM_NOTIFICATION_CLICKED:
;;;427            // USER START (Optionally insert code for reacting on notification message)
;;;428            // USER END
;;;429            break;
;;;430          case WM_NOTIFICATION_RELEASED:
;;;431            // USER START (Optionally insert code for reacting on notification message)
;;;432            // USER END
;;;433            break;
;;;434          // USER START (Optionally insert additional code for further notification handling)
;;;435          // USER END
;;;436          }
;;;437          break;
;;;438        case ID_BUTTON_3: // Notifications sent by 'Button'
;;;439          switch(NCode) {
;;;440          case WM_NOTIFICATION_CLICKED:
;;;441            // USER START (Optionally insert code for reacting on notification message)
;;;442            // USER END
;;;443            break;
;;;444          case WM_NOTIFICATION_RELEASED:
;;;445            // USER START (Optionally insert code for reacting on notification message)
;;;446            // USER END
;;;447            break;
;;;448          // USER START (Optionally insert additional code for further notification handling)
;;;449          // USER END
;;;450          }
;;;451          break;
;;;452        case ID_BUTTON_4: // Notifications sent by 'Button'
;;;453          switch(NCode) {
;;;454          case WM_NOTIFICATION_CLICKED:
;;;455            // USER START (Optionally insert code for reacting on notification message)
;;;456            // USER END
;;;457            break;
;;;458          case WM_NOTIFICATION_RELEASED:
;;;459            // USER START (Optionally insert code for reacting on notification message)
;;;460            // USER END
;;;461            break;
;;;462          // USER START (Optionally insert additional code for further notification handling)
;;;463          // USER END
;;;464          }
;;;465          break;
;;;466        case ID_BUTTON_5: // Notifications sent by 'Button'
;;;467          switch(NCode) {
;;;468          case WM_NOTIFICATION_CLICKED:
;;;469            // USER START (Optionally insert code for reacting on notification message)
;;;470            // USER END
;;;471            break;
;;;472          case WM_NOTIFICATION_RELEASED:
;;;473            // USER START (Optionally insert code for reacting on notification message)
;;;474            // USER END
;;;475            break;
;;;476          // USER START (Optionally insert additional code for further notification handling)
;;;477          // USER END
;;;478          }
;;;479          break;
;;;480        // USER START (Optionally insert additional code for further Ids)
;;;481        // USER END
;;;482        }
;;;483        break;
;;;484      // USER START (Optionally insert additional message handling)
;;;485      // USER END
;;;486      default:
;;;487        WM_DefaultProc(pMsg);
000060  4620              MOV      r0,r4
000062  f7fffffe          BL       WM_DefaultProc
                  |L8.102|
;;;488        break;
;;;489      }
;;;490    }
000066  b003              ADD      sp,sp,#0xc
000068  ecbd8b04          VPOP     {d8-d9}
00006c  e8bd8ff0          POP      {r4-r11,pc}
                  |L8.112|
000070  4648              MOV      r0,r9                 ;101
000072  f7fffffe          BL       GUI_SetColor
000076  231a              MOVS     r3,#0x1a              ;102
000078  f44f72f0          MOV      r2,#0x1e0             ;102
00007c  2119              MOVS     r1,#0x19              ;102
00007e  2000              MOVS     r0,#0                 ;102
000080  f7fffffe          BL       GUI_FillRect
000084  f24a50ff          MOV      r0,#0xa5ff            ;103
000088  f7fffffe          BL       GUI_SetColor
00008c  48e6              LDR      r0,|L8.1064|
00008e  f7fffffe          BL       GUI_SetFont
000092  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000096  2002              MOVS     r0,#2                 ;106
000098  f7fffffe          BL       GUI_SetTextMode
00009c  2201              MOVS     r2,#1                 ;107
00009e  2105              MOVS     r1,#5                 ;107
0000a0  a0e2              ADR      r0,|L8.1068|
0000a2  f7fffffe          BL       GUI_DispStringAt
0000a6  4648              MOV      r0,r9                 ;108
0000a8  f7fffffe          BL       GUI_SetColor
0000ac  48e1              LDR      r0,|L8.1076|
0000ae  f7fffffe          BL       GUI_SetFont
0000b2  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0000b6  2002              MOVS     r0,#2                 ;111
0000b8  f7fffffe          BL       GUI_SetTextMode
0000bc  2203              MOVS     r2,#3                 ;112
0000be  2182              MOVS     r1,#0x82              ;112
0000c0  a0dd              ADR      r0,|L8.1080|
0000c2  f7fffffe          BL       GUI_DispStringAt
0000c6  4648              MOV      r0,r9                 ;113
0000c8  f7fffffe          BL       GUI_SetColor
0000cc  48de              LDR      r0,|L8.1096|
0000ce  f7fffffe          BL       GUI_SetFont
0000d2  f24014b3          MOV      r4,#0x1b3             ;120
0000d6  224b              MOVS     r2,#0x4b              ;120
0000d8  4621              MOV      r1,r4                 ;120
0000da  a0dc              ADR      r0,|L8.1100|
0000dc  f7fffffe          BL       GUI_DispStringAt
0000e0  2264              MOVS     r2,#0x64              ;121
0000e2  4621              MOV      r1,r4                 ;121
0000e4  a0da              ADR      r0,|L8.1104|
0000e6  f7fffffe          BL       GUI_DispStringAt
0000ea  2296              MOVS     r2,#0x96              ;122
0000ec  4621              MOV      r1,r4                 ;122
0000ee  a0d8              ADR      r0,|L8.1104|
0000f0  f7fffffe          BL       GUI_DispStringAt
0000f4  48d7              LDR      r0,|L8.1108|
0000f6  f7fffffe          BL       GUI_SetFont
0000fa  4640              MOV      r0,r8                 ;125
0000fc  f7fffffe          BL       GUI_SetColor
000100  22be              MOVS     r2,#0xbe              ;126
000102  211c              MOVS     r1,#0x1c              ;126
000104  a0d4              ADR      r0,|L8.1112|
000106  f7fffffe          BL       GUI_DispStringAt
00010a  4640              MOV      r0,r8                 ;127
00010c  f7fffffe          BL       GUI_SetColor
000110  22c4              MOVS     r2,#0xc4              ;128
000112  21d9              MOVS     r1,#0xd9              ;128
000114  a0d1              ADR      r0,|L8.1116|
000116  f7fffffe          BL       GUI_DispStringAt
00011a  22bb              MOVS     r2,#0xbb              ;129
00011c  21ee              MOVS     r1,#0xee              ;129
00011e  a0d0              ADR      r0,|L8.1120|
000120  f7fffffe          BL       GUI_DispStringAt
000124  4630              MOV      r0,r6                 ;131
000126  f7fffffe          BL       GUI_SetColor
00012a  48ce              LDR      r0,|L8.1124|
00012c  f7fffffe          BL       GUI_SetFont
000130  2202              MOVS     r2,#2                 ;133
000132  f44f71ab          MOV      r1,#0x156             ;133
000136  a0cc              ADR      r0,|L8.1128|
000138  f7fffffe          BL       GUI_DispStringAt
00013c  48c2              LDR      r0,|L8.1096|
00013e  f7fffffe          BL       GUI_SetFont
000142  2202              MOVS     r2,#2                 ;135
000144  f44f71af          MOV      r1,#0x15e             ;135
000148  a0c8              ADR      r0,|L8.1132|
00014a  f7fffffe          BL       GUI_DispStringAt
00014e  e78a              B        |L8.102|
                  |L8.336|
000150  e0f5              B        |L8.830|
                  |L8.338|
000152  e346              B        |L8.2018|
000154  e7ff              B        |L8.342|
                  |L8.342|
000156  68e0              LDR      r0,[r4,#0xc]          ;143
000158  f7fffffe          BL       WM_GetTimerId
00015c  2803              CMP      r0,#3                 ;143
00015e  d182              BNE      |L8.102|
000160  48c3              LDR      r0,|L8.1136|
000162  7800              LDRB     r0,[r0,#0]            ;153  ; lock
000164  2801              CMP      r0,#1                 ;153
000166  d01c              BEQ      |L8.418|
000168  4651              MOV      r1,r10                ;158
00016a  6860              LDR      r0,[r4,#4]            ;158
00016c  f7fffffe          BL       WM_GetDialogItem
000170  a1b4              ADR      r1,|L8.1092|
000172  f7fffffe          BL       TEXT_SetText
                  |L8.374|
000176  48bf              LDR      r0,|L8.1140|
000178  49bf              LDR      r1,|L8.1144|
00017a  6800              LDR      r0,[r0,#0]            ;161  ; DISS_POW_Voltage
00017c  4288              CMP      r0,r1                 ;161
00017e  da18              BGE      |L8.434|
000180  f6400193          MOV      r1,#0x893             ;163
000184  6860              LDR      r0,[r4,#4]            ;163
000186  f7fffffe          BL       WM_GetDialogItem
00018a  4606              MOV      r6,r0                 ;163
00018c  ec532b18          VMOV     r2,r3,d8              ;164
000190  a1ba              ADR      r1,|L8.1148|
000192  a801              ADD      r0,sp,#4              ;164
000194  f7fffffe          BL       __2sprintf
000198  a901              ADD      r1,sp,#4              ;165
00019a  4630              MOV      r0,r6                 ;165
00019c  f7fffffe          BL       TEXT_SetText
0001a0  e01d              B        |L8.478|
                  |L8.418|
0001a2  4651              MOV      r1,r10                ;155
0001a4  6860              LDR      r0,[r4,#4]            ;155
0001a6  f7fffffe          BL       WM_GetDialogItem
0001aa  a1b6              ADR      r1,|L8.1156|
0001ac  f7fffffe          BL       TEXT_SetText
0001b0  e7e1              B        |L8.374|
                  |L8.434|
0001b2  f6400193          MOV      r1,#0x893             ;167
0001b6  6860              LDR      r0,[r4,#4]            ;167
0001b8  f7fffffe          BL       WM_GetDialogItem
0001bc  4606              MOV      r6,r0                 ;167
0001be  48b2              LDR      r0,|L8.1160|
0001c0  6800              LDR      r0,[r0,#0]            ;168  ; DISS_Voltage
0001c2  f7fffffe          BL       __aeabi_f2d
0001c6  ec410b10          VMOV     d0,r0,r1              ;168
0001ca  a1ac              ADR      r1,|L8.1148|
0001cc  ec532b10          VMOV     r2,r3,d0              ;168
0001d0  a801              ADD      r0,sp,#4              ;168
0001d2  f7fffffe          BL       __2sprintf
0001d6  a901              ADD      r1,sp,#4              ;169
0001d8  4630              MOV      r0,r6                 ;169
0001da  f7fffffe          BL       TEXT_SetText
                  |L8.478|
0001de  7828              LDRB     r0,[r5,#0]            ;181  ; pow_sw
0001e0  2600              MOVS     r6,#0                 ;191
0001e2  f6400a95          MOV      r10,#0x895            ;191
0001e6  2801              CMP      r0,#1                 ;181
0001e8  d031              BEQ      |L8.590|
0001ea  4651              MOV      r1,r10                ;213
0001ec  6860              LDR      r0,[r4,#4]            ;213
0001ee  f7fffffe          BL       WM_GetDialogItem
0001f2  a194              ADR      r1,|L8.1092|
0001f4  f7fffffe          BL       TEXT_SetText
0001f8  f6400194          MOV      r1,#0x894             ;216
0001fc  6860              LDR      r0,[r4,#4]            ;216
0001fe  f7fffffe          BL       WM_GetDialogItem
000202  4680              MOV      r8,r0                 ;216
000204  ec532b18          VMOV     r2,r3,d8              ;217
000208  a19c              ADR      r1,|L8.1148|
00020a  a801              ADD      r0,sp,#4              ;217
00020c  f7fffffe          BL       __2sprintf
000210  a901              ADD      r1,sp,#4              ;218
000212  4640              MOV      r0,r8                 ;218
000214  f7fffffe          BL       TEXT_SetText
000218  70ae              STRB     r6,[r5,#2]            ;220
                  |L8.538|
00021a  f640110c          MOV      r1,#0x90c             ;226
00021e  6860              LDR      r0,[r4,#4]            ;226
000220  f7fffffe          BL       WM_GetDialogItem
000224  4605              MOV      r5,r0                 ;226
000226  6838              LDR      r0,[r7,#0]            ;227  ; temp
000228  f7fffffe          BL       __aeabi_f2d
00022c  ec410b10          VMOV     d0,r0,r1              ;227
000230  a196              ADR      r1,|L8.1164|
000232  ec532b10          VMOV     r2,r3,d0              ;227
000236  a801              ADD      r0,sp,#4              ;227
000238  f7fffffe          BL       __2sprintf
00023c  a901              ADD      r1,sp,#4              ;228
00023e  4628              MOV      r0,r5                 ;228
000240  f7fffffe          BL       TEXT_SetText
000244  2132              MOVS     r1,#0x32              ;230
000246  68e0              LDR      r0,[r4,#0xc]          ;230
000248  f7fffffe          BL       WM_RestartTimer
00024c  e70b              B        |L8.102|
                  |L8.590|
00024e  4891              LDR      r0,|L8.1172|
000250  f8df8244          LDR      r8,|L8.1176|
000254  ed900a00          VLDR     s0,[r0,#0]            ;183
000258  eebd0ac0          VCVT.S32.F32 s0,s0                 ;183
00025c  ee100a10          VMOV     r0,s0                 ;183
000260  f8a80000          STRH     r0,[r8,#0]            ;183
000264  f640110b          MOV      r1,#0x90b             ;184
000268  6860              LDR      r0,[r4,#4]            ;184
00026a  f7fffffe          BL       WM_GetDialogItem
00026e  4681              MOV      r9,r0                 ;184
000270  f8b82000          LDRH     r2,[r8,#0]            ;185  ; battery_c
000274  a189              ADR      r1,|L8.1180|
000276  a801              ADD      r0,sp,#4              ;185
000278  f7fffffe          BL       __2sprintf
00027c  a901              ADD      r1,sp,#4              ;186
00027e  4648              MOV      r0,r9                 ;186
000280  f7fffffe          BL       TEXT_SetText
000284  f6400194          MOV      r1,#0x894             ;187
000288  6860              LDR      r0,[r4,#4]            ;187
00028a  f7fffffe          BL       WM_GetDialogItem
00028e  4681              MOV      r9,r0                 ;187
000290  f8df8210          LDR      r8,|L8.1188|
000294  f8d80000          LDR      r0,[r8,#0]            ;188  ; DISS_POW_Current
000298  f7fffffe          BL       __aeabi_f2d
00029c  ec410b10          VMOV     d0,r0,r1              ;188
0002a0  a176              ADR      r1,|L8.1148|
0002a2  ec532b10          VMOV     r2,r3,d0              ;188
0002a6  a801              ADD      r0,sp,#4              ;188
0002a8  f7fffffe          BL       __2sprintf
0002ac  a901              ADD      r1,sp,#4              ;189
0002ae  4648              MOV      r0,r9                 ;189
0002b0  f7fffffe          BL       TEXT_SetText
0002b4  7868              LDRB     r0,[r5,#1]            ;190  ; status_flash
0002b6  b340              CBZ      r0,|L8.778|
0002b8  4651              MOV      r1,r10                ;198
0002ba  6860              LDR      r0,[r4,#4]            ;198
0002bc  f7fffffe          BL       WM_GetDialogItem
0002c0  a160              ADR      r1,|L8.1092|
0002c2  f7fffffe          BL       TEXT_SetText
0002c6  706e              STRB     r6,[r5,#1]            ;200
                  |L8.712|
0002c8  ed950a02          VLDR     s0,[r5,#8]            ;202
0002cc  eeb50ac0          VCMPE.F32 s0,#0.0               ;202
0002d0  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;202
0002d4  d02f              BEQ      |L8.822|
0002d6  edd80a00          VLDR     s1,[r8,#0]            ;202
0002da  eef40ac0          VCMPE.F32 s1,s0                 ;202
0002de  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;202
0002e2  d228              BCS      |L8.822|
0002e4  78a8              LDRB     r0,[r5,#2]            ;202  ; cdelay
0002e6  2814              CMP      r0,#0x14              ;202
0002e8  d925              BLS      |L8.822|
0002ea  f8df81bc          LDR      r8,|L8.1192|
0002ee  2102              MOVS     r1,#2                 ;204
0002f0  4640              MOV      r0,r8                 ;204
0002f2  f7fffffe          BL       GPIO_ResetBits
0002f6  f44f5100          MOV      r1,#0x2000            ;205
0002fa  4640              MOV      r0,r8                 ;205
0002fc  f7fffffe          BL       GPIO_SetBits
000300  486a              LDR      r0,|L8.1196|
000302  7006              STRB     r6,[r0,#0]            ;206
000304  702e              STRB     r6,[r5,#0]            ;207
000306  70ae              STRB     r6,[r5,#2]            ;208
000308  e787              B        |L8.538|
                  |L8.778|
00030a  4651              MOV      r1,r10                ;191
00030c  6860              LDR      r0,[r4,#4]            ;191
00030e  f7fffffe          BL       WM_GetDialogItem
000312  4681              MOV      r9,r0                 ;191
000314  21ff              MOVS     r1,#0xff              ;192
000316  4648              MOV      r0,r9                 ;192
000318  f7fffffe          BL       TEXT_SetTextColor
00031c  4964              LDR      r1,|L8.1200|
00031e  4648              MOV      r0,r9                 ;193
000320  f7fffffe          BL       TEXT_SetFont
000324  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000328  a162              ADR      r1,|L8.1204|
00032a  4648              MOV      r0,r9                 ;195
00032c  f7fffffe          BL       TEXT_SetText
000330  2001              MOVS     r0,#1                 ;196
000332  7068              STRB     r0,[r5,#1]            ;196
000334  e7c8              B        |L8.712|
                  |L8.822|
000336  78a8              LDRB     r0,[r5,#2]            ;210  ; cdelay
000338  1c40              ADDS     r0,r0,#1              ;210
00033a  70a8              STRB     r0,[r5,#2]            ;210
00033c  e76d              B        |L8.538|
                  |L8.830|
00033e  f8d4b004          LDR      r11,[r4,#4]           ;237
000342  2100              MOVS     r1,#0                 ;238
000344  4658              MOV      r0,r11                ;238
000346  f7fffffe          BL       WINDOW_SetBkColor
00034a  2300              MOVS     r3,#0                 ;239
00034c  f44f727a          MOV      r2,#0x3e8             ;239
000350  2103              MOVS     r1,#3                 ;239
000352  4658              MOV      r0,r11                ;239
000354  f7fffffe          BL       WM_CreateTimer
000358  4651              MOV      r1,r10                ;251
00035a  6860              LDR      r0,[r4,#4]            ;251
00035c  f7fffffe          BL       WM_GetDialogItem
000360  4682              MOV      r10,r0                ;251
000362  21ff              MOVS     r1,#0xff              ;252
000364  4650              MOV      r0,r10                ;252
000366  f7fffffe          BL       TEXT_SetTextColor
00036a  4955              LDR      r1,|L8.1216|
00036c  4650              MOV      r0,r10                ;253
00036e  f7fffffe          BL       TEXT_SetFont
000372  a134              ADR      r1,|L8.1092|
000374  4650              MOV      r0,r10                ;254
000376  f7fffffe          BL       TEXT_SetText
00037a  f6400102          MOV      r1,#0x802             ;257
00037e  6860              LDR      r0,[r4,#4]            ;257
000380  f7fffffe          BL       WM_GetDialogItem
000384  4682              MOV      r10,r0                ;257
000386  494a              LDR      r1,|L8.1200|
000388  4650              MOV      r0,r10                ;259
00038a  f7fffffe          BL       BUTTON_SetFont
00038e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000392  a14c              ADR      r1,|L8.1220|
000394  4650              MOV      r0,r10                ;261
000396  f7fffffe          BL       BUTTON_SetText
00039a  f6400103          MOV      r1,#0x803             ;265
00039e  6860              LDR      r0,[r4,#4]            ;265
0003a0  f7fffffe          BL       WM_GetDialogItem
0003a4  4682              MOV      r10,r0                ;265
0003a6  4942              LDR      r1,|L8.1200|
0003a8  4650              MOV      r0,r10                ;267
0003aa  f7fffffe          BL       BUTTON_SetFont
0003ae  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0003b2  a148              ADR      r1,|L8.1236|
0003b4  4650              MOV      r0,r10                ;269
0003b6  f7fffffe          BL       BUTTON_SetText
0003ba  f6400104          MOV      r1,#0x804             ;273
0003be  6860              LDR      r0,[r4,#4]            ;273
0003c0  f7fffffe          BL       WM_GetDialogItem
0003c4  4682              MOV      r10,r0                ;273
0003c6  2101              MOVS     r1,#1                 ;274
0003c8  4650              MOV      r0,r10                ;274
0003ca  f7fffffe          BL       BUTTON_SetPressed
0003ce  4938              LDR      r1,|L8.1200|
0003d0  4650              MOV      r0,r10                ;276
0003d2  f7fffffe          BL       BUTTON_SetFont
0003d6  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0003da  a142              ADR      r1,|L8.1252|
0003dc  4650              MOV      r0,r10                ;278
0003de  f7fffffe          BL       BUTTON_SetText
0003e2  f6400105          MOV      r1,#0x805             ;282
0003e6  6860              LDR      r0,[r4,#4]            ;282
0003e8  f7fffffe          BL       WM_GetDialogItem
0003ec  4682              MOV      r10,r0                ;282
0003ee  4930              LDR      r1,|L8.1200|
0003f0  4650              MOV      r0,r10                ;284
0003f2  f7fffffe          BL       BUTTON_SetFont
0003f6  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0003fa  a13e              ADR      r1,|L8.1268|
0003fc  4650              MOV      r0,r10                ;286
0003fe  f7fffffe          BL       BUTTON_SetText
000402  f6400106          MOV      r1,#0x806             ;290
000406  e07b              B        |L8.1280|
                  |L8.1032|
                          DCD      Run_Control
                  |L8.1036|
00040c  42c80000          DCFS     0x42c80000 ; 100
                  |L8.1040|
000410  447a0000          DCFS     0x447a0000 ; 1000
                  |L8.1044|
                          DCD      0x00d3d3d3
                  |L8.1048|
                          DCD      temp
                  |L8.1052|
00041c  00000000          DCFD     0x0000000000000000 ; 0
000420  00000000
                  |L8.1060|
                          DCD      ||.data||
                  |L8.1064|
                          DCD      GUI_Fontsymbol
                  |L8.1068|
00042c  4a696e6b          DCB      "Jinko",0
000430  6f00    
000432  00                DCB      0
000433  00                DCB      0
                  |L8.1076|
                          DCD      GUI_FontHZ20S
                  |L8.1080|
000438  e6b58be9          DCB      230,181,139,233,135,143,230,152,190,231,164,186
00043c  878fe698
000440  bee7a4ba
                  |L8.1092|
000444  00                DCB      0
000445  00                DCB      0
000446  00                DCB      0
000447  00                DCB      0
                  |L8.1096|
                          DCD      GUI_Font24_1
                  |L8.1100|
00044c  5600              DCB      "V",0
00044e  00                DCB      0
00044f  00                DCB      0
                  |L8.1104|
000450  4100              DCB      "A",0
000452  00                DCB      0
000453  00                DCB      0
                  |L8.1108|
                          DCD      GUI_FontEN40
                  |L8.1112|
000458  433a00            DCB      "C:",0
00045b  00                DCB      0
                  |L8.1116|
00045c  6d00              DCB      "m",0
00045e  00                DCB      0
00045f  00                DCB      0
                  |L8.1120|
000460  414800            DCB      "AH",0
000463  00                DCB      0
                  |L8.1124|
                          DCD      GUI_Fontunit
                  |L8.1128|
000468  c2b000            DCB      194,176,0
00046b  00                DCB      0
                  |L8.1132|
00046c  4300              DCB      "C",0
00046e  00                DCB      0
00046f  00                DCB      0
                  |L8.1136|
                          DCD      lock
                  |L8.1140|
                          DCD      DISS_POW_Voltage
                  |L8.1144|
                          DCD      0x3dcccccd
                  |L8.1148|
00047c  252e3366          DCB      "%.3f",0
000480  00      
000481  00                DCB      0
000482  00                DCB      0
000483  00                DCB      0
                  |L8.1156|
000484  e9948100          DCB      233,148,129,0
                  |L8.1160|
                          DCD      DISS_Voltage
                  |L8.1164|
00048c  252e3166          DCB      "%.1f",0
000490  00      
000491  00                DCB      0
000492  00                DCB      0
000493  00                DCB      0
                  |L8.1172|
                          DCD      bc_raw
                  |L8.1176|
                          DCD      battery_c
                  |L8.1180|
00049c  25303564          DCB      "%05d",0
0004a0  00      
0004a1  00                DCB      0
0004a2  00                DCB      0
0004a3  00                DCB      0
                  |L8.1188|
                          DCD      DISS_POW_Current
                  |L8.1192|
                          DCD      0x40020800
                  |L8.1196|
                          DCD      mode_sw
                  |L8.1200|
                          DCD      GUI_FontHZ16
                  |L8.1204|
0004b4  e58585e7          DCB      229,133,133,231,148,181,228,184,173,0
0004b8  94b5e4b8
0004bc  ad00    
0004be  00                DCB      0
0004bf  00                DCB      0
                  |L8.1216|
                          DCD      GUI_FontHZ14
                  |L8.1220|
0004c4  e58685e9          DCB      229,134,133,233,152,187,230,181,139,232,175,149,0
0004c8  98bbe6b5
0004cc  8be8af95
0004d0  00      
0004d1  00                DCB      0
0004d2  00                DCB      0
0004d3  00                DCB      0
                  |L8.1236|
0004d4  e7a88be6          DCB      231,168,139,230,142,167,232,180,159,232,189,189,0
0004d8  8ea7e8b4
0004dc  9fe8bdbd
0004e0  00      
0004e1  00                DCB      0
0004e2  00                DCB      0
0004e3  00                DCB      0
                  |L8.1252|
0004e4  e7a88be6          DCB      231,168,139,230,142,167,231,148,181,230,186,144,0
0004e8  8ea7e794
0004ec  b5e6ba90
0004f0  00      
0004f1  00                DCB      0
0004f2  00                DCB      0
0004f3  00                DCB      0
                  |L8.1268|
0004f4  e58585e6          DCB      229,133,133,230,148,190,231,148,181,0
0004f8  94bee794
0004fc  b500    
0004fe  00                DCB      0
0004ff  00                DCB      0
                  |L8.1280|
000500  6860              LDR      r0,[r4,#4]            ;290
000502  f7fffffe          BL       WM_GetDialogItem
000506  4682              MOV      r10,r0                ;290
000508  49b8              LDR      r1,|L8.2028|
00050a  4650              MOV      r0,r10                ;292
00050c  f7fffffe          BL       BUTTON_SetFont
000510  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000514  a1b6              ADR      r1,|L8.2032|
000516  4650              MOV      r0,r10                ;294
000518  f7fffffe          BL       BUTTON_SetText
00051c  f6400107          MOV      r1,#0x807             ;297
000520  6860              LDR      r0,[r4,#4]            ;297
000522  f7fffffe          BL       WM_GetDialogItem
000526  4682              MOV      r10,r0                ;297
000528  4641              MOV      r1,r8                 ;298
00052a  4650              MOV      r0,r10                ;298
00052c  f7fffffe          BL       TEXT_SetTextColor
000530  49b1              LDR      r1,|L8.2040|
000532  4650              MOV      r0,r10                ;299
000534  f7fffffe          BL       TEXT_SetFont
000538  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00053c  a1af              ADR      r1,|L8.2044|
00053e  4650              MOV      r0,r10                ;301
000540  f7fffffe          BL       TEXT_SetText
000544  f6400108          MOV      r1,#0x808             ;303
000548  6860              LDR      r0,[r4,#4]            ;303
00054a  f7fffffe          BL       WM_GetDialogItem
00054e  4682              MOV      r10,r0                ;303
000550  4641              MOV      r1,r8                 ;304
000552  4650              MOV      r0,r10                ;304
000554  f7fffffe          BL       TEXT_SetTextColor
000558  49a7              LDR      r1,|L8.2040|
00055a  4650              MOV      r0,r10                ;305
00055c  f7fffffe          BL       TEXT_SetFont
000560  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000564  a1a6              ADR      r1,|L8.2048|
000566  4650              MOV      r0,r10                ;307
000568  f7fffffe          BL       TEXT_SetText
00056c  f44f6102          MOV      r1,#0x820             ;309
000570  6860              LDR      r0,[r4,#4]            ;309
000572  f7fffffe          BL       WM_GetDialogItem
000576  4682              MOV      r10,r0                ;309
000578  4641              MOV      r1,r8                 ;310
00057a  4650              MOV      r0,r10                ;310
00057c  f7fffffe          BL       TEXT_SetTextColor
000580  499d              LDR      r1,|L8.2040|
000582  4650              MOV      r0,r10                ;311
000584  f7fffffe          BL       TEXT_SetFont
000588  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00058c  f2af1144          ADR      r1,|L8.1100|
000590  4650              MOV      r0,r10                ;313
000592  f7fffffe          BL       TEXT_SetText
000596  f6400121          MOV      r1,#0x821             ;315
00059a  6860              LDR      r0,[r4,#4]            ;315
00059c  f7fffffe          BL       WM_GetDialogItem
0005a0  4682              MOV      r10,r0                ;315
0005a2  4641              MOV      r1,r8                 ;316
0005a4  4650              MOV      r0,r10                ;316
0005a6  f7fffffe          BL       TEXT_SetTextColor
0005aa  4993              LDR      r1,|L8.2040|
0005ac  4650              MOV      r0,r10                ;317
0005ae  f7fffffe          BL       TEXT_SetFont
0005b2  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005b6  f2af1168          ADR      r1,|L8.1104|
0005ba  4650              MOV      r0,r10                ;319
0005bc  f7fffffe          BL       TEXT_SetText
0005c0  f640013d          MOV      r1,#0x83d             ;321
0005c4  6860              LDR      r0,[r4,#4]            ;321
0005c6  f7fffffe          BL       WM_GetDialogItem
0005ca  4680              MOV      r8,r0                 ;321
0005cc  2100              MOVS     r1,#0                 ;322
0005ce  4640              MOV      r0,r8                 ;322
0005d0  f7fffffe          BL       TEXT_SetTextColor
0005d4  498b              LDR      r1,|L8.2052|
0005d6  4640              MOV      r0,r8                 ;323
0005d8  f7fffffe          BL       TEXT_SetBkColor
0005dc  498a              LDR      r1,|L8.2056|
0005de  4640              MOV      r0,r8                 ;324
0005e0  f7fffffe          BL       TEXT_SetFont
0005e4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005e8  a188              ADR      r1,|L8.2060|
0005ea  4640              MOV      r0,r8                 ;326
0005ec  f7fffffe          BL       TEXT_SetText
0005f0  f640013e          MOV      r1,#0x83e             ;328
0005f4  6860              LDR      r0,[r4,#4]            ;328
0005f6  f7fffffe          BL       WM_GetDialogItem
0005fa  4682              MOV      r10,r0                ;328
0005fc  46c8              MOV      r8,r9                 ;329
0005fe  4641              MOV      r1,r8                 ;329
000600  4650              MOV      r0,r10                ;329
000602  f7fffffe          BL       TEXT_SetTextColor
000606  4980              LDR      r1,|L8.2056|
000608  4650              MOV      r0,r10                ;330
00060a  f7fffffe          BL       TEXT_SetFont
00060e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000612  a182              ADR      r1,|L8.2076|
000614  4650              MOV      r0,r10                ;332
000616  f7fffffe          BL       TEXT_SetText
00061a  f640113a          MOV      r1,#0x93a             ;334
00061e  6860              LDR      r0,[r4,#4]            ;334
000620  f7fffffe          BL       WM_GetDialogItem
000624  4681              MOV      r9,r0                 ;334
000626  4641              MOV      r1,r8                 ;335
000628  4648              MOV      r0,r9                 ;335
00062a  f7fffffe          BL       TEXT_SetTextColor
00062e  4976              LDR      r1,|L8.2056|
000630  4648              MOV      r0,r9                 ;336
000632  f7fffffe          BL       TEXT_SetFont
000636  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00063a  a17c              ADR      r1,|L8.2092|
00063c  4648              MOV      r0,r9                 ;338
00063e  f7fffffe          BL       TEXT_SetText
000642  f6400166          MOV      r1,#0x866             ;340
000646  6860              LDR      r0,[r4,#4]            ;340
000648  f7fffffe          BL       WM_GetDialogItem
00064c  4681              MOV      r9,r0                 ;340
00064e  ee190a90          VMOV     r0,s19                ;341
000652  f7fffffe          BL       __aeabi_f2d
000656  ec410b10          VMOV     d0,r0,r1              ;341
00065a  a178              ADR      r1,|L8.2108|
00065c  ec532b10          VMOV     r2,r3,d0              ;341
000660  a801              ADD      r0,sp,#4              ;341
000662  f7fffffe          BL       __2sprintf
000666  4641              MOV      r1,r8                 ;342
000668  4648              MOV      r0,r9                 ;342
00066a  f7fffffe          BL       TEXT_SetTextColor
00066e  4975              LDR      r1,|L8.2116|
000670  4648              MOV      r0,r9                 ;343
000672  f7fffffe          BL       TEXT_SetFont
000676  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00067a  a901              ADD      r1,sp,#4              ;345
00067c  4648              MOV      r0,r9                 ;345
00067e  f7fffffe          BL       TEXT_SetText
000682  f6400167          MOV      r1,#0x867             ;347
000686  6860              LDR      r0,[r4,#4]            ;347
000688  f7fffffe          BL       WM_GetDialogItem
00068c  4681              MOV      r9,r0                 ;347
00068e  ee190a10          VMOV     r0,s18                ;348
000692  f7fffffe          BL       __aeabi_f2d
000696  ec410b10          VMOV     d0,r0,r1              ;348
00069a  ec532b10          VMOV     r2,r3,d0              ;348
00069e  f2af2124          ADR      r1,|L8.1148|
0006a2  a801              ADD      r0,sp,#4              ;348
0006a4  f7fffffe          BL       __2sprintf
0006a8  4641              MOV      r1,r8                 ;349
0006aa  4648              MOV      r0,r9                 ;349
0006ac  f7fffffe          BL       TEXT_SetTextColor
0006b0  4964              LDR      r1,|L8.2116|
0006b2  4648              MOV      r0,r9                 ;350
0006b4  f7fffffe          BL       TEXT_SetFont
0006b8  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006bc  a901              ADD      r1,sp,#4              ;352
0006be  4648              MOV      r0,r9                 ;352
0006c0  f7fffffe          BL       TEXT_SetText
0006c4  f6400193          MOV      r1,#0x893             ;354
0006c8  6860              LDR      r0,[r4,#4]            ;354
0006ca  f7fffffe          BL       WM_GetDialogItem
0006ce  4681              MOV      r9,r0                 ;354
0006d0  ec532b18          VMOV     r2,r3,d8              ;355
0006d4  f2af215c          ADR      r1,|L8.1148|
0006d8  a801              ADD      r0,sp,#4              ;355
0006da  f7fffffe          BL       __2sprintf
0006de  4631              MOV      r1,r6                 ;356
0006e0  4648              MOV      r0,r9                 ;356
0006e2  f7fffffe          BL       TEXT_SetTextColor
0006e6  4958              LDR      r1,|L8.2120|
0006e8  4648              MOV      r0,r9                 ;357
0006ea  f7fffffe          BL       TEXT_SetFont
0006ee  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006f2  a901              ADD      r1,sp,#4              ;359
0006f4  4648              MOV      r0,r9                 ;359
0006f6  f7fffffe          BL       TEXT_SetText
0006fa  f6400194          MOV      r1,#0x894             ;361
0006fe  6860              LDR      r0,[r4,#4]            ;361
000700  f7fffffe          BL       WM_GetDialogItem
000704  4681              MOV      r9,r0                 ;361
000706  ec532b18          VMOV     r2,r3,d8              ;362
00070a  f2af2190          ADR      r1,|L8.1148|
00070e  a801              ADD      r0,sp,#4              ;362
000710  f7fffffe          BL       __2sprintf
000714  4631              MOV      r1,r6                 ;363
000716  4648              MOV      r0,r9                 ;363
000718  f7fffffe          BL       TEXT_SetTextColor
00071c  494a              LDR      r1,|L8.2120|
00071e  4648              MOV      r0,r9                 ;364
000720  f7fffffe          BL       TEXT_SetFont
000724  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000728  a901              ADD      r1,sp,#4              ;366
00072a  4648              MOV      r0,r9                 ;366
00072c  f7fffffe          BL       TEXT_SetText
000730  f640110b          MOV      r1,#0x90b             ;368
000734  6860              LDR      r0,[r4,#4]            ;368
000736  f7fffffe          BL       WM_GetDialogItem
00073a  4681              MOV      r9,r0                 ;368
00073c  2200              MOVS     r2,#0                 ;369
00073e  f2af21a4          ADR      r1,|L8.1180|
000742  a801              ADD      r0,sp,#4              ;369
000744  f7fffffe          BL       __2sprintf
000748  4631              MOV      r1,r6                 ;370
00074a  4648              MOV      r0,r9                 ;370
00074c  f7fffffe          BL       TEXT_SetTextColor
000750  493d              LDR      r1,|L8.2120|
000752  4648              MOV      r0,r9                 ;371
000754  f7fffffe          BL       TEXT_SetFont
000758  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00075c  a901              ADD      r1,sp,#4              ;373
00075e  4648              MOV      r0,r9                 ;373
000760  f7fffffe          BL       TEXT_SetText
000764  f640110c          MOV      r1,#0x90c             ;375
000768  6860              LDR      r0,[r4,#4]            ;375
00076a  f7fffffe          BL       WM_GetDialogItem
00076e  4681              MOV      r9,r0                 ;375
000770  4631              MOV      r1,r6                 ;376
000772  4648              MOV      r0,r9                 ;376
000774  f7fffffe          BL       TEXT_SetTextColor
000778  4932              LDR      r1,|L8.2116|
00077a  4648              MOV      r0,r9                 ;377
00077c  f7fffffe          BL       TEXT_SetFont
000780  6838              LDR      r0,[r7,#0]            ;378  ; temp
000782  f7fffffe          BL       __aeabi_f2d
000786  ec410b10          VMOV     d0,r0,r1              ;378
00078a  ec532b10          VMOV     r2,r3,d0              ;378
00078e  f2af3104          ADR      r1,|L8.1164|
000792  a801              ADD      r0,sp,#4              ;378
000794  f7fffffe          BL       __2sprintf
000798  a901              ADD      r1,sp,#4              ;379
00079a  4648              MOV      r0,r9                 ;379
00079c  f7fffffe          BL       TEXT_SetText
0007a0  f640112e          MOV      r1,#0x92e             ;381
0007a4  6860              LDR      r0,[r4,#4]            ;381
0007a6  f7fffffe          BL       WM_GetDialogItem
0007aa  4604              MOV      r4,r0                 ;381
0007ac  68a8              LDR      r0,[r5,#8]            ;382  ; pow_cutoffc
0007ae  f7fffffe          BL       __aeabi_f2d
0007b2  ec410b10          VMOV     d0,r0,r1              ;382
0007b6  ec532b10          VMOV     r2,r3,d0              ;382
0007ba  f2af3140          ADR      r1,|L8.1148|
0007be  a801              ADD      r0,sp,#4              ;382
0007c0  f7fffffe          BL       __2sprintf
0007c4  4641              MOV      r1,r8                 ;383
0007c6  4620              MOV      r0,r4                 ;383
0007c8  f7fffffe          BL       TEXT_SetTextColor
0007cc  491d              LDR      r1,|L8.2116|
0007ce  4620              MOV      r0,r4                 ;384
0007d0  f7fffffe          BL       TEXT_SetFont
0007d4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0007d8  a901              ADD      r1,sp,#4              ;386
0007da  4620              MOV      r0,r4                 ;386
0007dc  f7fffffe          BL       TEXT_SetText
0007e0  e441              B        |L8.102|
                  |L8.2018|
0007e2  68a0              LDR      r0,[r4,#8]            ;392
0007e4  f7fffffe          BL       WM_GetId
0007e8  e43d              B        |L8.102|
;;;491    
                          ENDP

0007ea  0000              DCW      0x0000
                  |L8.2028|
                          DCD      GUI_FontHZ16
                  |L8.2032|
0007f0  e69bb2e7          DCB      230,155,178,231,186,191,0
0007f4  babf00  
0007f7  00                DCB      0
                  |L8.2040|
                          DCD      GUI_FontEN40
                  |L8.2044|
0007fc  563a00            DCB      "V:",0
0007ff  00                DCB      0
                  |L8.2048|
000800  493a00            DCB      "I:",0
000803  00                DCB      0
                  |L8.2052|
                          DCD      0x00bfffff
                  |L8.2056|
                          DCD      GUI_Fontset_font
                  |L8.2060|
00080c  e8be93e5          DCB      232,190,147,229,135,186,231,148,181,229,142,139,0
000810  87bae794
000814  b5e58e8b
000818  00      
000819  00                DCB      0
00081a  00                DCB      0
00081b  00                DCB      0
                  |L8.2076|
00081c  e99990e5          DCB      233,153,144,229,136,182,231,148,181,230,181,129,0
000820  88b6e794
000824  b5e6b581
000828  00      
000829  00                DCB      0
00082a  00                DCB      0
00082b  00                DCB      0
                  |L8.2092|
00082c  e688aae6          DCB      230,136,170,230,173,162,231,148,181,230,181,129,0
000830  ada2e794
000834  b5e6b581
000838  00      
000839  00                DCB      0
00083a  00                DCB      0
00083b  00                DCB      0
                  |L8.2108|
00083c  252e3266          DCB      "%.2f",0
000840  00      
000841  00                DCB      0
000842  00                DCB      0
000843  00                DCB      0
                  |L8.2116|
                          DCD      GUI_Font24_1
                  |L8.2120|
                          DCD      GUI_FontD24x32

                          AREA ||i.test_pow||, CODE, READONLY, ALIGN=2

                  test_pow PROC
;;;1227   
;;;1228   void test_pow(void)
000000  b570              PUSH     {r4-r6,lr}
;;;1229   {
;;;1230   
;;;1231       if(pow_sw == pow_on && para_set1 == set_1_on)
000002  4834              LDR      r0,|L9.212|
000004  7800              LDRB     r0,[r0,#0]  ; pow_sw
;;;1232       {
;;;1233           if(DISS_POW_Voltage*100 > set_max_v || DISS_POW_Voltage*100 < set_min_v || DISS_POW_Current * 100 > set_max_c || DISS_POW_Current * 100 < set_min_c)
;;;1234           {
;;;1235               if(para_set4 == set_4_on){
;;;1236                   BEEP_Tiggr();
;;;1237               }
;;;1238               TM1650_SET_LED(0x68,0x70);//FAIL灯
;;;1239               GPIO_SetBits(GPIOD,GPIO_Pin_12);//            
000006  4d34              LDR      r5,|L9.216|
000008  f44f5480          MOV      r4,#0x1000
00000c  2801              CMP      r0,#1                 ;1231
00000e  d103              BNE      |L9.24|
000010  4832              LDR      r0,|L9.220|
000012  7800              LDRB     r0,[r0,#0]            ;1231  ; para_set1
000014  28ff              CMP      r0,#0xff              ;1231
000016  d009              BEQ      |L9.44|
                  |L9.24|
;;;1240           }else{
;;;1241               GPIO_ResetBits(GPIOD,GPIO_Pin_12);
;;;1242               TM1650_SET_LED(0x48,0x71);
;;;1243               TM1650_SET_LED(0x68,0xF2);//PASS灯
;;;1244           }        
;;;1245       }else
;;;1246       {
;;;1247           TM1650_SET_LED(0x68,0x70);
000018  2170              MOVS     r1,#0x70
00001a  2068              MOVS     r0,#0x68
00001c  f7fffffe          BL       TM1650_SET_LED
;;;1248           GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
000020  4621              MOV      r1,r4
000022  4628              MOV      r0,r5
000024  e8bd4070          POP      {r4-r6,lr}
000028  f7ffbffe          B.W      GPIO_ResetBits
                  |L9.44|
00002c  482c              LDR      r0,|L9.224|
00002e  eddf0a2d          VLDR     s1,|L9.228|
000032  4a2d              LDR      r2,|L9.232|
000034  ed900a00          VLDR     s0,[r0,#0]            ;1233
000038  6b93              LDR      r3,[r2,#0x38]         ;1233  ; Run_Control
00003a  ee200a20          VMUL.F32 s0,s0,s1              ;1233
00003e  ee013a10          VMOV     s2,r3                 ;1233
000042  eeb81a41          VCVT.F32.U32 s2,s2                 ;1233
000046  eeb40ac1          VCMPE.F32 s0,s2                 ;1233
00004a  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1233
00004e  dc22              BGT      |L9.150|
000050  6bd3              LDR      r3,[r2,#0x3c]         ;1233  ; Run_Control
000052  ee013a10          VMOV     s2,r3                 ;1233
000056  eeb81a41          VCVT.F32.U32 s2,s2                 ;1233
00005a  eeb40ac1          VCMPE.F32 s0,s2                 ;1233
00005e  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1233
000062  d318              BCC      |L9.150|
000064  4821              LDR      r0,|L9.236|
000066  ed900a00          VLDR     s0,[r0,#0]            ;1233
00006a  6c90              LDR      r0,[r2,#0x48]         ;1233  ; Run_Control
00006c  ee200a20          VMUL.F32 s0,s0,s1              ;1233
000070  ee000a90          VMOV     s1,r0                 ;1233
000074  eef80a60          VCVT.F32.U32 s1,s1                 ;1233
000078  eeb40ae0          VCMPE.F32 s0,s1                 ;1233
00007c  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1233
000080  dc09              BGT      |L9.150|
000082  6cd0              LDR      r0,[r2,#0x4c]         ;1233  ; Run_Control
000084  ee000a90          VMOV     s1,r0                 ;1233
000088  eef80a60          VCVT.F32.U32 s1,s1                 ;1233
00008c  eeb40ae0          VCMPE.F32 s0,s1                 ;1233
000090  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1233
000094  d20f              BCS      |L9.182|
                  |L9.150|
000096  4816              LDR      r0,|L9.240|
000098  7800              LDRB     r0,[r0,#0]            ;1235  ; para_set4
00009a  28ff              CMP      r0,#0xff              ;1235
00009c  d101              BNE      |L9.162|
00009e  f7fffffe          BL       BEEP_Tiggr
                  |L9.162|
0000a2  2170              MOVS     r1,#0x70              ;1238
0000a4  2068              MOVS     r0,#0x68              ;1238
0000a6  f7fffffe          BL       TM1650_SET_LED
0000aa  4621              MOV      r1,r4                 ;1239
0000ac  4628              MOV      r0,r5                 ;1239
0000ae  e8bd4070          POP      {r4-r6,lr}            ;1239
0000b2  f7ffbffe          B.W      GPIO_SetBits
                  |L9.182|
0000b6  4621              MOV      r1,r4                 ;1241
0000b8  4628              MOV      r0,r5                 ;1241
0000ba  f7fffffe          BL       GPIO_ResetBits
0000be  2171              MOVS     r1,#0x71              ;1242
0000c0  2048              MOVS     r0,#0x48              ;1242
0000c2  f7fffffe          BL       TM1650_SET_LED
0000c6  e8bd4070          POP      {r4-r6,lr}            ;1243
0000ca  21f2              MOVS     r1,#0xf2              ;1243
0000cc  2068              MOVS     r0,#0x68              ;1243
0000ce  f7ffbffe          B.W      TM1650_SET_LED
;;;1249       }
;;;1250   }
;;;1251   
                          ENDP

0000d2  0000              DCW      0x0000
                  |L9.212|
                          DCD      ||.data||
                  |L9.216|
                          DCD      0x40020c00
                  |L9.220|
                          DCD      para_set1
                  |L9.224|
                          DCD      DISS_POW_Voltage
                  |L9.228|
0000e4  42c80000          DCFS     0x42c80000 ; 100
                  |L9.232|
                          DCD      Run_Control
                  |L9.236|
                          DCD      DISS_POW_Current
                  |L9.240|
                          DCD      para_set4

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aDialogCreate1
                          DCD      WINDOW_CreateIndirect
                          DCD      ||.conststring||
000008  08000000          DCW      0x0800,0x0000
00000c  000001e0          DCW      0x0000,0x01e0
000010  01100000          DCW      0x0110,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  08020053          DCW      0x0802,0x0053
000028  00e2004d          DCW      0x00e2,0x004d
00002c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000040  080300a3          DCW      0x0803,0x00a3
000044  00e2004d          DCW      0x00e2,0x004d
000048  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
00005c  080400f3          DCW      0x0804,0x00f3
000060  00e2004d          DCW      0x00e2,0x004d
000064  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000078  08050143          DCW      0x0805,0x0143
00007c  00e2004d          DCW      0x00e2,0x004d
000080  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000094  08060193          DCW      0x0806,0x0193
000098  00e2004d          DCW      0x00e2,0x004d
00009c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000b0  0807001c          DCW      0x0807,0x001c
0000b4  00320040          DCW      0x0032,0x0040
0000b8  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000cc  0808001c          DCW      0x0808,0x001c
0000d0  00780040          DCW      0x0078,0x0040
0000d4  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000e8  082000f0          DCW      0x0820,0x00f0
0000ec  00320020          DCW      0x0032,0x0020
0000f0  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000104  082100f0          DCW      0x0821,0x00f0
000108  00790020          DCW      0x0079,0x0020
00010c  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000120  083d0122          DCW      0x083d,0x0122
000124  004b0050          DCW      0x004b,0x0050
000128  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00013c  083e0122          DCW      0x083e,0x0122
000140  00640050          DCW      0x0064,0x0050
000144  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000158  0866017c          DCW      0x0866,0x017c
00015c  004b0035          DCW      0x004b,0x0035
000160  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000174  08670172          DCW      0x0867,0x0172
000178  00640041          DCW      0x0064,0x0041
00017c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000190  0893005f          DCW      0x0893,0x005f
000194  00300096          DCW      0x0030,0x0096
000198  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001ac  0894005f          DCW      0x0894,0x005f
0001b0  00740096          DCW      0x0074,0x0096
0001b4  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001c8  08950190          DCW      0x0895,0x0190
0001cc  00040032          DCW      0x0004,0x0032
0001d0  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001e4  090b005f          DCW      0x090b,0x005f
0001e8  00b80096          DCW      0x00b8,0x0096
0001ec  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000200  090c012c          DCW      0x090c,0x012c
000204  00020050          DCW      0x0002,0x0050
000208  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00021c  092e0172          DCW      0x092e,0x0172
000220  00960041          DCW      0x0096,0x0041
000224  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000238  093a0122          DCW      0x093a,0x0122
00023c  00960050          DCW      0x0096,0x0050
000240  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000254  093c017c          DCW      0x093c,0x017c
000258  00080014          DCW      0x0008,0x0014
00025c  000f0000          DCW      0x000f,0x0000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  57696e64          DCB      "Window",0
000004  6f7700  
000007  00                DCB      0
000008  42757474          DCB      "Button",0
00000c  6f6e00  
00000f  00                DCB      0
000010  54657874          DCB      "Text",0
000014  00      

                          AREA ||.data||, DATA, ALIGN=2

                  pow_sw
000000  00                DCB      0x00
                  status_flash
000001  00                DCB      0x00
                  cdelay
000002  0000              DCB      0x00,0x00
                  hWinWind
                          DCD      0x00000000
                  pow_cutoffc
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\APP\\menu.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_menu_c_pow_sw____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_menu_c_pow_sw____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_menu_c_pow_sw____REVSH|
#line 144
|__asm___6_menu_c_pow_sw____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
